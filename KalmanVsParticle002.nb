(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1172942,      22031]
NotebookOptionsPosition[   1145235,      21564]
NotebookOutlinePosition[   1147367,      21620]
CellTagsIndexPosition[   1147163,      21610]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Kalman Folding versus Particle Filtering", "Title",
 CellChangeTimes->{{3.727038100871808*^9, 3.727038119380846*^9}, {
  3.727471593317396*^9, 3.7274715984595823`*^9}, {3.729120277549485*^9, 
  3.729120279330949*^9}, {3.729164818218039*^9, 3.729164831400428*^9}, {
  3.72917959045429*^9, 3.7291795965711203`*^9}, {3.7291976388841267`*^9, 
  3.729197641402032*^9}, {3.730240310944982*^9, 3.7302403258169117`*^9}},
 CellTags->"c:1",ExpressionUUID->"46e72bbd-9d98-4fc3-a048-c627688b2d9e"],

Cell["\<\
Brian Beckman
16 Mar 2018\
\>", "Text",
 CellChangeTimes->{{3.727471602355763*^9, 3.7274716101393967`*^9}, {
   3.727925773402236*^9, 3.727925775055613*^9}, {3.7291796049113493`*^9, 
   3.729179606176675*^9}, 3.729642307282371*^9, {3.72971195796128*^9, 
   3.729711959054461*^9}, {3.7297934248121*^9, 3.729793424979403*^9}, {
   3.730240347009062*^9, 
   3.73024034835723*^9}},ExpressionUUID->"0ef69e3e-2e07-4f1e-b61f-\
a0ae41c8374c"],

Cell[CellGroupData[{

Cell["Abstract", "Chapter",
 CellChangeTimes->{{3.729196441150124*^9, 3.7291964428392887`*^9}, {
  3.729793427963233*^9, 
  3.7297934299790154`*^9}},ExpressionUUID->"7b33e853-10e8-4eca-8119-\
0a1902f7cb69"],

Cell[TextData[{
 "Kalman Folding is equivalent to Renormalized Recurrent Least Squares, and \
is Bayesian by construction (Beckman, 2018, ",
 ButtonBox["https://goo.gl/CwLYjf",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://goo.gl/CwLYjf"], None},
  ButtonNote->"https://goo.gl/CwLYjf"],
 "). Therefore, it regularizes well. Sticking with concrete, numerical \
examples, we show that particle filtering can reproduce the results of Kalman \
Folding. For a more theoretical analysis, see Fern\[AAcute]ndez-Villaverde \
(",
 ButtonBox["http://www.ssc.upenn.edu/~jesusfv/filters_format.pdf",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.ssc.upenn.edu/~jesusfv/filters_format.pdf"], None},
  ButtonNote->"http://www.ssc.upenn.edu/~jesusfv/filters_format.pdf"],
 ")."
}], "Text",
 CellChangeTimes->{{3.7291964484304113`*^9, 3.729196613945616*^9}, 
   3.7292030970835457`*^9, {3.72968771341329*^9, 3.729687716858973*^9}, {
   3.729711791511696*^9, 3.72971179468015*^9}, {3.729793438706923*^9, 
   3.7297938892411823`*^9}, {3.729793935626384*^9, 3.729793942511643*^9}, {
   3.729793972831012*^9, 3.7297939745590477`*^9}, {3.729794610127033*^9, 
   3.729794682412895*^9}, {3.729794964535297*^9, 3.729795210547194*^9}, {
   3.729795571545514*^9, 3.7297956107276*^9}, {3.729796915642858*^9, 
   3.729796923833707*^9}, 3.729885268229594*^9, {3.730240350695836*^9, 
   3.730240590431933*^9}, 
   3.730309292903762*^9},ExpressionUUID->"c320baf2-7cc2-420c-8595-\
6c07171d2c4f"],

Cell["\<\
We show, by numerical examples, that Kalman folding (KAL) produces the same \
results as recurrent least squares (RLS) and maximum a-posteriori (MAP), for \
appropriate choices of a-priori covariances, i.e., regularization \
hyperparameters. KAL and RLS are more intuitive than MAP for practical \
applications, plus offer space-time efficiency over MAP by avoiding storage \
and multiplication of large matrices. Because RLS and KAL are overt \
recurrences, a-priori data are necessary to bootstrap them, so regularization \
is naturally built-in to the formulation: they are Bayesian by construction. \
Contrast MAP, wherein a-priori belief is introduced as a Bayesian \
modification of traditional, maximum-likelihood (MLE) least-squares through \
the normal equations. 

We exploit the novel fact that MAP is invariant when its hyperparameters are \
both swapped and inverted. After that transformation, the MAP equations \
strongly resemble the equations of Kalman filtering. This resemblance may \
suggest a future, general proof of the invariance, perhaps by conversion of \
MAP from explicit to recurrent form.\
\>", "Text",
 CellChangeTimes->{{3.7291964484304113`*^9, 3.729196613945616*^9}, 
   3.7292030970835457`*^9, {3.72968771341329*^9, 3.729687716858973*^9}, {
   3.729711791511696*^9, 3.72971179468015*^9}, {3.729793438706923*^9, 
   3.7297938892411823`*^9}, {3.729793935626384*^9, 3.729793942511643*^9}, {
   3.729793972831012*^9, 3.7297939745590477`*^9}, {3.729794610127033*^9, 
   3.729794682412895*^9}, {3.729794964535297*^9, 3.729795210547194*^9}, {
   3.729795571545514*^9, 3.7297956107276*^9}, {3.729796915642858*^9, 
   3.729796923833707*^9}, 3.729885268229594*^9, {3.730240350695836*^9, 
   3.730240590431933*^9}, 
   3.730309307675218*^9},ExpressionUUID->"515689e5-24c9-4f03-a68b-\
2166895245cd"]
}, Closed]],

Cell[CellGroupData[{

Cell["Recurrence", "Chapter",
 CellChangeTimes->{{3.7270402093685093`*^9, 3.727040216990353*^9}, {
  3.72744887906024*^9, 3.727448879173937*^9}},
 CellTags->"c:9",ExpressionUUID->"5ca12084-879f-4910-924b-31070b62bbff"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["Fold", TraditionalForm]], "Code",ExpressionUUID->
  "9d09a6fc-b121-455e-a488-8b5ba33270cc"],
 " this recurrence over ",
 Cell[BoxData[
  FormBox["\[CapitalZeta]", TraditionalForm]],ExpressionUUID->
  "604c3712-17a2-49f9-be34-dd3b93db078a"],
 " and ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "cf261e04-8ab6-46fc-8bda-0e7b27452129"],
 ":"
}], "Text",
 CellChangeTimes->{{3.7274333353229113`*^9, 3.727433378179881*^9}, {
  3.7274334464649353`*^9, 3.727433551754867*^9}, {3.727433834133542*^9, 
  3.727433857990193*^9}, {3.7274406408677483`*^9, 3.727440686530654*^9}, {
  3.7274413441593647`*^9, 3.7274413518281183`*^9}, {3.727472397267685*^9, 
  3.727472404763022*^9}, {3.727475498217351*^9, 3.727475507311516*^9}, {
  3.728949021675457*^9, 3.728949025315466*^9}, {3.7296432127240763`*^9, 
  3.729643225187282*^9}},ExpressionUUID->"d8064256-ea88-4413-9e76-\
c45a89df3e2c"],

Cell[BoxData[{
 FormBox[
  RowBox[{"\[Xi]", "\[LeftArrow]", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[CapitalLambda]", "+", 
       RowBox[{
        RowBox[{"a", "\[Transpose]"}], "\[CenterDot]", "a"}]}], ")"}], 
     RowBox[{"-", "1"}]], "\[CenterDot]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"a", "\[Transpose]"}], "\[CenterDot]", "\[Zeta]"}], "+", 
      RowBox[{"\[CapitalLambda]", "\[CenterDot]", "\[Xi]"}]}], ")"}]}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"\[CapitalLambda]", "\[LeftArrow]", 
   RowBox[{"(", 
    RowBox[{"\[CapitalLambda]", "+", 
     RowBox[{
      RowBox[{"a", "\[Transpose]"}], "\[CenterDot]", "a"}]}], ")"}]}], 
  TraditionalForm]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.7274335859903107`*^9, 3.727433717944153*^9}, {
  3.727435926163211*^9, 3.7274359787146387`*^9}, {3.7274435816067543`*^9, 
  3.7274435995641823`*^9}, {3.727443898455867*^9, 3.727443902554981*^9}, {
  3.7289483265782537`*^9, 
  3.728948362573649*^9}},ExpressionUUID->"b41450de-8c92-4abf-a6d8-\
d24839b3c1b9"],

Cell["where", "Text",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.7274743159268417`*^9, 
   3.7274743397668333`*^9}, {3.727475519390863*^9, 3.727475555533572*^9}, {
   3.728948365542074*^9, 3.728948365542119*^9}, 3.728948905148108*^9, {
   3.728948947025461*^9, 3.728948959432898*^9}, {3.729163268464349*^9, 
   3.729163279091194*^9}},ExpressionUUID->"b69e6191-6f6f-479e-9f67-\
c7f4911cd65f"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["\[Xi]", TraditionalForm]],ExpressionUUID->
  "ca15d208-e524-41c0-86fa-973d1991e372"],
 " is the current estimate of ",
 Cell[BoxData[
  FormBox["\[CapitalXi]", TraditionalForm]],ExpressionUUID->
  "7e9f4450-1588-4d24-a011-c32f0e00a6ac"]
}], "Item",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.7274743159268417`*^9, 
   3.7274743397668333`*^9}, {3.727475519390863*^9, 3.727475555533572*^9}, {
   3.728948365542074*^9, 3.728948365542119*^9}, 3.728948905148108*^9, {
   3.728948947025461*^9, 3.728948959432898*^9}, {3.729163268464349*^9, 
   3.7291632861423903`*^9}},ExpressionUUID->"a79a1b73-f840-4373-9de5-\
4f3d510e4877"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "a23b953c-cf49-41f8-8447-fbb397bff922"],
 " and ",
 Cell[BoxData[
  FormBox["\[Zeta]", TraditionalForm]],ExpressionUUID->
  "6d94e1b0-0bbb-42e2-906c-580263360fee"],
 " are matched rows of ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "9a4623dd-e230-41f2-9800-86cd6f5d5c72"],
 " and ",
 Cell[BoxData[
  FormBox["\[CapitalZeta]", TraditionalForm]],ExpressionUUID->
  "eb9de015-f9e0-4d0b-a5ef-5bef8a6f08fe"]
}], "Item",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.7274743159268417`*^9, 
   3.7274743397668333`*^9}, {3.727475519390863*^9, 3.727475555533572*^9}, {
   3.728948365542074*^9, 3.728948365542119*^9}, 3.728948905148108*^9, {
   3.728948947025461*^9, 3.728948959432898*^9}, {3.729163268464349*^9, 
   3.72916328446143*^9}},ExpressionUUID->"25c14485-f621-49c2-815a-\
0138e9bcfafe"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\[CapitalLambda]", TraditionalForm]],ExpressionUUID->
  "40f23918-c675-4b98-8edb-bb01eadd40cd"],
 " accumulates ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", "\[Transpose]"}], "\[CenterDot]", "A"}], TraditionalForm]],
  ExpressionUUID->"dadb94d5-443c-474e-b745-213b7ceefa94"],
 ". "
}], "Item",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.7274743159268417`*^9, 
   3.7274743397668333`*^9}, {3.727475519390863*^9, 3.727475555533572*^9}, {
   3.728948365542074*^9, 3.728948365542119*^9}, 3.728948905148108*^9, {
   3.728948947025461*^9, 3.728948959432898*^9}, {3.729163268464349*^9, 
   3.729163280317943*^9}},ExpressionUUID->"b287db3f-854c-4605-9ef7-\
c238056ab28a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Derivation Sketch", "Subsection",
 CellChangeTimes->{{3.729181602847373*^9, 
  3.7291816059298487`*^9}},ExpressionUUID->"2e3a9bc5-72f8-4480-9a80-\
6f3b0bf6d7a4"],

Cell["\<\
Derive the recurrence as follows: Treat the estimate-so-far, \
\>", "Text",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.7274743159268417`*^9, 
   3.727474381777117*^9}, {3.7274744338469057`*^9, 3.727474441826235*^9}, {
   3.727474630428966*^9, 3.727474631651125*^9}, {3.727474814968113*^9, 
   3.7274748698817673`*^9}, {3.727475577962327*^9, 3.7274756335231857`*^9}, {
   3.7278780344572*^9, 3.727878045059162*^9}, 3.727966016823514*^9, {
   3.7279661542692223`*^9, 3.727966155428653*^9}, {3.727966432921638*^9, 
   3.7279665200041933`*^9}, {3.729163880807461*^9, 3.729163884901907*^9}, 
   3.7291816149796658`*^9},ExpressionUUID->"b476c8cc-7dd2-4347-bad7-\
323d48c72da2"],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Xi]", 
    RowBox[{"so", "-", "far"}]], 
   OverscriptBox["=", "def"], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "\[Transpose]"}], "\[CenterDot]", "A"}], ")"}], 
     RowBox[{"-", "1"}]], "\[CenterDot]", 
    RowBox[{"A", "\[Transpose]"}], "\[CenterDot]", 
    SubscriptBox["\[CapitalZeta]", 
     RowBox[{"so", "-", "far"}]]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.7274743159268417`*^9, 
   3.727474381777117*^9}, {3.7274744338469057`*^9, 3.727474441826235*^9}, {
   3.727474630428966*^9, 3.727474631651125*^9}, {3.727474814968113*^9, 
   3.7274748698817673`*^9}, {3.727475577962327*^9, 3.7274756335231857`*^9}, {
   3.7278780344572*^9, 3.727878045059162*^9}, 3.727966016823514*^9, {
   3.7279661542692223`*^9, 3.727966155428653*^9}, {3.727966432921638*^9, 
   3.727966534440386*^9}, 3.728948369963612*^9, {3.729163903631165*^9, 
   3.7291639050399637`*^9}},ExpressionUUID->"7d3a92e3-5494-448b-b4f2-\
9dabf9fef7b7"],

Cell["as just one more observation with information matrix ", "Text",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.7274743159268417`*^9, 
   3.727474381777117*^9}, {3.7274744338469057`*^9, 3.727474441826235*^9}, {
   3.727474630428966*^9, 3.727474631651125*^9}, {3.727474814968113*^9, 
   3.7274748698817673`*^9}, {3.727475577962327*^9, 3.7274756335231857`*^9}, {
   3.7278780344572*^9, 3.727878045059162*^9}, 3.727966016823514*^9, {
   3.7279661542692223`*^9, 3.727966155428653*^9}, {3.727966432921638*^9, 
   3.7279665258422337`*^9}, {3.728091815451824*^9, 3.728091821154443*^9}, 
   3.729023129658637*^9, {3.729643258643651*^9, 
   3.729643268273799*^9}},ExpressionUUID->"fd432c05-60e5-45d9-a0d4-\
e9815082cb3a"],

Cell[BoxData[
 FormBox[
  RowBox[{"\[CapitalLambda]", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["A", 
      RowBox[{"so", "-", "far"}]], "\[Transpose]"}], "\[CenterDot]", 
    SubscriptBox["A", 
     RowBox[{"so", "-", "far"}]]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.7274743159268417`*^9, 
   3.727474381777117*^9}, {3.7274744338469057`*^9, 3.727474441826235*^9}, {
   3.727474630428966*^9, 3.727474631651125*^9}, {3.727474814968113*^9, 
   3.7274748698817673`*^9}, {3.727475577962327*^9, 3.7274756335231857`*^9}, {
   3.7278780344572*^9, 3.727878045059162*^9}, 3.727966016823514*^9, {
   3.7279661542692223`*^9, 3.727966155428653*^9}, {3.727966432921638*^9, 
   3.7279665258422337`*^9}, {3.728091815451824*^9, 3.728091821154443*^9}, {
   3.729023134641241*^9, 
   3.729023151157517*^9}},ExpressionUUID->"cb5ec10e-ef83-45dc-a95d-\
b26bb7cc2387"],

Cell[TextData[{
 "The scalar ",
 StyleBox["performance",
  FontSlant->"Italic"],
 " or ",
 StyleBox["squared error",
  FontSlant->"Italic"],
 " of the estimate, so far, is"
}], "Text",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.7274743159268417`*^9, 
   3.727474381777117*^9}, {3.7274744338469057`*^9, 3.727474441826235*^9}, {
   3.727474630428966*^9, 3.727474631651125*^9}, {3.727474814968113*^9, 
   3.7274748698817673`*^9}, {3.727475577962327*^9, 3.7274756335231857`*^9}, {
   3.7278780344572*^9, 3.727878045059162*^9}, 3.727966016823514*^9, {
   3.7279661542692223`*^9, 3.727966155428653*^9}, {3.727966432921638*^9, 
   3.7279665258422337`*^9}, {3.728091815451824*^9, 
   3.728091821154443*^9}},ExpressionUUID->"0fc7f18d-76fb-476f-9557-\
b54be5d9d15c"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"J", "(", "\[Xi]", ")"}], "  ", "=", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[CapitalZeta]", 
         RowBox[{"so", "-", "far"}]], "-", 
        RowBox[{
         SubscriptBox["A", 
          RowBox[{"so", "-", "far"}]], "\[CenterDot]", "\[Xi]"}]}], ")"}], 
      "\[Transpose]"}], "\[CenterDot]", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[CapitalZeta]", 
        RowBox[{"so", "-", "far"}]], "-", 
       RowBox[{
        SubscriptBox["A", 
         RowBox[{"so", "-", "far"}]], "\[CenterDot]", "\[Xi]"}]}], ")"}]}], 
    "  ", "=", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Xi]", "-", 
        SubscriptBox["\[Xi]", 
         RowBox[{"so", "-", "far"}]]}], ")"}], "\[Transpose]"}], 
     "\[CenterDot]", "\[CapitalLambda]", "\[CenterDot]", 
     RowBox[{"(", 
      RowBox[{"\[Xi]", "-", 
       SubscriptBox["\[Xi]", 
        RowBox[{"so", "-", "far"}]]}], ")"}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.7274743159268417`*^9, 
   3.727474381777117*^9}, {3.7274744338469057`*^9, 3.727474441826235*^9}, {
   3.727474630428966*^9, 3.727474631651125*^9}, {3.727474814968113*^9, 
   3.7274748698817673`*^9}, {3.727475577962327*^9, 3.7274756335231857`*^9}, {
   3.7278780344572*^9, 3.727878045059162*^9}, {3.727966018203845*^9, 
   3.727966033785829*^9}, {3.727966098475103*^9, 3.7279661060884457`*^9}, {
   3.727966143206888*^9, 3.727966171156918*^9}, {3.7279662043636503`*^9, 
   3.727966213619438*^9}, {3.727966500313883*^9, 3.727966508975876*^9}, {
   3.7289483740986834`*^9, 3.728948376110648*^9}, {3.729023185419231*^9, 
   3.729023197425653*^9}},ExpressionUUID->"c9484120-6938-4df2-8e1a-\
776c32bc4669"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox["\[Xi]", TraditionalForm]],ExpressionUUID->
  "dabda0f9-23ef-422e-9934-9019237efd52"],
 " is the unknown true parameter vector, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalZeta]", 
    RowBox[{"so", "-", "far"}]], TraditionalForm]],ExpressionUUID->
  "684f54e2-bac0-42af-ad38-c1084a76ae15"],
 " is the column vector of all observations so-far, and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalLambda]", "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["A", 
       RowBox[{"so", "-", "far"}]], "\[Transpose]"}], "\[CenterDot]", 
     SubscriptBox["A", 
      RowBox[{"so", "-", "far"}]]}]}], TraditionalForm]],ExpressionUUID->
  "88dc0af1-fc18-4f07-8ec8-6c0cef0ffb99"],
 " . Adding a new observation, ",
 Cell[BoxData[
  FormBox["\[Zeta]", TraditionalForm]],ExpressionUUID->
  "f1276f71-b142-463f-9ad8-441cb4641cde"],
 " and its corresponding partial row covector ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "53497380-bd47-4d43-9f90-bf6637131b87"],
 ", increases the error ",
 Cell[BoxData[
  FormBox[
   RowBox[{"J", "(", "\[Xi]", ")"}], TraditionalForm]],ExpressionUUID->
  "f0d40762-7e96-4647-bdc6-37929527ce7b"],
 " by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Zeta]", "-", 
       RowBox[{"a", "\[CenterDot]", "\[Xi]"}]}], ")"}], "\[Transpose]"}], 
    "\[CenterDot]", 
    RowBox[{"(", 
     RowBox[{"\[Zeta]", "-", 
      RowBox[{"a", "\[CenterDot]", "\[Xi]"}]}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"9ec14d68-822d-4fce-a2c9-85c5fb353fe0"],
 ". Minimize the new total error with respect to ",
 Cell[BoxData[
  FormBox["\[Xi]", TraditionalForm]],ExpressionUUID->
  "96d4bc3a-53e7-428b-90b0-341c7f7145b3"],
 " to find the recurrence (exercise). \[FilledSquare]\n\nWe see that RLS \
perforce introduces an a-priori estimate ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "0"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a3077632-64d2-4dd3-97b2-78d84dfbc138"],
 " and its covariance, which is the inverse of the information matrix ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalLambda]", "0"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "09ea8b7f-b9f9-4c6c-bfbc-41c5d12b2f3e"],
 ". RLS is Bayesian by construction. We show below that, when renormalized \
with an a-priori covariance for the observations ",
 Cell[BoxData[
  FormBox["\[Zeta]", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "27be3aff-c6a3-47ce-bd0d-45ac2c3f778a"],
 ", is theoretically equivalent to KAL and numerically equivalent to MAP. \
Proof of theoretical equivalence to MAP awaits future work."
}], "Text",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.7274743159268417`*^9, 
   3.727474381777117*^9}, {3.7274744338469057`*^9, 3.727474441826235*^9}, {
   3.727474630428966*^9, 3.727474631651125*^9}, {3.727474814968113*^9, 
   3.7274748698817673`*^9}, {3.727475577962327*^9, 3.7274756335231857`*^9}, {
   3.7278780344572*^9, 3.727878045059162*^9}, {3.727966018203845*^9, 
   3.727966022744957*^9}, {3.727966060652214*^9, 3.7279660814388037`*^9}, {
   3.727966122293776*^9, 3.727966131387149*^9}, {3.727966225308963*^9, 
   3.7279663153865147`*^9}, {3.72796657797972*^9, 3.7279665841676197`*^9}, {
   3.7290232013137093`*^9, 3.7290232220612392`*^9}, {3.729023260685502*^9, 
   3.729023282116056*^9}, 3.729119179347542*^9, {3.729163926938323*^9, 
   3.729163937969397*^9}, {3.729796790646969*^9, 3.72979688978856*^9}, {
   3.729796948582293*^9, 
   3.7297970605133133`*^9}},ExpressionUUID->"d23a3057-56ef-41ce-84aa-\
fdc26a29db70"]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical Demonstration", "Subsection",
 CellChangeTimes->{{3.729181632544861*^9, 
  3.7291816365144157`*^9}},ExpressionUUID->"be95aebf-ae56-4456-8c29-\
d08dcb53f0e5"],

Cell[TextData[{
 "Bootstrap the recurrence with ad-hoc, a-priori values ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Xi]", "0"], "=", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {"0", "0"}
       }], ")"}], "\[Transpose]"}]}], TraditionalForm]],ExpressionUUID->
  "95c478f8-14cb-4c33-8055-6e0a24add5df"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[CapitalLambda]", "0"], "=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]], "0"}
        }], ")"}], 
      RowBox[{"(", GridBox[{
         {"0", 
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]]}
        }], ")"}]}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "e79d365d-7771-4fa6-b690-5108edb5e668"],
 ". "
}], "Text",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.727475653063583*^9, 
   3.727475668421556*^9}, {3.727878056292527*^9, 3.7278781337625647`*^9}, {
   3.727966321732579*^9, 3.727966322440028*^9}, {3.727966591137054*^9, 
   3.727966628253271*^9}, {3.727966659401678*^9, 3.7279667699874363`*^9}, {
   3.728091848600717*^9, 3.728091848856659*^9}, {3.7289483786020403`*^9, 
   3.728948380301387*^9}, {3.729163955385151*^9, 3.729163980174839*^9}, {
   3.729643297812354*^9, 3.729643332107801*^9}, {3.7297970766391563`*^9, 
   3.7297970790208406`*^9}},ExpressionUUID->"649161c4-6177-4aec-b03d-\
15d263642f9d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "update", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"update", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Xi]_", ",", "\[CapitalLambda]_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Zeta]_", ",", "a_"}], "}"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalPi]", "=", 
        RowBox[{"(", 
         RowBox[{"\[CapitalLambda]", "+", 
          RowBox[{
           RowBox[{"a", "\[Transpose]"}], ".", "a"}]}], ")"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Inverse", "[", "\[CapitalPi]", "]"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"a", "\[Transpose]"}], ".", "\[Zeta]"}], "+", " ", 
           RowBox[{"\[CapitalLambda]", ".", "\[Xi]"}]}], ")"}]}], ",", 
        "\[CapitalPi]"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"MatrixForm", "/@", "\[IndentingNewLine]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"mBar"},
         {"bBar"}
        }], ")"}], ",", "\[CapitalPi]"}], "}"}], "=", "\[IndentingNewLine]", 
    RowBox[{
     StyleBox["Fold",
      Background->RGBColor[1, 1, 0]], "[", 
     RowBox[{"update", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", GridBox[{
           {"0"},
           {"0"}
          }], ")"}], ",", 
        RowBox[{"(", GridBox[{
           {"1.0*^-6", "0"},
           {"0", "1.0*^-6"}
          }], ")"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"List", "/@", "data"}], ",", 
         RowBox[{"List", "/@", "partials"}]}], "}"}], "\[Transpose]"}]}], 
     "]"}]}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.727054852495049*^9, 3.72705494257406*^9}, {
   3.727055026792467*^9, 3.727055093506559*^9}, {3.7270551930291023`*^9, 
   3.727055263833913*^9}, {3.727055297216107*^9, 3.7270554270906563`*^9}, {
   3.7270560338846903`*^9, 3.72705612788085*^9}, {3.7270561855129213`*^9, 
   3.7270561959544077`*^9}, {3.727056250031129*^9, 3.727056367103942*^9}, {
   3.727056427865035*^9, 3.727056443080068*^9}, {3.727056561323501*^9, 
   3.727056598046468*^9}, {3.727056640141169*^9, 3.727056654582451*^9}, {
   3.727056728700244*^9, 3.7270567914565277`*^9}, {3.727056869366274*^9, 
   3.727056921039433*^9}, 3.72705709924362*^9, {3.727057420502048*^9, 
   3.7270575464285316`*^9}, {3.7270577446377487`*^9, 3.727057775909028*^9}, {
   3.7270578799866133`*^9, 3.727057901007744*^9}, 3.7270581603330593`*^9, {
   3.727058349930079*^9, 3.7270584478842707`*^9}, {3.727058490337566*^9, 
   3.727058577824399*^9}, {3.727058673744141*^9, 3.7270586947547493`*^9}, {
   3.727058788099071*^9, 3.7270588909590683`*^9}, {3.727058934322414*^9, 
   3.7270589393580847`*^9}, {3.72705898616982*^9, 3.7270589868650723`*^9}, {
   3.7270592331231947`*^9, 3.727059237300102*^9}, {3.7274435231168203`*^9, 
   3.727443546500602*^9}, {3.727443876120749*^9, 3.7274438848810577`*^9}, {
   3.727444759010458*^9, 3.727444822403467*^9}, {3.727444904584729*^9, 
   3.727444917600658*^9}, {3.727444951170147*^9, 3.72744495624857*^9}, {
   3.727455276322372*^9, 3.7274553027713842`*^9}, {3.727455828581184*^9, 
   3.727455858661305*^9}, {3.7274561810931997`*^9, 3.727456183162497*^9}, {
   3.727472496770452*^9, 3.727472540592374*^9}, {3.727472571262414*^9, 
   3.7274725926081057`*^9}, {3.727473460371025*^9, 3.727473470385874*^9}, {
   3.727967024755598*^9, 3.7279670373987417`*^9}, 3.727967235445434*^9, {
   3.728948393392125*^9, 3.728948394937408*^9}, {3.729174117188925*^9, 
   3.729174123668703*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"1ca2d39a-8b84-45ae-9746-a7660d91ebc7"],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"data\\\", \\\",\\\", \\\"partials\\\"}], \\\"}\\\"}]\\) cannot be \
transposed.\"",2,3,1,30924570824227536513,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.730380090801103*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"f27539ff-1d5d-4cc6-b8bc-f2f26c80610a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"0.`", "\[VeryThinSpace]", "+", 
              RowBox[{
               RowBox[{"Transpose", "[", "partials", "]"}], ".", "data"}]}], 
             ")"}], " ", 
            RowBox[{
             RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}]}], 
           RowBox[{"1.`*^-12", "+", 
            RowBox[{"2.`*^-6", " ", 
             RowBox[{
              RowBox[{"Transpose", "[", "partials", "]"}], ".", 
              "partials"}]}]}]]}], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{
              RowBox[{"Transpose", "[", "partials", "]"}], ".", "data"}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1.`*^-6", "+", 
             RowBox[{
              RowBox[{"Transpose", "[", "partials", "]"}], ".", 
              "partials"}]}], ")"}]}], 
          RowBox[{"1.`*^-12", "+", 
           RowBox[{"2.`*^-6", " ", 
            RowBox[{
             RowBox[{"Transpose", "[", "partials", "]"}], ".", 
             "partials"}]}]}]]}]},
       {
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"0.`", "\[VeryThinSpace]", "+", 
              RowBox[{
               RowBox[{"Transpose", "[", "partials", "]"}], ".", "data"}]}], 
             ")"}], " ", 
            RowBox[{
             RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}]}], 
           RowBox[{"1.`*^-12", "+", 
            RowBox[{"2.`*^-6", " ", 
             RowBox[{
              RowBox[{"Transpose", "[", "partials", "]"}], ".", 
              "partials"}]}]}]]}], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{
              RowBox[{"Transpose", "[", "partials", "]"}], ".", "data"}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1.`*^-6", "+", 
             RowBox[{
              RowBox[{"Transpose", "[", "partials", "]"}], ".", 
              "partials"}]}], ")"}]}], 
          RowBox[{"1.`*^-12", "+", 
           RowBox[{"2.`*^-6", " ", 
            RowBox[{
             RowBox[{"Transpose", "[", "partials", "]"}], ".", 
             "partials"}]}]}]]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"1.`*^-6", "+", 
         RowBox[{
          RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}]}], 
        RowBox[{
         RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}]},
       {
        RowBox[{
         RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}], 
        RowBox[{"1.`*^-6", "+", 
         RowBox[{
          RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.727472529149095*^9, 3.727472541371006*^9}, {
   3.727472582072073*^9, 3.727472596728858*^9}, 3.72747347227721*^9, 
   3.727485511156743*^9, 3.727486308620812*^9, 3.727878578245182*^9, 
   3.727880787316627*^9, 3.727881187795374*^9, 3.72788136748368*^9, 
   3.7279153851348257`*^9, 3.727918036577284*^9, 3.7279180943800097`*^9, 
   3.727924197677032*^9, {3.727927706752205*^9, 3.727927731973207*^9}, 
   3.727967810149074*^9, 3.7279687330645437`*^9, 3.727969808085505*^9, 
   3.727969954973427*^9, 3.728044351569767*^9, 3.72804644760787*^9, 
   3.728066469525443*^9, 3.728068120668467*^9, 3.728083783280686*^9, 
   3.728090741272605*^9, 3.728169444994749*^9, 3.728169540556728*^9, 
   3.7281698227111*^9, 3.7281698827372704`*^9, 3.72825295523654*^9, 
   3.728946255665695*^9, 3.72902289982128*^9, {3.729119978255114*^9, 
   3.729119995360593*^9}, 3.7291210718114223`*^9, 3.729121110350542*^9, 
   3.7291723072225113`*^9, 3.729174119552033*^9, 3.729175690243061*^9, 
   3.729175768561432*^9, 3.729183411998878*^9, {3.729183447270482*^9, 
   3.7291834602232447`*^9}, 3.729255936689374*^9, 3.7295523012311068`*^9, 
   3.729557875800249*^9, 3.7296298378048058`*^9, 3.72963463574932*^9, 
   3.729642872038753*^9, 3.729642908638049*^9, 3.729643938027584*^9, 
   3.729647184308378*^9, 3.729683201116581*^9, 3.729778153560226*^9, 
   3.729779231717586*^9, 3.729779279623641*^9, 3.7298946995998697`*^9, 
   3.729896005475109*^9, 3.729896152143077*^9, 3.7298972950331507`*^9, 
   3.730140354438093*^9, 3.7302402706521597`*^9, 3.730380090833795*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"d2ed527b-5846-45d3-95e2-09082c6dc189"]
}, Open  ]],

Cell[TextData[{
 "The estimates ",
 Cell[BoxData[
  FormBox["mBar", TraditionalForm]], "Code",ExpressionUUID->
  "ace851a5-9f4d-49ce-a0fa-1ee094af68d5"],
 " and ",
 Cell[BoxData[
  FormBox["bBar", TraditionalForm]], "Code",ExpressionUUID->
  "1f76bfd3-e9db-47db-a0f3-738e5d40384b"],
 " are, numerically, the same as we got from Wolfram\[CloseCurlyQuote]s \
built-in. For this example, the choice of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "0"], TraditionalForm]],ExpressionUUID->
  "7a752cc3-5524-4727-98d1-99e9e3e3c2f9"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalLambda]", "0"], TraditionalForm]],ExpressionUUID->
  "1040a599-038c-43fc-961e-93c029f458cd"],
 " had negligible effect. "
}], "Text",
 CellChangeTimes->{{3.727455669635949*^9, 3.727455714844105*^9}, {
   3.727456293561727*^9, 3.727456338621636*^9}, {3.727456381984915*^9, 
   3.727456493199937*^9}, {3.7274567040936413`*^9, 3.727456704869124*^9}, {
   3.727456739701139*^9, 3.72745677855204*^9}, {3.727472821547103*^9, 
   3.727472872838442*^9}, {3.7279667472572412`*^9, 3.72796679667021*^9}, {
   3.72894839921102*^9, 3.728948399211062*^9}, {3.729181651280912*^9, 
   3.729181667411229*^9}, {3.729643345781581*^9, 3.729643368401565*^9}, 
   3.729797100393939*^9},ExpressionUUID->"f4fe2489-d9cf-4ac7-b0c5-\
50fd8c858a33"]
}, Closed]],

Cell[CellGroupData[{

Cell["Structural Notes", "Subsection",
 CellChangeTimes->{{3.729181678137927*^9, 
  3.729181681293388*^9}},ExpressionUUID->"3967f398-3eab-437f-8b80-\
7de90dfe491f"],

Cell[TextData[{
 "The mappings of ",
 Cell[BoxData[
  FormBox["List", TraditionalForm]], "Code",ExpressionUUID->
  "370d0a8b-9c99-495c-8b0f-e38240d3f06a"],
 " over the data and partials convert them into column vectors. Wolfram \
built-ins and the normal equations, implicitly, treat one-dimensional lists \
as columns or rows as needed, then compute inner (dot) products as if the \
distinction did not matter. Python\[CloseCurlyQuote]s numpy has the same \
dubious feature. "
}], "Text",
 CellChangeTimes->{{3.727473114735071*^9, 3.727473196429072*^9}, 
   3.727475691841303*^9, {3.727879000591062*^9, 3.727879183230468*^9}, {
   3.727966817515026*^9, 3.727966992448154*^9}, {3.728091889609682*^9, 
   3.7280919220828123`*^9}, {3.729023350420405*^9, 3.729023392246647*^9}, {
   3.729119179359543*^9, 3.729119179371344*^9}, {3.7291640123507442`*^9, 
   3.7291640329396763`*^9}, {3.72916408829683*^9, 3.7291641046167603`*^9}, {
   3.729181694426371*^9, 
   3.729181705205323*^9}},ExpressionUUID->"5fa63877-d682-4369-8865-\
5a95b2249de3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Memory and Time Efficiency", "Subsection",
 CellChangeTimes->{{3.729181722918578*^9, 
  3.7291817314071093`*^9}},ExpressionUUID->"a6c792dc-4c21-42d8-8ec5-\
fc669690e7b7"],

Cell[TextData[{
 "The required memory for the recurrence is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", "\[CapitalMu]", ")"}], TraditionalForm]],ExpressionUUID->
  "a43af123-6e23-4747-99f5-4541967c6079"],
 ", where ",
 Cell[BoxData[
  FormBox["\[CapitalMu]", TraditionalForm]],ExpressionUUID->
  "554653cf-ce3e-4f63-b5d1-49baddb2469f"],
 " is the order of the model, the number of parameters to estimate, the \
length of ",
 Cell[BoxData[
  FormBox["\[CapitalXi]", TraditionalForm]],ExpressionUUID->
  "5cad892a-a66c-4479-a419-39792c33e9e0"],
 ", and the length of each row of ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "332e127a-feaa-4be6-a475-985ccedc0886"],
 ". There is no dependency at all on the number ",
 Cell[BoxData[
  FormBox["\[CapitalNu]", TraditionalForm]],ExpressionUUID->
  "70e72b1a-0126-4373-80a0-6d790e7d6cc8"],
 " of data items. Also, the recurrence accumulates data one observation at a \
time, and is thus ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", "\[CapitalNu]", ")"}], TraditionalForm]],ExpressionUUID->
  "efd7941a-b9ef-460b-abc5-d458205967fa"],
 " in time. Contrast with the normal equations, which multiply at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"~", 
    RowBox[{"O", "(", 
     SuperscriptBox["\[CapitalNu]", "3"], ")"}]}], TraditionalForm]],
  ExpressionUUID->"d0c9ea26-5793-4a2e-88e5-b820100f9d13"],
 " and invert at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"~", 
    RowBox[{"O", "(", "\[CapitalMu]", ")"}]}], TraditionalForm]],
  ExpressionUUID->"e1c00670-04cc-4eda-87ab-028f1f89e82a"],
 ", i.e., at much greater time cost."
}], "Text",
 CellChangeTimes->{{3.727878157797224*^9, 3.72787827045693*^9}, {
  3.729023428386662*^9, 3.729023477424836*^9}, {3.729164123699872*^9, 
  3.729164253182089*^9}, {3.729181740696765*^9, 3.729181815543811*^9}, {
  3.72964339464333*^9, 3.729643452303581*^9}, {3.729797162651799*^9, 
  3.7297972726054*^9}},ExpressionUUID->"a05115c7-2503-49e9-af12-5669084b3ab2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Check the A-Priori", "Subsection",
 CellChangeTimes->{{3.729181823844157*^9, 
  3.729181830180563*^9}},ExpressionUUID->"53320727-4bae-4b2a-ab1b-\
1c7c66ac6a3c"],

Cell[TextData[{
 "The final value of ",
 Cell[BoxData[
  FormBox["\[CapitalLambda]", TraditionalForm]],ExpressionUUID->
  "39d494bd-234a-46ce-b910-d7f503d343eb"],
 " (called ",
 Cell[BoxData[
  FormBox["\[CapitalPi]", TraditionalForm]],ExpressionUUID->
  "8c23b7e5-b715-408b-91a1-2fb52b1f7699"],
 " in the code, a returned value), is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["A", "full"], "\[Transpose]"}], "\[CenterDot]", 
     SubscriptBox["A", "full"]}], "+", 
    SubscriptBox["\[CapitalLambda]", "0"]}], TraditionalForm]],
  ExpressionUUID->"1891af79-d866-486f-a629-9b2b77a22d21"],
 ". To check the code, check that the difference between \[CapitalPi] and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["A", "full"], "\[Transpose]"}], "\[CenterDot]", 
    SubscriptBox["A", "full"]}], TraditionalForm]],ExpressionUUID->
  "d79187f3-f0a0-4931-8c09-8a661166ccf3"],
 " is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalLambda]", "0"], TraditionalForm]],ExpressionUUID->
  "c764f547-094a-4d7e-9887-56726f224d1b"],
 ":"
}], "Text",
 CellChangeTimes->{{3.727455669635949*^9, 3.727455714844105*^9}, {
  3.727456293561727*^9, 3.727456338621636*^9}, {3.727456381984915*^9, 
  3.727456493199937*^9}, {3.7274567040936413`*^9, 3.727456704869124*^9}, {
  3.727456739701139*^9, 3.72745677855204*^9}, {3.727472821547103*^9, 
  3.727472866769026*^9}, {3.72747570063941*^9, 3.72747570624365*^9}, {
  3.727486207037271*^9, 3.727486226047611*^9}, {3.727967052949963*^9, 
  3.727967092304611*^9}, {3.72902349359485*^9, 
  3.729023506985579*^9}},ExpressionUUID->"5198a235-6d3a-495f-8224-\
3bb457689565"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalPi]", "-", 
  RowBox[{
   RowBox[{"partials", "\[Transpose]"}], ".", "partials"}]}]], "Input",
 CellChangeTimes->{{3.7274551709419003`*^9, 3.727455208922634*^9}, {
  3.727455747486219*^9, 3.727455758602953*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"6b2f5eca-fa77-41bf-9283-038226cefa9a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`*^-6", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1.`*^-6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.72745518631077*^9, 3.7274552106865807`*^9}, {
   3.7274552828550367`*^9, 3.727455294638937*^9}, 3.727455760140656*^9, {
   3.72745583557261*^9, 3.7274558626374598`*^9}, 3.727455974817852*^9, {
   3.7274561424375877`*^9, 3.7274561865312757`*^9}, 3.727456826962592*^9, 
   3.727457103648644*^9, 3.7274626013231*^9, 3.727472137933955*^9, 
   3.727485511219474*^9, 3.7274863086743803`*^9, 3.727878578292219*^9, 
   3.727880787367092*^9, 3.72788118784524*^9, 3.727881367533016*^9, 
   3.7279153851883383`*^9, 3.7279180366404953`*^9, 3.727918094433138*^9, 
   3.727924197744144*^9, {3.727927706819661*^9, 3.727927732038946*^9}, 
   3.727967810195277*^9, 3.7279687331233892`*^9, 3.7279698081358833`*^9, 
   3.727969955024419*^9, 3.728044351619812*^9, 3.7280464476574707`*^9, 
   3.728066469570793*^9, 3.7280681207187157`*^9, 3.728083783348742*^9, 
   3.728090741322768*^9, 3.728169445060842*^9, 3.728169540624917*^9, 
   3.7281698227788277`*^9, 3.728169882804495*^9, 3.728252955301944*^9, 
   3.728946255715186*^9, 3.729022899869521*^9, {3.729119978321847*^9, 
   3.7291199954270573`*^9}, 3.729121071878161*^9, 3.729121110417275*^9, 
   3.729172307287985*^9, 3.729175690293468*^9, 3.729175772153051*^9, 
   3.729183412064961*^9, {3.72918344733591*^9, 3.729183460290135*^9}, 
   3.7292559367593613`*^9, 3.729552301396994*^9, 3.729557875848024*^9, 
   3.7296298378646383`*^9, 3.7296346358091793`*^9, 3.729642872096381*^9, 
   3.7296429086974907`*^9, 3.729643938076329*^9, 3.7296471843588*^9, 
   3.7296832011663933`*^9, 3.7297781536275663`*^9, 3.7297792317673607`*^9, 
   3.729779279689464*^9, 3.729894699649646*^9, 3.729896005539929*^9, 
   3.729896152204977*^9, 3.729897295103435*^9, 3.730140354488406*^9, 
   3.7302402707235947`*^9, 3.730380090988249*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"aa8ff779-4287-4c62-b9b0-339ef935bb2c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Covariance of the Estimate", "Subsection",
 CellChangeTimes->{{3.7291818416264057`*^9, 
  3.729181847224715*^9}},ExpressionUUID->"a15882b3-57ab-4fa8-83b6-\
c550109aac89"],

Cell[TextData[{
 "The covariance of this estimate ",
 Cell[BoxData[
  FormBox["\[CapitalXi]", TraditionalForm]],ExpressionUUID->
  "05f6e13c-eb2e-49b9-b7d4-f01f499237e6"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     FractionBox[
      RowBox[{"n", "-", "1"}], 
      RowBox[{"n", "-", "2"}]], ")"}], "*", 
    RowBox[{"Variance", "\[ThinSpace]", "[", "\[ThinSpace]", 
     RowBox[{"\[CapitalZeta]", "-", 
      RowBox[{"A", "\[CenterDot]", "\[CapitalXi]"}]}], "\[ThinSpace]", "]"}], 
    "*", 
    SuperscriptBox["\[CapitalLambda]", 
     RowBox[{"-", "1"}]]}], TraditionalForm]],ExpressionUUID->
  "ed6dc5b0-2569-4482-a89f-9e45c1d9c8e7"],
 " except for a small contribution from the a-priori information ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalLambda]", "0"], TraditionalForm]],ExpressionUUID->
  "117837c1-2354-4d76-b779-38f2077da583"],
 ". The correction factor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    FractionBox[
     RowBox[{"n", "-", "1"}], 
     RowBox[{"n", "-", "2"}]], ")"}], TraditionalForm]],ExpressionUUID->
  "b55c017a-1015-4a56-951f-cf8b3a01de97"],
 " is a generalization \.7fof Bessel\[CloseCurlyQuote]s correction. The ",
 Cell[BoxData[
  FormBox["2", TraditionalForm]],ExpressionUUID->
  "b7c81e78-cd2f-451d-8792-9b212764ec84"],
 " in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"n", "-", "2"}], ")"}], TraditionalForm]],ExpressionUUID->
  "d9f330f5-17bd-4ad7-b656-bdd5eb0f57d5"],
 " in the denominator of Bessel\[CloseCurlyQuote]s correction is the number \
of parameters being estimated (see ",
 ButtonBox["VAN DE GEER, Least Squares Estimation, Volume 2, pp. \
1041\[Dash]1045, in Encyclopedia of Statistics in Behavioral Science, Eds. \
Brian S. Everitt & David C. Howell, Wiley, 2005",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://stat.ethz.ch/~geer/bsa199_o.pdf"], None},
  ButtonNote->"https://stat.ethz.ch/~geer/bsa199_o.pdf"],
 "). The denominator of the correction, in general, is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "-", "p"}], TraditionalForm]],ExpressionUUID->
  "5b344576-2589-491a-bed2-c362a3e367e3"],
 ", where ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "ab45ec8c-fdab-4d50-a890-e44870c87fa3"],
 " is the number of data and ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],ExpressionUUID->
  "606cb52c-426a-44c2-baf8-3756d84116c8"],
 " is the number of parameters being estimated."
}], "Text",
 CellChangeTimes->{{3.7274567852393503`*^9, 3.727456791351314*^9}, {
  3.7274626311713448`*^9, 3.727462680678966*^9}, {3.727472647355248*^9, 
  3.727472725986993*^9}, {3.7274728947945757`*^9, 3.727472940968391*^9}, {
  3.727474911778737*^9, 3.727474913439685*^9}, {3.727475723944086*^9, 
  3.727475733135212*^9}, {3.7279249725397797`*^9, 3.727924984997408*^9}, {
  3.727967100099558*^9, 3.7279671039316263`*^9}, {3.7280919485134687`*^9, 
  3.728091949527707*^9}, {3.72916432284585*^9, 3.729164348695956*^9}, {
  3.729797302412488*^9, 
  3.729797317021042*^9}},ExpressionUUID->"b4d63894-59ca-4552-83f4-\
70d2c2128d07"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Inverse", "[", 
    RowBox[{
     RowBox[{"partials", "\[Transpose]"}], ".", "partials"}], "]"}], "*", 
   FractionBox[
    RowBox[{"nData", "-", "1"}], 
    RowBox[{"nData", "-", "2"}]], "*", 
   RowBox[{"Variance", "[", 
    RowBox[{"data", "-", 
     RowBox[{"partials", ".", 
      RowBox[{"{", 
       RowBox[{"mBar", ",", "bBar"}], "}"}]}]}], "]"}]}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7274431897876062`*^9, 3.7274432610082397`*^9}, {
   3.7274547829132023`*^9, 3.7274548281175823`*^9}, {3.727454917043985*^9, 
   3.727454946560256*^9}, {3.727455103776779*^9, 3.727455133855278*^9}, {
   3.727455965944152*^9, 3.727455966694631*^9}, {3.7274560116101933`*^9, 
   3.727456093212741*^9}, 3.72745616117476*^9, {3.727456227849722*^9, 
   3.727456234387219*^9}, 3.727472952057025*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"8c430208-3b71-40e8-8a72-abb8cd90ffa4"],

Cell[BoxData[
 TagBox[
  RowBox[{
   FractionBox["1", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "nData"}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "nData"}], ")"}], " ", 
   RowBox[{"Inverse", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}], "]"}], 
   " ", 
   RowBox[{"Variance", "[", 
    RowBox[{"data", "-", 
     RowBox[{"partials", ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"0.`", "\[VeryThinSpace]", "+", 
              RowBox[{
               RowBox[{"Transpose", "[", "partials", "]"}], ".", "data"}]}], 
             ")"}], " ", 
            RowBox[{
             RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}]}], 
           RowBox[{"1.`*^-12", "+", 
            RowBox[{"2.`*^-6", " ", 
             RowBox[{
              RowBox[{"Transpose", "[", "partials", "]"}], ".", 
              "partials"}]}]}]]}], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{
              RowBox[{"Transpose", "[", "partials", "]"}], ".", "data"}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1.`*^-6", "+", 
             RowBox[{
              RowBox[{"Transpose", "[", "partials", "]"}], ".", 
              "partials"}]}], ")"}]}], 
          RowBox[{"1.`*^-12", "+", 
           RowBox[{"2.`*^-6", " ", 
            RowBox[{
             RowBox[{"Transpose", "[", "partials", "]"}], ".", 
             "partials"}]}]}]]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"0.`", "\[VeryThinSpace]", "+", 
              RowBox[{
               RowBox[{"Transpose", "[", "partials", "]"}], ".", "data"}]}], 
             ")"}], " ", 
            RowBox[{
             RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}]}], 
           RowBox[{"1.`*^-12", "+", 
            RowBox[{"2.`*^-6", " ", 
             RowBox[{
              RowBox[{"Transpose", "[", "partials", "]"}], ".", 
              "partials"}]}]}]]}], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{
              RowBox[{"Transpose", "[", "partials", "]"}], ".", "data"}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1.`*^-6", "+", 
             RowBox[{
              RowBox[{"Transpose", "[", "partials", "]"}], ".", 
              "partials"}]}], ")"}]}], 
          RowBox[{"1.`*^-12", "+", 
           RowBox[{"2.`*^-6", " ", 
            RowBox[{
             RowBox[{"Transpose", "[", "partials", "]"}], ".", 
             "partials"}]}]}]]}]}], "}"}]}]}], "]"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.727454928111648*^9, 3.72745494746028*^9}, 
   3.727455079366056*^9, {3.727455124455585*^9, 3.72745513496389*^9}, {
   3.727455812047991*^9, 3.727455864570829*^9}, {3.7274559677572517`*^9, 
   3.727455974867505*^9}, {3.727456050499832*^9, 3.727456094070848*^9}, {
   3.7274561424870367`*^9, 3.7274561865735826`*^9}, 3.727456239429667*^9, 
   3.7274568270134773`*^9, 3.727457103698028*^9, 3.7274626013731823`*^9, 
   3.727472137981408*^9, 3.727472954371911*^9, 3.727485511269794*^9, 
   3.7274863087240047`*^9, 3.727878578345954*^9, 3.7278807874127703`*^9, 
   3.7278811878958673`*^9, 3.727881367587798*^9, 3.72791538523671*^9, 
   3.727918036690276*^9, 3.7279180944824457`*^9, 3.727924197810088*^9, {
   3.727927706882574*^9, 3.727927732105157*^9}, 3.727967810245639*^9, 
   3.727968733172824*^9, 3.727969808184746*^9, 3.7279699550719757`*^9, 
   3.728044351669427*^9, 3.728046447707358*^9, 3.728066469624007*^9, 
   3.728068120768632*^9, 3.728083783416733*^9, 3.728090741371833*^9, 
   3.7281694451273947`*^9, 3.7281695406895*^9, 3.728169822844509*^9, 
   3.72816988287199*^9, 3.728252955370139*^9, 3.728946255764901*^9, 
   3.729022899921451*^9, {3.729119978388329*^9, 3.72911999549438*^9}, 
   3.729121071944837*^9, 3.729121110483716*^9, 3.7291723073551702`*^9, 
   3.7291756903603086`*^9, 3.72917577469937*^9, 3.729183412131897*^9, {
   3.729183447403452*^9, 3.729183460358261*^9}, 3.729255936823028*^9, 
   3.729552301456296*^9, 3.729557875898464*^9, 3.729629837913718*^9, 
   3.729634635859951*^9, 3.729642872142787*^9, 3.729642908767935*^9, 
   3.7296439381313267`*^9, 3.729647184407447*^9, 3.729683201217225*^9, 
   3.729778153693164*^9, 3.7297792318163977`*^9, 3.729779279861124*^9, 
   3.729894699701302*^9, 3.729896005604349*^9, 3.729896152277255*^9, 
   3.729897295171204*^9, 3.73014035453795*^9, 3.7302402708348417`*^9, 
   3.730380091057087*^9},
 CellLabel->
  "Out[5]//MatrixForm=",ExpressionUUID->"bb1e3808-a54e-4e6d-8ea3-\
fb8fa82bc6f7"]
}, Open  ]],

Cell[TextData[{
 "Except for the reversed order, this is the same covariance matrix that \
Wolfram\[CloseCurlyQuote]s ",
 Cell[BoxData[
  FormBox["LinearModel", TraditionalForm]], "Code",ExpressionUUID->
  "927b6594-6052-40b2-8ebb-205fa75a1b9c"],
 " reports:"
}], "Text",
 CellChangeTimes->{{3.727454999214408*^9, 3.7274550230616837`*^9}, {
  3.7274550552077837`*^9, 3.727455069630582*^9}, {3.727456815268976*^9, 
  3.72745682043734*^9}, {3.727462715836411*^9, 3.7274627328032312`*^9}, {
  3.7281214802053127`*^9, 
  3.72812148718871*^9}},ExpressionUUID->"0cca00d6-0a9f-40fb-b637-\
dfc3132a2c2f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Reverse", "@", 
   RowBox[{"(", 
    RowBox[{"Reverse", "/@", 
     RowBox[{
      StyleBox["model",
       Background->RGBColor[1, 1, 0]], "[", "\"\<CovarianceMatrix\>\"", 
      "]"}]}], ")"}]}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7274549491384163`*^9, 3.727454976961426*^9}, {
  3.727455029510784*^9, 3.727455047125711*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"c6115b7b-08e5-4411-90de-4f0f132f5782"],

Cell[BoxData[
 TemplateBox[{
  "Reverse","normal",
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Reverse\\\", \
\\\"[\\\", \\\"\\\\\\\"CovarianceMatrix\\\\\\\"\\\", \\\"]\\\"}]\\).\"",2,6,2,
   30924570824227536513,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.73038009112151*^9},
 CellLabel->
  "During evaluation of \
In[6]:=",ExpressionUUID->"7b765e2f-75e2-4019-85b3-309d3a31b694"],

Cell[BoxData[
 TagBox[
  RowBox[{"model", "[", 
   RowBox[{"Reverse", "[", "\<\"CovarianceMatrix\"\>", "]"}], "]"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.727454966848208*^9, 3.727454977604638*^9}, 
   3.727455048234387*^9, 3.7274550794174843`*^9, {3.727455816251672*^9, 
   3.727455842245935*^9}, 3.727455974915807*^9, {3.72745614253647*^9, 
   3.727456186624792*^9}, 3.727456827063628*^9, 3.727457103748019*^9, 
   3.727462601420088*^9, 3.727472138034376*^9, 3.727485511317802*^9, 
   3.7274863087704897`*^9, 3.727878578395075*^9, 3.727880787467642*^9, 
   3.727881187944561*^9, 3.727881367638068*^9, 3.7279153852886133`*^9, 
   3.727918036745358*^9, 3.727918094551241*^9, 3.727924197877178*^9, {
   3.727927706952642*^9, 3.727927732168346*^9}, 3.727967810295855*^9, 
   3.7279687332273684`*^9, 3.72796980823939*^9, 3.72796995512359*^9, 
   3.728044351719689*^9, 3.728046447758238*^9, 3.728066469672233*^9, 
   3.7280681208188887`*^9, 3.728083783480638*^9, 3.7280907414232063`*^9, 
   3.728169445193625*^9, 3.728169540756772*^9, 3.728169822911014*^9, 
   3.728169882937654*^9, 3.728252955435904*^9, 3.728946255816115*^9, 
   3.729022899969944*^9, {3.729119978456131*^9, 3.729119995560389*^9}, 
   3.729121072011354*^9, 3.729121110549224*^9, 3.729172307421925*^9, 
   3.7291756904081097`*^9, 3.729175777027215*^9, 3.729183412197935*^9, {
   3.7291834474691057`*^9, 3.7291834604242697`*^9}, 3.729255936889614*^9, 
   3.729552301510076*^9, 3.729557875948141*^9, 3.729629837964074*^9, 
   3.7296346359095287`*^9, 3.729642872193766*^9, 3.729642908831292*^9, 
   3.729643938195087*^9, 3.7296471844591093`*^9, 3.729683201266974*^9, 
   3.7297781538643713`*^9, 3.729779231867325*^9, 3.729779279921195*^9, 
   3.729894699766657*^9, 3.729896005675802*^9, 3.729896152339327*^9, 
   3.729897295239596*^9, 3.730140354587438*^9, 3.730240270905217*^9, 
   3.730380091130209*^9},
 CellLabel->
  "Out[6]//MatrixForm=",ExpressionUUID->"8c582613-29df-4999-b4a5-\
c59d355fb5ec"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Don\[CloseCurlyQuote]t Invert That Matrix\.7f", "Subchapter",
 CellChangeTimes->{{3.727456856590333*^9, 3.727456866525626*^9}, {
  3.727456903416147*^9, 3.727456929038941*^9}},
 CellTags->"c:10",ExpressionUUID->"eb9ecf3c-cbf2-4418-a417-8f947ee7be76"],

Cell[TextData[{
 "See ",
 ButtonBox["https://www.johndcook.com/blog/2010/01/19/dont-invert-that-matrix/\
",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.johndcook.com/blog/2010/01/19/dont-invert-that-matrix/"],
     None},
  ButtonNote->
   "https://www.johndcook.com/blog/2010/01/19/dont-invert-that-matrix/"],
 " \n\nIn general, replace any occurrence of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["A", 
     RowBox[{"-", "1"}]], "\[CenterDot]", "B"}], TraditionalForm]],
  ExpressionUUID->"32698cd4-2dcc-4b05-9117-50af35fbcccc"],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Inverse", "[", "A", "]"}], ".", "B"}], TraditionalForm]], "Code",
  ExpressionUUID->"0208196a-6c21-4a62-9f05-79b2f4e5fe89"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"LinearSolve", "[", 
    RowBox[{"A", ",", "B"}], "]"}], TraditionalForm]], "Code",ExpressionUUID->
  "4e7fbc22-09d2-4e39-a5b5-b93b7697af49"],
 " for arbitrary square matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "776ee4c1-d1ce-42de-85cc-2ca525876f54"],
 " and arbitrary matrix ",
 Cell[BoxData[
  FormBox["B", TraditionalForm]],ExpressionUUID->
  "493b32c5-9bbd-4079-b87d-0885d8421239"],
 ". Almost all programming languages and toolkits support an efficient and \
robust analogue to Wolfram\[CloseCurlyQuote]s ",
 Cell[BoxData[
  FormBox["LinearSolve", TraditionalForm]], "Code",ExpressionUUID->
  "908053eb-6863-4781-928e-21ed138ed5fc"],
 "."
}], "Text",
 CellChangeTimes->{{3.727377065079856*^9, 3.7273770966536922`*^9}, {
  3.727456910929248*^9, 3.727456922321958*^9}, {3.727967129773798*^9, 
  3.727967138858366*^9}, {3.7279671799345827`*^9, 3.727967207643837*^9}, {
  3.7281215143410273`*^9, 3.728121560473433*^9}, {3.729023567817812*^9, 
  3.729023646362337*^9}, {3.729164385351775*^9, 3.729164386998762*^9}, {
  3.729173657472382*^9, 3.729173717927524*^9}, {3.729643492684564*^9, 
  3.729643541414435*^9}},ExpressionUUID->"0885edbe-95e4-4385-aba5-\
07fc3ab0dfba"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "update", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["update",
      Background->RGBColor[1, 1, 0]], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Xi]_", ",", "\[CapitalLambda]_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Zeta]_", ",", "a_"}], "}"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalPi]", "=", 
        RowBox[{"(", 
         RowBox[{"\[CapitalLambda]", "+", 
          RowBox[{
           RowBox[{"a", "\[Transpose]"}], ".", "a"}]}], ")"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         StyleBox["LinearSolve",
          Background->RGBColor[0.88, 1, 0.88]], "[", 
         RowBox[{"\[CapitalPi]", ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "\[Transpose]"}], ".", "\[Zeta]"}], "+", 
            RowBox[{"\[CapitalLambda]", ".", "\[Xi]"}]}], ")"}]}], "]"}], ",",
         "\[CapitalPi]"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"mBar"},
         {"bBar"}
        }], ")"}], ",", "\[CapitalPi]"}], "}"}], "=", "\[IndentingNewLine]", 
    RowBox[{
     StyleBox["Fold",
      Background->RGBColor[1, 1, 0]], "[", 
     RowBox[{
      StyleBox["update",
       Background->RGBColor[1, 1, 0]], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", GridBox[{
           {"0"},
           {"0"}
          }], ")"}], ",", 
        RowBox[{"(", GridBox[{
           {"1.0*^-6", "0"},
           {"0", "1.0*^-6"}
          }], ")"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"List", "/@", "data"}], ",", 
         RowBox[{"List", "/@", "partials"}]}], "}"}], "\[Transpose]"}]}], 
     "]"}]}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.727054852495049*^9, 3.72705494257406*^9}, {
   3.727055026792467*^9, 3.727055093506559*^9}, {3.7270551930291023`*^9, 
   3.727055263833913*^9}, {3.727055297216107*^9, 3.7270554270906563`*^9}, {
   3.7270560338846903`*^9, 3.72705612788085*^9}, {3.7270561855129213`*^9, 
   3.7270561959544077`*^9}, {3.727056250031129*^9, 3.727056367103942*^9}, {
   3.727056427865035*^9, 3.727056443080068*^9}, {3.727056561323501*^9, 
   3.727056598046468*^9}, {3.727056640141169*^9, 3.727056654582451*^9}, {
   3.727056728700244*^9, 3.7270567914565277`*^9}, {3.727056869366274*^9, 
   3.727056921039433*^9}, 3.72705709924362*^9, {3.727057420502048*^9, 
   3.7270575464285316`*^9}, {3.7270577446377487`*^9, 3.727057775909028*^9}, {
   3.7270578799866133`*^9, 3.727057901007744*^9}, 3.7270581603330593`*^9, {
   3.727058349930079*^9, 3.7270584478842707`*^9}, {3.727058490337566*^9, 
   3.727058577824399*^9}, {3.727058673744141*^9, 3.7270586947547493`*^9}, {
   3.727058788099071*^9, 3.7270588909590683`*^9}, {3.727058934322414*^9, 
   3.7270589393580847`*^9}, {3.72705898616982*^9, 3.7270589868650723`*^9}, {
   3.7270592331231947`*^9, 3.727059237300102*^9}, {3.727370367915408*^9, 
   3.727370398721291*^9}, {3.727457046333558*^9, 3.727457067436592*^9}, {
   3.727473022344759*^9, 3.727473052764071*^9}, {3.727473241324421*^9, 
   3.7274732753376427`*^9}, {3.7274734820130367`*^9, 3.727473491340034*^9}, {
   3.7289484043309593`*^9, 3.728948405468891*^9}, {3.729174099251841*^9, 
   3.7291741039734783`*^9}, 3.7291741376366043`*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"bd72fa45-d9c5-4e4e-a429-bee1577a6f0d"],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"data\\\", \\\",\\\", \\\"partials\\\"}], \\\"}\\\"}]\\) cannot be \
transposed.\"",2,9,3,30924570824227536513,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.730380091205247*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"0ca2a0f2-172d-4527-ae75-3937847d2492"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"0.5`", " ", 
          RowBox[{
           RowBox[{"Transpose", "[", "partials", "]"}], ".", "data"}]}], 
         RowBox[{"5.`*^-7", "+", 
          RowBox[{"1.`", " ", 
           RowBox[{
            RowBox[{"Transpose", "[", "partials", "]"}], ".", 
            "partials"}]}]}]]},
       {
        FractionBox[
         RowBox[{"0.5`", " ", 
          RowBox[{
           RowBox[{"Transpose", "[", "partials", "]"}], ".", "data"}]}], 
         RowBox[{"5.`*^-7", "+", 
          RowBox[{"1.`", " ", 
           RowBox[{
            RowBox[{"Transpose", "[", "partials", "]"}], ".", 
            "partials"}]}]}]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"1.`*^-6", "+", 
         RowBox[{
          RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}]}], 
        RowBox[{
         RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}]},
       {
        RowBox[{
         RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}], 
        RowBox[{"1.`*^-6", "+", 
         RowBox[{
          RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.727473265842018*^9, 3.7274732757004232`*^9}, 
   3.727473492609377*^9, 3.727485511701943*^9, 3.727486309173321*^9, 
   3.727878578445228*^9, 3.7278807875164957`*^9, 3.727881187996175*^9, 
   3.72788136768466*^9, 3.7279153853534393`*^9, 3.727918036812088*^9, 
   3.727918094615041*^9, 3.7279241979432487`*^9, {3.727927707015217*^9, 
   3.72792773222125*^9}, 3.727967810349496*^9, 3.7279687332731037`*^9, 
   3.7279698083019648`*^9, 3.7279699551693897`*^9, 3.728044351771216*^9, 
   3.7280464478070717`*^9, 3.7280664697246733`*^9, 3.728068120868615*^9, 
   3.728083783546753*^9, 3.728090741492902*^9, 3.728169445260518*^9, 
   3.728169540823485*^9, 3.728169822977787*^9, 3.7281698830032377`*^9, 
   3.728252955627798*^9, 3.728946255859652*^9, 3.72894933878874*^9, 
   3.729022900020834*^9, {3.729119978523779*^9, 3.7291199956273623`*^9}, 
   3.729121072078249*^9, 3.7291211106160603`*^9, 3.729172307489259*^9, 
   3.729174106495594*^9, 3.729174141124625*^9, 3.7291756904605827`*^9, 
   3.729175784083406*^9, 3.729183412264688*^9, {3.729183447536147*^9, 
   3.7291834604902687`*^9}, 3.729255936956237*^9, 3.7295523015566072`*^9, 
   3.729557876032403*^9, 3.72962983801383*^9, 3.729634635965757*^9, 
   3.729642872243292*^9, 3.729642908898361*^9, 3.729643938245161*^9, 
   3.7296471845136013`*^9, 3.7296832013162327`*^9, 3.729778153926168*^9, 
   3.72977923191739*^9, 3.729779279992197*^9, 3.729894699833095*^9, 
   3.7298960058062487`*^9, 3.729896152409284*^9, 3.729897295305296*^9, 
   3.730140354639059*^9, 3.7302402709694643`*^9, 3.7303800912149363`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"3fc5ec58-f166-402c-b7a1-76cc5699f652"]
}, Open  ]],

Cell[TextData[{
 "Because this example is small, ",
 Cell[BoxData[
  FormBox["Inverse", TraditionalForm]], "Code",ExpressionUUID->
  "1e8b6ec0-9f26-4e41-ac8c-020e2f7853de"],
 " has no obvious numerical issues. It is very easy to produce large, \
ill-conditioned matrices, and one will spend a lot of time and storage \
inverting them, only to get useless results."
}], "Text",
 CellChangeTimes->{{3.727473280120357*^9, 3.7274732832085*^9}, {
   3.7279911307811337`*^9, 3.727991131940103*^9}, {3.728121572695258*^9, 
   3.728121612596923*^9}, {3.729023701182482*^9, 3.729023764199581*^9}, 
   3.7291737430479116`*^9, {3.729181869246784*^9, 
   3.729181869373077*^9}},ExpressionUUID->"2fc132d3-59ce-4f68-b386-\
27a3e8b36b56"]
}, Closed]],

Cell[CellGroupData[{

Cell["Interim Conclusions", "Subchapter",
 CellChangeTimes->{{3.729164407912829*^9, 
  3.729164418350677*^9}},ExpressionUUID->"a922b9e1-5f73-4c1d-837a-\
1b2197bd6c77"],

Cell[TextData[{
 "We have eliminated memory bloat by processing updates one observation at a \
time, each with its paired partial. We reduce computation time and numerical \
risk by solving a linear systems instead of inverting a matrix. We also avoid \
multiplication of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", "\[CapitalNu]", ")"}], TraditionalForm]],ExpressionUUID->
  "f1e31217-fd6e-41e1-90c4-263aba7bf238"],
 " matrices, which is of approximately ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", 
    SuperscriptBox["\[CapitalNu]", "3"], ")"}], TraditionalForm]],
  ExpressionUUID->"816d662d-3cd4-47fe-8656-616095fce9ed"],
 " time."
}], "Text",
 CellChangeTimes->{{3.727475777156247*^9, 3.727475832537896*^9}, {
  3.72748624599329*^9, 3.727486246966188*^9}, {3.729023774567375*^9, 
  3.729023775311418*^9}, {3.7291818849549427`*^9, 3.729182029375617*^9}, {
  3.729644121939213*^9, 3.729644164344136*^9}, {3.729797388940627*^9, 
  3.7297974303556147`*^9}},ExpressionUUID->"19112acb-50b6-4d0a-be43-\
d791f28fb3b1"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Regularization By A-Priori", "Chapter",
 CellChangeTimes->{{3.7278786048568163`*^9, 3.727878609238576*^9}, {
   3.7278835476425943`*^9, 3.727883549040578*^9}, {3.727924834507627*^9, 
   3.727924836977462*^9}, {3.727925756497532*^9, 3.727925760501575*^9}, {
   3.729023822401535*^9, 3.7290238231434097`*^9}, {3.7291828363150797`*^9, 
   3.729182841338913*^9}, 3.729712704361965*^9},
 CellTags->"c:13",ExpressionUUID->"f57cb083-2e13-4a5b-8884-c47c716b6798"],

Cell[TextData[{
 "Chris Bishop\[CloseCurlyQuote]s ",
 StyleBox[ButtonBox["Pattern Recognition and Machine Learning",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.amazon.com/Pattern-Recognition-Learning-Information-\
Statistics/dp/0387310738"], None},
  ButtonNote->
   "https://www.amazon.com/Pattern-Recognition-Learning-Information-\
Statistics/dp/0387310738"],
  FontSlant->"Italic"],
 " has an extended example fitting higher-order polynomials, linear in their \
coefficients, starting in section 1.1. The higher the order of the \
polynomial, the more MLE over-fits. Bishop presents MAP regularization as a \
cure for this over-fitting. RLS and KAL already regularize, by construction. \
In this section, we relate their regularization to MAP\[CloseCurlyQuote]s.\n\n\
RLS and KAL each require an a-priori estimate of the unknown parameters and \
an a-priori uncertainty of that estimate to bootstrap recurrences. RLS takes \
the uncertainty as an ",
 StyleBox["information matrix",
  FontSlant->"Italic"],
 ". KAL takes the uncertainty as a ",
 StyleBox["covariance matrix",
  FontSlant->"Italic"],
 ". KAL additionally requires an estimate of observation noise, which arises \
in real problems and can often be estimated out-of-band. We show that RLS can \
and should be renormalized with observation noise to produce results \
equivalent to KAL and MAP."
}], "Text",
 CellChangeTimes->{{3.727878623850936*^9, 3.727878709219612*^9}, {
   3.727878861523492*^9, 3.7278788615269413`*^9}, {3.727879302741879*^9, 
   3.727879309849668*^9}, 3.727883517024404*^9, {3.727922726553706*^9, 
   3.727922764150456*^9}, 3.727922954590423*^9, {3.727924470079568*^9, 
   3.727924536073629*^9}, {3.7279245945103197`*^9, 3.727924814835289*^9}, {
   3.7279675670922203`*^9, 3.727967666149938*^9}, {3.727971057289061*^9, 
   3.727971066302681*^9}, {3.728121698098153*^9, 3.7281219113362703`*^9}, {
   3.728251250200307*^9, 3.7282512840101357`*^9}, {3.7282513246052217`*^9, 
   3.728251329374619*^9}, {3.729023929197901*^9, 3.7290239300994596`*^9}, {
   3.729164542139102*^9, 3.72916456944278*^9}, {3.729164610806293*^9, 
   3.729164677156509*^9}, {3.729164919918866*^9, 3.729165054532934*^9}, {
   3.729182136434248*^9, 3.729182214000979*^9}, {3.729191528488492*^9, 
   3.729191529399126*^9}, {3.729191562138418*^9, 3.7291916195642443`*^9}, {
   3.729644842368363*^9, 3.729644891045639*^9}, {3.72979744862106*^9, 
   3.7297974664738607`*^9}, {3.7297975040084763`*^9, 
   3.729797584823832*^9}},ExpressionUUID->"15ee4bb0-fc5a-41bc-80d0-\
20de3b23514a"],

Cell[CellGroupData[{

Cell["Reproducing Bishop\[CloseCurlyQuote]s Example", "Subchapter",
 CellChangeTimes->{{3.729165065884509*^9, 
  3.7291650737726173`*^9}},ExpressionUUID->"8e1858e6-8e6d-4c01-8f2a-\
0d587b83c92f"],

Cell[CellGroupData[{

Cell["Bishop\[CloseCurlyQuote]s Training Set", "Subsection",
 CellChangeTimes->{{3.729182234376062*^9, 
  3.7291822398475657`*^9}},ExpressionUUID->"fd29c08d-8914-488e-a5e1-\
16d28815454d"],

Cell[TextData[{
 "First, create a sequence of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalNu]", "=", "10"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6e69dab0-348e-439f-952d-c4bf86dc91a9"],
 " inputs for a ",
 StyleBox["training set",
  FontSlant->"Italic"],
 ", equally spaced in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     RowBox[{"0", ".."}], "1"}], "]"}], TraditionalForm]],ExpressionUUID->
  "29ce8c8d-9344-4003-8aa1-108c7bd407ca"],
 ". "
}], "Text",
 CellChangeTimes->{{3.727903592625655*^9, 3.727903632159232*^9}, {
   3.7279036735048943`*^9, 3.727903706547583*^9}, {3.727905942818769*^9, 
   3.727905962112603*^9}, {3.7280864904938383`*^9, 3.72808650130811*^9}, 
   3.7281253834656553`*^9, {3.7290239585551653`*^9, 3.729023962286766*^9}, {
   3.729797599233794*^9, 3.729797625818816*^9}, {3.729798320229357*^9, 
   3.729798328906424*^9}},ExpressionUUID->"c848505b-800e-4607-83cb-\
e15f01517729"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "bishopTrainingSetX", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bishopTrainingSetX", "[", "\[CapitalNu]_", "]"}], ":=", 
   RowBox[{"Array", "[", 
    RowBox[{"Identity", ",", "\[CapitalNu]", ",", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "1."}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"bishopTrainingSetX", "[", "10", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7278793831155243`*^9, 3.727879483430056*^9}, {
  3.7278795217592373`*^9, 3.7278795713344812`*^9}, {3.727879616737006*^9, 
  3.727879619545887*^9}, {3.727879705352076*^9, 3.7278797261345243`*^9}, {
  3.7278805381565742`*^9, 3.727880538743538*^9}, {3.727922980939206*^9, 
  3.7279229886203623`*^9}, {3.729797634646571*^9, 3.7297976426699123`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"3f348c3d-26de-4b25-8ba3-c27ad607574b"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 0.}, {2., 0.1111111111111111}, {3., 0.2222222222222222}, {
      4., 0.3333333333333333}, {5., 0.4444444444444444}, {6., 
      0.5555555555555556}, {7., 0.6666666666666666}, {8., 
      0.7777777777777777}, {9., 0.8888888888888888}, {10., 
      1.}}]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10.}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7279036576643267`*^9, 3.7279153856605663`*^9, 3.727918037116987*^9, 
   3.7279180948276176`*^9, {3.7279229839121304`*^9, 3.727922989728109*^9}, 
   3.7279241982632713`*^9, {3.727927707284925*^9, 3.727927732385895*^9}, 
   3.727967810497973*^9, 3.72796873344042*^9, 3.727969808476139*^9, 
   3.7279699553203173`*^9, 3.728044351955875*^9, 3.728046448005164*^9, 
   3.728066469870434*^9, 3.728068121014494*^9, 3.728083783783091*^9, 
   3.7280907419079514`*^9, 3.728169445558825*^9, 3.728169541122375*^9, 
   3.7281698232597103`*^9, 3.728169883302211*^9, 3.728252955818722*^9, 
   3.728946256012908*^9, 3.72902290017245*^9, {3.729119978824182*^9, 
   3.729119995825794*^9}, 3.729121072276454*^9, 3.729121110814158*^9, 
   3.729172307690002*^9, 3.729175690740155*^9, 3.7291757911047173`*^9, 
   3.729183412564513*^9, {3.729183447842392*^9, 3.729183460727846*^9}, 
   3.72925593715775*^9, 3.729552301708386*^9, 3.729557876182742*^9, 
   3.729629838166031*^9, 3.729634636127739*^9, 3.729642872393754*^9, 
   3.729642909097967*^9, 3.729643939109083*^9, 3.729647185377458*^9, 
   3.729683202099824*^9, 3.729778155387088*^9, 3.729779233549402*^9, 
   3.729779280671722*^9, 3.729797644246916*^9, 3.729894699983472*^9, 
   3.729896006002866*^9, 3.729896152655624*^9, 3.729897295571372*^9, 
   3.730140354812684*^9, 3.730240271165248*^9, 3.730380091396955*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"df998cd8-da01-4b99-920a-5a240bf59a22"]
}, Open  ]],

Cell[TextData[{
 "Bishop\[CloseCurlyQuote]s ground truth is a single cycle of a sine wave. \
Add noise to a sample taken at the inputs of the training set above. Bishop \
doesn\[CloseCurlyQuote]t state an observation noise, but I guess ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sigma]", "z"], "=", 
    RowBox[{
     SubscriptBox["\[Sigma]", "t"], "=", "0.30"}]}], TraditionalForm]],
  ExpressionUUID->"f7563510-3ca6-49c1-a9be-eaa9281a75a2"],
 " to create a fake data set that resembles Bishop\[CloseCurlyQuote]s \
qualitatively.\n\nWolfram\[CloseCurlyQuote]s built-in ",
 Cell[BoxData[
  FormBox["NormalDistribution", TraditionalForm]], "Code",ExpressionUUID->
  "391719cb-f0ae-47d9-b6f8-cf0a16d1de30"],
 " takes the standard deviation as its second argument, not the variance. \
Mixing up standard deviation and variance is an easy mistake. Bishop\
\[CloseCurlyQuote]s notation for normal distribution takes variance as second \
argument, so beware. "
}], "Text",
 CellChangeTimes->{{3.727925037995728*^9, 3.7279251079034653`*^9}, {
  3.7281672861902847`*^9, 3.728167315662861*^9}, {3.728217520627878*^9, 
  3.7282175317062597`*^9}, {3.728217692277302*^9, 3.728217821974227*^9}, {
  3.72821832687463*^9, 3.7282183503446493`*^9}, {3.728219468837654*^9, 
  3.728219505064865*^9}, {3.728251312926087*^9, 3.728251372591283*^9}, {
  3.729024054019828*^9, 3.729024066384492*^9}, {3.7291650862455063`*^9, 
  3.7291651414164467`*^9}, {3.729165177227763*^9, 3.729165178485721*^9}, {
  3.729182224031723*^9, 3.7291822276320543`*^9}, {3.729797666011817*^9, 
  3.729797705464027*^9}, {3.730312304215117*^9, 
  3.7303123074886293`*^9}},ExpressionUUID->"bdc6fb65-119a-4175-b9f9-\
316dfeb6c274"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"bishopTrainingSetY", ",", "bishopGroundTruthY"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bishopGroundTruthY", "[", "xs_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"2.", "\[Pi]", "#"}], "]"}], "&"}], "/@", "xs"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bishopTrainingSetY", "[", 
    RowBox[{"xs_", ",", "\[Sigma]_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", "=", 
       RowBox[{"Length", "@", "xs"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"bishopGroundTruthY", "[", "xs", "]"}], "\[IndentingNewLine]", 
      "+", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0.", ",", "\[Sigma]"}], "]"}], ",", "n"}], "]"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.727879752743185*^9, 3.7278799854455643`*^9}, {
  3.727880015690054*^9, 3.7278800794720173`*^9}, {3.727880507980577*^9, 
  3.7278805461972027`*^9}, {3.729175578225967*^9, 3.729175578232574*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"8ba009d7-6ad6-4e2a-a567-e2fad21156b3"],

Cell[TextData[{
 "Take a sample of the outputs and assign it the names ",
 Cell[BoxData[
  FormBox["bts", TraditionalForm]], "Code",ExpressionUUID->
  "72d63cd9-b72b-47f5-b59e-8ee44c6dcc64"],
 " for ",
 Cell[BoxData[
  FormBox["bishopTrainingSet", TraditionalForm]], "Code",ExpressionUUID->
  "f9cdc4b8-56b6-4315-84c8-cce498dec61d"],
 ". It isn\[CloseCurlyQuote]t his actual training set, which I didn\
\[CloseCurlyQuote]t find in print, just my simulation."
}], "Text",
 CellChangeTimes->{{3.7278832163983307`*^9, 3.7278832375275517`*^9}, {
  3.727906008140655*^9, 3.727906061879993*^9}, {3.727967692026178*^9, 
  3.727967840843544*^9}, {3.727967872455134*^9, 3.7279678771043777`*^9}, {
  3.727969674731044*^9, 3.727969699819124*^9}, {3.727969774693037*^9, 
  3.727969782528049*^9}, {3.727969836960168*^9, 3.727969942714082*^9}, {
  3.72796998393566*^9, 3.727969992896991*^9}, {3.727970026070797*^9, 
  3.727970373300626*^9}, {3.727970485196838*^9, 3.727970512318493*^9}, {
  3.727970712603229*^9, 3.7279707772612677`*^9}, {3.727971265852014*^9, 
  3.7279713568853807`*^9}, {3.7281671900202827`*^9, 3.7281672837287903`*^9}, {
  3.728167321065092*^9, 3.728167321584338*^9}, {3.729182260744134*^9, 
  3.729182293947283*^9}, {3.7297977262479973`*^9, 
  3.729797728261697*^9}},ExpressionUUID->"54827bd6-34f4-4737-a7ba-\
d3104ca29794"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "bishopTrainingSet", ",", "bts", ",", "bishopFake", ",", 
    "bishopFakeSigma"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bishopFake", "[", 
    RowBox[{"n_", ",", "\[Sigma]_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xs", "=", 
       RowBox[{"bishopTrainingSetX", "[", "n", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ys", "=", 
         RowBox[{"bishopTrainingSetY", "[", 
          RowBox[{"xs", ",", "\[Sigma]"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"xs", ",", "ys"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bishopFakeSigma", "=", "0.30"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bishopTrainingSet", "=", 
   RowBox[{"bts", "=", 
    RowBox[{"bishopFake", "[", 
     RowBox[{"10", ",", "bishopFakeSigma"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.72788015184029*^9, 3.727880231778208*^9}, {
   3.727880385369709*^9, 3.727880413342643*^9}, 3.727880526308257*^9, {
   3.727967805222126*^9, 3.72796780531704*^9}, {3.7279697920516977`*^9, 
   3.72796979498647*^9}, {3.727969950515656*^9, 3.727969950591378*^9}, {
   3.727994080862403*^9, 3.727994108975196*^9}, {3.729175578236166*^9, 
   3.7291756088584633`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"e8dc79db-fc1e-44d9-9d9c-6a0d36e42fb9"],

Cell["Make a plot like Bishop\[CloseCurlyQuote]s figure 1.7 (page 10).", \
"Text",
 CellChangeTimes->{{3.727906073807754*^9, 3.727906077471641*^9}, {
  3.727915536304657*^9, 3.7279155386681232`*^9}, {3.7279713648223457`*^9, 
  3.727971369779395*^9}},ExpressionUUID->"c73deac6-6150-44d0-bc24-\
a6f391e291fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"lp", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"bts", "\[Transpose]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Graphics", "@", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", 
             RowBox[{"Circle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}], "}"}]}], 
          ",", ".05"}], "}"}]}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lp", ",", 
       RowBox[{"(*", " ", 
        RowBox[{"once", " ", "to", " ", "set", " ", "the", " ", "scale"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2.", "\[Pi]", " ", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0.", ",", "1."}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", "Green"}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", "lp"}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{"again", " ", "to", " ", "overdraw", " ", "the", " ", "plot"}],
        " ", "*)"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<t\>\""}], "}"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.727880085493072*^9, 3.72788013972164*^9}, {
   3.7278802437563953`*^9, 3.7278802581076803`*^9}, {3.7278803034902487`*^9, 
   3.727880361169203*^9}, {3.7278804194474173`*^9, 3.727880429435811*^9}, 
   3.7278806446621532`*^9, {3.7278807572759333`*^9, 3.7278807745809507`*^9}, {
   3.727880893504468*^9, 3.7278809867037153`*^9}, {3.7278810338930473`*^9, 
   3.727881110077335*^9}, {3.7278811411219473`*^9, 3.7278813474824867`*^9}, {
   3.727881617681645*^9, 3.727881731860063*^9}, {3.727882548678594*^9, 
   3.72788267853528*^9}, {3.727882716394725*^9, 3.727882813824841*^9}, {
   3.727882846153562*^9, 3.727882924674261*^9}, {3.72788567102006*^9, 
   3.727885671857286*^9}, {3.727923022530311*^9, 3.727923022847533*^9}, 
   3.7291756286936607`*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"82e02689-45c4-48b3-a720-b61526dcd063"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
      AbsoluteThickness[1.6], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0., 0.37200253541498823}, Automatic, 
       Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.1111111111111111, 0.08611616262183008}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.2222222222222222, 0.923586800027899}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.3333333333333333, 0.9483409963140258}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.4444444444444444, 0.49877697601477533}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.5555555555555556, -0.8167561688841066}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.6666666666666666, -1.055718613045213}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.7777777777777777, -1.229849357852421}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.8888888888888888, -0.9686905674573074}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {1., 0.06582673284283011}, Automatic, 
       Scaled[{0.05, 0.05}]]}, {}}, {}, {}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 1, 0], Thickness[Large], Opacity[1.], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$2341#1"]& ]}, {}, {}}, {{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
      AbsoluteThickness[1.6], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0., 0.37200253541498823}, Automatic, 
       Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.1111111111111111, 0.08611616262183008}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.2222222222222222, 0.923586800027899}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.3333333333333333, 0.9483409963140258}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.4444444444444444, 0.49877697601477533}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.5555555555555556, -0.8167561688841066}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.6666666666666666, -1.055718613045213}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.7777777777777777, -1.229849357852421}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.8888888888888888, -0.9686905674573074}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {1., 0.06582673284283011}, Automatic, 
       Scaled[{0.05, 0.05}]]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"t\"", TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {-1.229849357852421, 0.9483409963140258}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.727880775294775*^9, 3.727880787730764*^9}, {
   3.727880934685656*^9, 3.7278809872854*^9}, {3.727881034647586*^9, 
   3.72788111070538*^9}, {3.727881149340519*^9, 3.727881273359902*^9}, {
   3.727881331668276*^9, 3.727881367908173*^9}, {3.727881679253851*^9, 
   3.727881732639435*^9}, {3.727882562737458*^9, 3.727882578070189*^9}, {
   3.727882623588429*^9, 3.727882694410623*^9}, {3.727882734556818*^9, 
   3.727882799272423*^9}, {3.727882852380828*^9, 3.727882925334324*^9}, 
   3.7278856759136066`*^9, 3.7278870450627317`*^9, 3.7279153858103523`*^9, 
   3.72791803725655*^9, 3.72791809498518*^9, 3.727923023895686*^9, 
   3.7279241984537888`*^9, 3.727925186689782*^9, {3.7279277074383373`*^9, 
   3.727927732567607*^9}, 3.727967810615572*^9, 3.7279687335582027`*^9, 
   3.727969808589816*^9, 3.7279699554358187`*^9, 3.7280443521874313`*^9, 
   3.728046448171671*^9, 3.7280664700061007`*^9, 3.728068121166772*^9, 
   3.7280837839406548`*^9, 3.728090742104409*^9, 3.728169445708262*^9, 
   3.728169541253911*^9, 3.728169823409259*^9, 3.728169883432933*^9, 
   3.728252955971521*^9, 3.728946256243698*^9, 3.729022900259424*^9, {
   3.729119978973509*^9, 3.729119995969993*^9}, 3.7291210724993067`*^9, 
   3.7291211109977207`*^9, 3.7291723078683023`*^9, 3.7291756908751507`*^9, 
   3.7291757981263313`*^9, 3.729183412685206*^9, {3.72918344796786*^9, 
   3.7291834608971157`*^9}, 3.729255937258317*^9, 3.729552301814382*^9, 
   3.72955787630888*^9, 3.7296298382718487`*^9, 3.729634636236637*^9, 
   3.7296428725154552`*^9, 3.7296429092535467`*^9, 3.7296439391961117`*^9, 
   3.729647185507022*^9, 3.7296832022027597`*^9, 3.729778155560172*^9, 
   3.729779233716967*^9, 3.729779280842063*^9, 3.729894700122344*^9, 
   3.72989600617513*^9, 3.729896152791457*^9, 3.729897295719614*^9, 
   3.730140355095414*^9, 3.730240271278595*^9, 3.730380091486162*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"6d1023cf-bad0-4690-a303-c54478bc805c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Partials: Gradients of the Unknown Parameters", "Subsection",
 CellChangeTimes->{{3.729182306493725*^9, 
  3.7291823233798018`*^9}},ExpressionUUID->"3c3da3f6-3bd2-4f62-968d-\
095193fc57c2"],

Cell[TextData[{
 "Write a function for partials. Quietly map the indeterminate ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["0", "0"], TraditionalForm]],ExpressionUUID->
  "b579cedc-762e-4d8b-9c45-f853e45c0428"],
 " to 1. Test it symbolically."
}], "Text",
 CellChangeTimes->{{3.727925195515706*^9, 3.727925232785982*^9}, {
   3.7279678941263742`*^9, 3.727967900133898*^9}, {3.72797367998691*^9, 
   3.727973685039398*^9}, 3.728086523246662*^9, {3.72816734159263*^9, 
   3.7281673598690157`*^9}},ExpressionUUID->"a694d9c7-cace-48fb-8330-\
ef697ae6c5fd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "partialsFn", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"partialsFn", "[", 
    RowBox[{"order_", ",", "xs_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "@", 
      RowBox[{"Quiet", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["#", 
           RowBox[{"i", "-", "1"}]], "/.", 
          RowBox[{"{", 
           RowBox[{"Indeterminate", "\[Rule]", "1"}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"order", "+", "1"}]}], "}"}]}], "]"}]}]}], "&"}], "@", 
    "xs"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "@", 
  RowBox[{"partialsFn", "[", 
   RowBox[{"6", ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["x", "1"], ",", 
      SubscriptBox["x", "2"], ",", 
      SubscriptBox["x", "\[CapitalMu]"]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.727887092392867*^9, 3.7278870953121367`*^9}, {
  3.7278927196950607`*^9, 3.727893003172378*^9}, {3.727903114052039*^9, 
  3.7279031476650763`*^9}, {3.7279033176045437`*^9, 3.727903339378933*^9}, {
  3.727915570017507*^9, 3.727915600803166*^9}, {3.7279156539215097`*^9, 
  3.727915686797736*^9}, {3.727923101166524*^9, 3.727923181040741*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"808798b0-cb49-49bf-ba5d-a4435e007b6c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      SubscriptBox["x", "1"], 
      SubsuperscriptBox["x", "1", "2"], 
      SubsuperscriptBox["x", "1", "3"], 
      SubsuperscriptBox["x", "1", "4"], 
      SubsuperscriptBox["x", "1", "5"], 
      SubsuperscriptBox["x", "1", "6"]},
     {"1", 
      SubscriptBox["x", "2"], 
      SubsuperscriptBox["x", "2", "2"], 
      SubsuperscriptBox["x", "2", "3"], 
      SubsuperscriptBox["x", "2", "4"], 
      SubsuperscriptBox["x", "2", "5"], 
      SubsuperscriptBox["x", "2", "6"]},
     {"1", 
      SubscriptBox["x", "\[CapitalMu]"], 
      SubsuperscriptBox["x", "\[CapitalMu]", "2"], 
      SubsuperscriptBox["x", "\[CapitalMu]", "3"], 
      SubsuperscriptBox["x", "\[CapitalMu]", "4"], 
      SubsuperscriptBox["x", "\[CapitalMu]", "5"], 
      SubsuperscriptBox["x", "\[CapitalMu]", "6"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7279231186573143`*^9, 3.7279231819525948`*^9}, 
   3.7279241985452023`*^9, {3.727927707499826*^9, 3.727927732638883*^9}, 
   3.7279678106408577`*^9, 3.727968733627557*^9, 3.727969808625535*^9, 
   3.727969955460413*^9, 3.728044352257525*^9, 3.728046448251258*^9, 
   3.728066470133565*^9, 3.728068121219434*^9, 3.728083784014492*^9, 
   3.728090742211894*^9, 3.728169445777561*^9, 3.728169541293954*^9, 
   3.7281698234776993`*^9, 3.728169883478408*^9, 3.728252956051774*^9, 
   3.728946256298505*^9, 3.729022900282452*^9, {3.729119979041417*^9, 
   3.7291199960654287`*^9}, 3.729121072577467*^9, 3.729121111088888*^9, 
   3.729172307938603*^9, 3.729175690912595*^9, 3.729175799963489*^9, 
   3.729183412718895*^9, {3.729183448005946*^9, 3.729183460929661*^9}, 
   3.7292559373083487`*^9, 3.7295523018487167`*^9, 3.729557876329398*^9, 
   3.729629838290058*^9, 3.729634636267157*^9, 3.729642872549694*^9, 
   3.729642909372253*^9, 3.729643939223579*^9, 3.7296471855760403`*^9, 
   3.729683202239718*^9, 3.729778155623721*^9, 3.7297792337834044`*^9, 
   3.729779280904265*^9, 3.729894700189678*^9, 3.729896006236771*^9, 
   3.729896152859838*^9, 3.729897295756055*^9, 3.7301403551832657`*^9, 
   3.7302402713153687`*^9, 3.7303800915212917`*^9},
 CellLabel->
  "Out[23]//MatrixForm=",ExpressionUUID->"2abf48fd-0846-44d5-b538-\
d1d37366ddf8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["The MAP Equations", "Subsection",
 CellChangeTimes->{{3.7291823695201817`*^9, 
  3.7291823731744957`*^9}},ExpressionUUID->"767759cd-2d96-426e-94ca-\
643a24c684dd"],

Cell[TextData[{
 "Confer Bishop\[CloseCurlyQuote]s equation 3.3, page 138, where he writes \
the parameters to estimate as ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "f93adc3c-853e-4c72-9d86-2aa88377c8d3"],
 " and the observation equation as"
}], "Text",
 CellChangeTimes->{{3.727967934130774*^9, 3.727967994255875*^9}, {
  3.728167384043807*^9, 3.7281673844840384`*^9}, {3.7282203912603188`*^9, 
  3.728220431494154*^9}, {3.7282205477554483`*^9, 3.728220580377705*^9}, {
  3.728220691138853*^9, 3.72822075490273*^9}, {3.728222921609508*^9, 
  3.728222923769473*^9}, {3.72822433008339*^9, 
  3.728224339280476*^9}},ExpressionUUID->"afc353ba-db82-42f0-85a7-\
fb076016da5c"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"y", "(", 
    RowBox[{
     StyleBox["x",
      FontWeight->"Bold"], 
     StyleBox[",",
      FontWeight->"Plain"], 
     StyleBox[" ",
      FontWeight->"Plain"], 
     StyleBox["w",
      FontWeight->"Bold"]}], 
    StyleBox[")",
     FontWeight->"Plain"]}], 
   StyleBox["=",
    FontWeight->"Plain"], 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"j", "=", "0"}], "\[CapitalMu]"], 
    RowBox[{
     SubscriptBox[
      StyleBox["w",
       FontWeight->"Plain"], "j"], 
     RowBox[{
      SubscriptBox["\[Phi]", 
       RowBox[{"\[ThinSpace]", "j"}]], "\[ThinSpace]", "(", 
      StyleBox["x",
       FontWeight->"Bold"], ")"}]}]}]}], TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.7282207613079443`*^9, 3.728220889669578*^9}, {
  3.728221929311122*^9, 3.728221929312549*^9}, {3.7282229942899933`*^9, 
  3.728223000986117*^9}, {3.728251451814763*^9, 
  3.728251478938428*^9}},ExpressionUUID->"b3852931-b403-43be-9dd4-\
fbf8ad805281"],

Cell[TextData[{
 "(",
 StyleBox["bias",
  FontSlant->"Italic"],
 " incorporated as coefficient ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", "0"], TraditionalForm]],ExpressionUUID->
  "47a29354-35e1-4999-8a23-378844599a74"],
 " of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["0", "th"], TraditionalForm]],ExpressionUUID->
  "856ceccb-b337-46f7-acfb-9cde919fa114"],
 " basis function). This is predictive: you give me concrete inputs ",
 Cell[BoxData[
  FormBox[
   StyleBox["x",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "15dedbdc-ea13-4583-be2d-b0f2fd3052c4"],
 ", parameters ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "5c7a5a42-af1e-409a-a658-bfca1a86f03c"],
 ", and I\[CloseCurlyQuote]ll give you a predicted observation ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "6aae751e-38d8-4953-867b-5863b83af9f4"],
 " in terms of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalMu]", "+", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "9695c06c-b4ec-4727-8d09-f402312042ba"],
 " basis functions ",
 Cell[BoxData[
  FormBox["\[Phi]", TraditionalForm]],ExpressionUUID->
  "81dd4bd5-3e34-40e2-8c3d-0e0c557b5c29"],
 " corresponding to the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalMu]", "+", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "43b2d63e-6d89-4612-9554-3a508721c906"],
 " unknown parameters. For polynomial basis functions, the number of \
parameters is one more than the order ",
 Cell[BoxData[
  FormBox["\[CapitalMu]", TraditionalForm]],ExpressionUUID->
  "ab13ff31-c2c7-47c2-8dd5-58fb42fbf222"],
 " of the polynomials. The basis functions can be anything, however: \
wavelets, Fourier components, etc.\n\nBishop (inexplicably) converts ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "2413a212-ea76-40c0-9640-4e8b71d6160d"],
 " into a covector and writes"
}], "Text",
 CellChangeTimes->{{3.728220906295454*^9, 3.728220946192494*^9}, {
   3.7282218953744383`*^9, 3.728221919178042*^9}, {3.728222933472761*^9, 
   3.728222989706678*^9}, {3.728223024410286*^9, 3.728223057641677*^9}, {
   3.72822435625596*^9, 3.728224387983367*^9}, 3.728251485977022*^9, 
   3.729119179755419*^9, {3.72916521124009*^9, 3.729165279052802*^9}, {
   3.7291823881914263`*^9, 3.7291824219583178`*^9}, {3.729644981843032*^9, 
   3.729644984372673*^9}, {3.729797791815206*^9, 
   3.72979787349229*^9}},ExpressionUUID->"4caa1d79-69f9-4857-9ca0-\
f60d221f28a0"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"y", "(", 
    RowBox[{
     StyleBox["x",
      FontWeight->"Bold"], 
     StyleBox[",",
      FontWeight->"Plain"], 
     StyleBox[" ",
      FontWeight->"Plain"], 
     StyleBox["w",
      FontWeight->"Bold"]}], 
    StyleBox[")",
     FontWeight->"Plain"]}], 
   StyleBox["=",
    FontWeight->"Plain"], 
   RowBox[{
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], 
     StyleBox["\[Transpose]",
      FontWeight->"Plain"]}], 
    RowBox[{
     StyleBox["\[Phi]",
      FontWeight->"Bold"], 
     StyleBox["\[ThinSpace]",
      FontWeight->"Plain"], "(", 
     StyleBox["x",
      FontWeight->"Bold"], 
     StyleBox[")",
      FontWeight->"Plain"]}]}]}], TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.7282219448855343`*^9, 
  3.728222027597753*^9}},ExpressionUUID->"e9b01368-12da-488b-94ce-\
2dd50bdf1a8e"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["\[Phi]",
     FontWeight->"Bold"], "\[ThinSpace]", "(", 
    StyleBox["x",
     FontWeight->"Bold"], ")"}], TraditionalForm]],ExpressionUUID->
  "7664d159-29b2-44e2-8792-094becf35ae2"],
 " is an ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"\[CapitalMu]", "+", "1"}], ")"}], TraditionalForm]],
  ExpressionUUID->"2c7292a6-4c65-41e9-b006-06cbefd16de3"],
 "-dimensional column-vector of basis functions, the transpose of one row of \
our partials matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "ed495fe0-6173-47f1-97f1-6ccd7a93693a"],
 ". We claim it\[CloseCurlyQuote]s better always to think of partials or \
gradients as values of differential forms, thus covectors (row vectors or \
covariant vectors, see ",
 ButtonBox["https://goo.gl/DkeVmM",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://goo.gl/DkeVmM"], None},
  ButtonNote->"https://goo.gl/DkeVmM"],
 ", ",
 ButtonBox["https://goo.gl/JgzqLR",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://goo.gl/JgzqLR"], None},
  ButtonNote->"https://goo.gl/JgzqLR"],
 ", and ",
 ButtonBox["https://goo.gl/4TcF4T",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://goo.gl/4TcF4T"], None},
  ButtonNote->"https://goo.gl/4TcF4T"],
 "). \n\nTo find best-fit values for ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "2e0cbb6f-7787-4b3a-9367-89d4bc1761dd"],
 ", rows of the partials matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "4ef83fad-5c97-4ae5-98df-5042206ebc41"],
 " are the covector gradients of ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "c7e242fb-2722-4ae6-9a2b-3e2d84e871a3"],
 " with respect to ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "baff650f-684a-47d3-95c6-278ac2b4a93c"],
 ". We prefer to write"
}], "Text",
 CellChangeTimes->{{3.728222034989254*^9, 3.728222053237129*^9}, {
   3.728222178848859*^9, 3.7282222660799637`*^9}, {3.728222300000989*^9, 
   3.7282223904929523`*^9}, {3.7282228551572657`*^9, 3.728222859737496*^9}, {
   3.728223076788225*^9, 3.728223190463003*^9}, {3.728223230865528*^9, 
   3.728223361801167*^9}, 3.728223984636827*^9, {3.7282240554498873`*^9, 
   3.728224092328535*^9}, {3.728224400399331*^9, 3.728224741229491*^9}, {
   3.728224776796547*^9, 3.728224809363667*^9}, {3.7282517358200502`*^9, 
   3.7282517662896633`*^9}, {3.729091174357189*^9, 3.7290911785502853`*^9}, {
   3.729091212251935*^9, 3.729091219775629*^9}, {3.729091277188416*^9, 
   3.7290913266532917`*^9}, {3.72909268413879*^9, 3.729092706422126*^9}, {
   3.729119179778685*^9, 3.7291191797984324`*^9}, {3.729120346504904*^9, 
   3.7291203520894012`*^9}, {3.729165311843924*^9, 3.729165352537273*^9}, {
   3.7297978998390903`*^9, 
   3.7297979011646757`*^9}},ExpressionUUID->"d6d02b47-7699-4863-b420-\
0e597bfb6fd0"],

Cell[CellGroupData[{

Cell[TextData[{
 "observations as an ",
 Cell[BoxData[
  FormBox["\[CapitalNu]", TraditionalForm]],ExpressionUUID->
  "fcfdbf6a-2e88-4194-8eb9-62448305406d"],
 "-dimensional column-vector ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalZeta]", 
    RowBox[{"\[VeryThinSpace]", "\[CapitalNu]"}]], TraditionalForm]],
  ExpressionUUID->"7f371c41-2439-49ff-a405-bbbac410c97c"],
 " with elements ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Zeta]", 
    RowBox[{"\[VeryThinSpace]", 
     RowBox[{"j", "\[ThinSpace]", "\[Element]", "\[ThinSpace]", 
      RowBox[{"[", "\[ThinSpace]", 
       RowBox[{
        RowBox[{"1", "\[ThinSpace]", ".."}], "\[CapitalNu]"}], "\[ThinSpace]",
        "]"}]}]}]], TraditionalForm]],ExpressionUUID->
  "31127627-edad-47a8-807a-e6bbbe593f86"]
}], "Item",
 CellChangeTimes->{{3.728222034989254*^9, 3.728222053237129*^9}, {
   3.728222178848859*^9, 3.7282222660799637`*^9}, {3.728222300000989*^9, 
   3.7282223904929523`*^9}, {3.7282228551572657`*^9, 3.728222859737496*^9}, {
   3.728223076788225*^9, 3.728223190463003*^9}, {3.728223230865528*^9, 
   3.728223361801167*^9}, 3.728223984636827*^9, {3.7282240554498873`*^9, 
   3.728224092328535*^9}, {3.728224400399331*^9, 3.728224741229491*^9}, {
   3.728224776796547*^9, 3.728224809363667*^9}, {3.7282517358200502`*^9, 
   3.728251740048966*^9}, {3.728251771407675*^9, 3.728251772575143*^9}, {
   3.729029834166656*^9, 3.7290298371502934`*^9}, {3.72912036382929*^9, 
   3.7291203684585857`*^9}, {3.729645042322447*^9, 
   3.7296450425379868`*^9}},ExpressionUUID->"d125a78e-ad63-4d0e-b225-\
af94823bc9f1"],

Cell[TextData[{
 "the model or unknown parameters, an ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"\[CapitalMu]", "+", "1"}], ")"}], TraditionalForm]],
  ExpressionUUID->"34093d14-aa35-4214-a3e2-8b50e8957f15"],
 "-dimensional column-vector ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalXi]", 
    RowBox[{"\[ThinSpace]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalMu]", "+", "1"}], ")"}], "\[Times]", "1"}]}]], 
   TraditionalForm]],ExpressionUUID->"27530d6a-94c4-4ec6-98d8-e68dfb593b21"],
 " with elements ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", 
    RowBox[{"\[ThinSpace]", 
     RowBox[{"i", "\[ThinSpace]", "\[Element]", "\[ThinSpace]", 
      RowBox[{"[", "\[ThinSpace]", 
       RowBox[{
        RowBox[{"0", "\[ThinSpace]", ".."}], "\[CapitalMu]"}], "\[ThinSpace]",
        "]"}]}]}]], TraditionalForm]],ExpressionUUID->
  "18943418-6c16-48be-9e34-aa1a1b321058"]
}], "Item",
 CellChangeTimes->{{3.728222034989254*^9, 3.728222053237129*^9}, {
   3.728222178848859*^9, 3.7282222660799637`*^9}, {3.728222300000989*^9, 
   3.7282223904929523`*^9}, {3.7282228551572657`*^9, 3.728222859737496*^9}, {
   3.728223076788225*^9, 3.728223190463003*^9}, {3.728223230865528*^9, 
   3.728223361801167*^9}, 3.728223984636827*^9, {3.7282240554498873`*^9, 
   3.728224092328535*^9}, {3.728224400399331*^9, 3.728224741229491*^9}, {
   3.728224776796547*^9, 3.728224809363667*^9}, {3.7282517358200502`*^9, 
   3.728251740048966*^9}, {3.728251771407675*^9, 3.7282517814515944`*^9}, {
   3.7282518993121*^9, 3.7282519004727907`*^9}, {3.729029844861236*^9, 
   3.72902984786119*^9}, {3.729120316833633*^9, 3.729120321664834*^9}, {
   3.729645058784465*^9, 3.729645058784536*^9}, {3.729797943877902*^9, 
   3.729797958453072*^9}},ExpressionUUID->"2a13af40-d09a-41f5-8eab-\
2ae9717435cd"],

Cell[TextData[{
 "partials matrix as ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", 
    RowBox[{"N", "\[Times]", 
     RowBox[{"(", 
      RowBox[{"\[CapitalMu]", "+", "1"}], ")"}]}]], TraditionalForm]],
  ExpressionUUID->"d3592327-6324-4fd1-8aca-3364bb7df57a"]
}], "Item",
 CellChangeTimes->{{3.728222034989254*^9, 3.728222053237129*^9}, {
   3.728222178848859*^9, 3.7282222660799637`*^9}, {3.728222300000989*^9, 
   3.7282223904929523`*^9}, {3.7282228551572657`*^9, 3.728222859737496*^9}, {
   3.728223076788225*^9, 3.728223190463003*^9}, {3.728223230865528*^9, 
   3.728223361801167*^9}, 3.728223984636827*^9, {3.7282240554498873`*^9, 
   3.728224092328535*^9}, {3.728224400399331*^9, 3.728224741229491*^9}, {
   3.728224776796547*^9, 3.728224809363667*^9}, {3.7282517358200502`*^9, 
   3.728251740048966*^9}, {3.728251771407675*^9, 3.728251789543252*^9}, {
   3.72825189594316*^9, 3.7282518961283197`*^9}, {3.729029865577499*^9, 
   3.7290298774959583`*^9}, {3.729797981334482*^9, 
   3.7297979898657427`*^9}},ExpressionUUID->"cce41cf6-4157-476c-984f-\
2a030a9228a7"]
}, Open  ]],

Cell[TextData[{
 "Bishop calls our partials matrix the ",
 StyleBox["design matrix",
  FontSlant->"Italic"],
 " in his equation 3.16, page 142, consisting of values of the basis \
functions at the concrete inputs ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["x",
     FontWeight->"Bold"], 
    RowBox[{"n", "\[ThinSpace]", "\[Element]", "\[ThinSpace]", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"1", ".."}], "N"}], "]"}]}]], TraditionalForm]],
  ExpressionUUID->"d2561181-7429-4cc2-999c-7fe2b5f36bac"],
 ". Bishop must (more cumbersomely) work in the dual of our formulation. \n\n\
We prefer to write as follows: the covector rows of the design matrix terms \
as polynomial basis functions evaluated at the input points ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", 
    RowBox[{"n", "\[ThinSpace]", "\[Element]", "\[ThinSpace]", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"1", ".."}], "\[CapitalNu]"}], "]"}]}]], TraditionalForm]],
  ExpressionUUID->"c0cfc668-a741-4199-891b-2bde10b355d7"],
 ":"
}], "Text",
 CellChangeTimes->{{3.728222034989254*^9, 3.728222053237129*^9}, {
   3.728222178848859*^9, 3.7282222660799637`*^9}, {3.728222300000989*^9, 
   3.7282223904929523`*^9}, {3.7282228551572657`*^9, 3.728222859737496*^9}, {
   3.728223076788225*^9, 3.728223190463003*^9}, {3.728223230865528*^9, 
   3.728223361801167*^9}, 3.728223984636827*^9, {3.7282240554498873`*^9, 
   3.728224092328535*^9}, {3.728224400399331*^9, 3.728224741229491*^9}, {
   3.728224776796547*^9, 3.728224809363667*^9}, {3.7282517358200502`*^9, 
   3.728251740048966*^9}, {3.728251771407675*^9, 3.728251888355431*^9}, {
   3.729029892321496*^9, 3.729029983337439*^9}, {3.7291204222110157`*^9, 
   3.729120492782894*^9}, {3.7291653714940968`*^9, 3.729165462908938*^9}, {
   3.729182456005975*^9, 
   3.7291824795949993`*^9}},ExpressionUUID->"dbc30210-c866-4ae3-bba5-\
c1d548509902"],

Cell[BoxData[
 FormBox[
  RowBox[{"Z", "  ", "=", "  ", 
   RowBox[{
    RowBox[{"A", "\[CenterDot]", "\[CapitalXi]"}], "  ", "=", "  ", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         SubscriptBox["\[Zeta]", "0"]},
        {
         SubscriptBox["\[Zeta]", "1"]},
        {"\[VerticalEllipsis]"},
        {
         SubscriptBox["\[Zeta]", "\[CapitalNu]"]}
       }], ")"}], "  ", "=", "   ", 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"(", GridBox[{
           {
            RowBox[{"1", "=", 
             SubsuperscriptBox["x", "1", "0"]}], 
            SubscriptBox["x", "1"], 
            SubsuperscriptBox["x", "1", "2"], "\[CenterEllipsis]", 
            SubsuperscriptBox["x", "1", "M"]},
           {
            RowBox[{"1", "=", 
             SubsuperscriptBox["x", "2", "0"]}], 
            SubscriptBox["x", "2"], 
            SubsuperscriptBox["x", "2", "2"], "\[CenterEllipsis]", 
            SubsuperscriptBox["x", "2", "M"]},
           {"\[VerticalEllipsis]", "\[VerticalEllipsis]", " ", 
            "\[DescendingEllipsis]", "\[VerticalEllipsis]"},
           {
            RowBox[{"1", "=", 
             SubsuperscriptBox["x", "N", "0"]}], 
            SubscriptBox["x", "N"], 
            SubsuperscriptBox["x", "N", "2"], "\[CenterEllipsis]", 
            SubsuperscriptBox["x", "N", "M"]}
          }], ")"}],
        FontWeight->"Plain"], "  ", "\[CenterDot]", "  ", 
       RowBox[{"(", GridBox[{
          {
           SubscriptBox["\[Xi]", "0"]},
          {
           SubscriptBox["\[Xi]", "1"]},
          {"\[VerticalEllipsis]"},
          {
           SubscriptBox["\[Xi]", "\[CapitalMu]"]}
         }], ")"}]}], "  ", "+", "  ", "noise"}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.7282223267202578`*^9, 3.728222330771399*^9}, {
  3.728223414452943*^9, 3.728223474859379*^9}, {3.728223514299732*^9, 
  3.728223975929124*^9}, {3.728224109293193*^9, 3.728224109294752*^9}, {
  3.728224191499645*^9, 3.728224196666141*^9}, {3.728947752192189*^9, 
  3.728947823567884*^9}, {3.728949775673676*^9, 3.728949826088863*^9}, {
  3.729109560005604*^9, 3.72910969334587*^9}, {3.729109729502664*^9, 
  3.729109798273975*^9}, {3.729645085890316*^9, 
  3.729645106992324*^9}},ExpressionUUID->"9130f5d5-4502-424e-a97b-\
08a91c27fc62"],

Cell[TextData[{
 "then packed up into rows of the ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "867233d0-d313-41bb-ac38-e2b5260ac135"],
 " matrix. "
}], "Text",
 CellChangeTimes->{{3.729120500205209*^9, 
  3.729120518926064*^9}},ExpressionUUID->"83883ae6-d076-441c-8482-\
06f206529b42"],

Cell[BoxData[
 FormBox[
  RowBox[{"Z", "  ", "=", "  ", 
   RowBox[{
    RowBox[{"A", "\[CenterDot]", "\[CapitalXi]"}], "  ", "=", "  ", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         SubscriptBox["\[Zeta]", "0"]},
        {
         SubscriptBox["\[Zeta]", "1"]},
        {"\[VerticalEllipsis]"},
        {
         SubscriptBox["\[Zeta]", "\[CapitalNu]"]}
       }], ")"}], "  ", "=", "   ", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        StyleBox[
         RowBox[{"(", GridBox[{
            {
             RowBox[{
              SubscriptBox[
               RowBox[{
                StyleBox["A",
                 FontWeight->"Plain"], 
                StyleBox["\[ThinSpace]",
                 FontWeight->"Bold"]}], 
               RowBox[{"1", "\[Times]", 
                RowBox[{"(", 
                 RowBox[{"\[CapitalMu]", "+", "1"}], ")"}]}]], 
              RowBox[{"(", 
               SubscriptBox["x", "1"], ")"}]}]},
            {
             RowBox[{
              SubscriptBox[
               RowBox[{
                StyleBox["A",
                 FontWeight->"Plain"], 
                StyleBox["\[ThinSpace]",
                 FontWeight->"Bold"]}], 
               RowBox[{"1", "\[Times]", 
                RowBox[{"(", 
                 RowBox[{"\[CapitalMu]", "+", "1"}], ")"}]}]], 
              RowBox[{"(", 
               SubscriptBox["x", "2"], ")"}]}]},
            {"\[VerticalEllipsis]"},
            {
             RowBox[{
              SubscriptBox[
               RowBox[{
                StyleBox["A",
                 FontWeight->"Plain"], 
                StyleBox["\[ThinSpace]",
                 FontWeight->"Bold"]}], 
               RowBox[{"1", "\[Times]", 
                RowBox[{"(", 
                 RowBox[{"\[CapitalMu]", "+", "1"}], ")"}]}]], 
              RowBox[{"(", 
               SubscriptBox["x", "\[CapitalNu]"], ")"}]}]}
           }], ")"}],
         FontWeight->"Plain"], 
        RowBox[{"\[CapitalNu]", "\[Times]", 
         RowBox[{"(", 
          RowBox[{"\[CapitalMu]", "+", "1"}], ")"}]}]], "  ", "\[CenterDot]", 
       "  ", 
       RowBox[{"(", GridBox[{
          {
           SubscriptBox["\[Xi]", "0"]},
          {
           SubscriptBox["\[Xi]", "1"]},
          {"\[VerticalEllipsis]"},
          {
           SubscriptBox["\[Xi]", "\[CapitalMu]"]}
         }], ")"}]}], "  ", "+", "  ", "noise"}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.7282223267202578`*^9, 3.728222330771399*^9}, {
  3.728223414452943*^9, 3.728223474859379*^9}, {3.728223514299732*^9, 
  3.728223975929124*^9}, {3.728224109293193*^9, 3.728224109294752*^9}, {
  3.728224191499645*^9, 3.728224196666141*^9}, {3.728947752192189*^9, 
  3.728947823567884*^9}, {3.728949775673676*^9, 3.728949826088863*^9}, {
  3.7297980290173683`*^9, 
  3.729798052887404*^9}},ExpressionUUID->"ad866a7d-7b82-4932-9f32-\
38a71895f06a"]
}, Closed]],

Cell[CellGroupData[{

Cell["MLE: The Normal Equations", "Subsection",
 CellChangeTimes->{{3.728251929759521*^9, 
  3.728251940262474*^9}},ExpressionUUID->"89146e39-831c-451a-ae64-\
abde3d317434"],

Cell["\<\
Mechanize the normal equations for comparison purposes; we expect them to \
over-fit.\
\>", "Text",
 CellChangeTimes->{{3.7279232272996387`*^9, 3.727923264174778*^9}, {
  3.727925248541918*^9, 3.7279252612235193`*^9}, {3.728219535976645*^9, 
  3.728219544909062*^9}, {3.728251418408484*^9, 3.728251422388431*^9}, {
  3.729024215377202*^9, 3.729024217223057*^9}, {3.729165197628982*^9, 
  3.729165198403118*^9}, {3.7291823464471197`*^9, 
  3.7291823613313932`*^9}},ExpressionUUID->"21dff09f-f36a-421e-aef5-\
39abef5c2d42"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "mleFit", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mleFit", "[", 
    RowBox[{"\[CapitalMu]_", ",", "trainingSet_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"xs", "=", 
        RowBox[{
        "trainingSet", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], ",", 
       RowBox[{"ys", "=", 
        RowBox[{
        "trainingSet", "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{
       RowBox[{"PseudoInverse", "[", 
        RowBox[{"partialsFn", "[", 
         RowBox[{"\[CapitalMu]", ",", "xs"}], "]"}], "]"}], ".", "ys"}],
      Background->RGBColor[1, 1, 0]]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mleFit", "[", 
  RowBox[{"3", ",", "bts"}], "]"}]}], "Input",
 CellChangeTimes->{{3.727885728192296*^9, 3.727885779639097*^9}, {
   3.727885809907544*^9, 3.727885814458734*^9}, {3.727886129093534*^9, 
   3.7278861410970383`*^9}, {3.72788617438813*^9, 3.7278862220128107`*^9}, {
   3.7278865585658693`*^9, 3.727886599363595*^9}, {3.7279031627619*^9, 
   3.727903227220593*^9}, {3.727913081988744*^9, 3.7279130820838013`*^9}, {
   3.727913123878634*^9, 3.727913123932819*^9}, {3.728090725899406*^9, 
   3.7280907259084253`*^9}, {3.728169613067173*^9, 3.728169613076036*^9}, 
   3.729175629972382*^9, {3.7291764342927237`*^9, 3.7291764366839447`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"4f403321-0dff-4b61-bb6b-e5605b12d11b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.01826344032116041`", ",", "10.119962305259941`", ",", 
   RowBox[{"-", "32.11692454853045`"}], ",", "21.97626600540686`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7278862229627943`*^9, {3.727886559667815*^9, 3.727886599739743*^9}, {
   3.72790316911255*^9, 3.727903214869055*^9}, 3.7279033439958277`*^9, {
   3.727913077175877*^9, 3.727913082662711*^9}, 3.727913124658298*^9, 
   3.727915385897655*^9, 3.727915689226351*^9, 3.727918037352195*^9, 
   3.727918095083848*^9, 3.7279241986227837`*^9, {3.727927707553419*^9, 
   3.727927732702104*^9}, 3.727967810695971*^9, 3.727968733693976*^9, 
   3.7279698086933317`*^9, 3.727969955502687*^9, 3.728044352304865*^9, 
   3.728046448308305*^9, 3.728066470172489*^9, 3.72806812129386*^9, 
   3.728083784080934*^9, 3.728090742292589*^9, 3.72816944582929*^9, 
   3.728169541357428*^9, 3.728169823527856*^9, 3.728169883537332*^9, 
   3.728252956118902*^9, 3.7289462563501463`*^9, 3.729022900336874*^9, {
   3.729119979107937*^9, 3.729119996139695*^9}, 3.729121072645164*^9, 
   3.7291211111233273`*^9, 3.7291723080042467`*^9, 3.7291756909413757`*^9, 
   3.7291758020892*^9, 3.7291834127551937`*^9, {3.7291834480703287`*^9, 
   3.729183460969283*^9}, 3.729255937373231*^9, 3.729552301877532*^9, 
   3.729557876381481*^9, 3.7296298383478403`*^9, 3.729634636327812*^9, 
   3.729642872576435*^9, 3.7296429094051437`*^9, 3.7296439392773237`*^9, 
   3.729647185633141*^9, 3.7296832022663383`*^9, 3.7297781556886253`*^9, 
   3.729779233854649*^9, 3.7297792809555397`*^9, 3.729894700249802*^9, 
   3.729896006308855*^9, 3.729896152909051*^9, 3.7298972958016872`*^9, 
   3.73014035523915*^9, 3.730240271370902*^9, 3.730380091581353*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"aec167c3-a733-4d1b-a11b-3c2a5886e57e"]
}, Open  ]],

Cell["A convenience function:", "Text",
 CellChangeTimes->{{3.729798126892275*^9, 
  3.729798131955408*^9}},ExpressionUUID->"c8e13496-262a-41b9-b53e-\
464d80b37aa9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "symbolicPowers", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"symbolicPowers", "[", 
    RowBox[{"variable_", ",", "order_"}], "]"}], ":=", "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"partialsFn", "[", 
     RowBox[{"order", ",", 
      RowBox[{"{", "variable", "}"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7279153202694693`*^9, 3.727915371067972*^9}, {
  3.7279237255692472`*^9, 3.727923807685313*^9}, {3.729182514215464*^9, 
  3.729182515145398*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"cb926cdf-c463-4b29-91f2-cc9b8c0af79f"],

Cell["\<\
The normal equations as a symbolic polynomial. Notice we can increase the \
order beyond the number of data, creating an underdetermined system. This is \
not the typical case in real-world data processing. Usually the number of \
data exceed the order and the system is overdetermined. The pseudoinverse is \
agnostic to the distinction.\
\>", "Text",
 CellChangeTimes->{{3.728086616407036*^9, 3.728086644421227*^9}, {
  3.728167395574012*^9, 3.7281673997415857`*^9}, {3.728219572416009*^9, 
  3.728219595133831*^9}, {3.729645137300458*^9, 
  3.729645224959401*^9}},ExpressionUUID->"4f2cb8a7-4457-4a84-a9ed-\
c08b68c43d39"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "x", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"symbolicPowers", "[", 
     RowBox[{"x", ",", "\[CapitalMu]"}], "]"}], ".", 
    RowBox[{"mleFit", "[", 
     RowBox[{"\[CapitalMu]", ",", "bts"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalMu]", ",", "3", ",", 
       "\"\<polynomial order \[CapitalMu]\>\""}], "}"}], ",", "0", ",", "16", 
     ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Labeled\>\"", "}"}]}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7280866505961733`*^9, 3.728086772996965*^9}, 
   3.728086803589117*^9, 3.728090725912261*^9, 3.7281696130841227`*^9, 
   3.7291756311754827`*^9, {3.729175826437456*^9, 3.7291758460147743`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"2c30fd53-ff05-4a76-8f5d-4e993e958741"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[CapitalMu]$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[CapitalMu]$$], 3, "polynomial order \[CapitalMu]"},
       0, 16, 1}}, Typeset`size$$ = {386., {1., 16.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[CapitalMu]$2387$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[CapitalMu]$$ = 3}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[CapitalMu]$$, $CellContext`\[CapitalMu]$2387$$, 
         0]}, "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Dot[
        $CellContext`symbolicPowers[$CellContext`x, \
$CellContext`\[CapitalMu]$$], 
        $CellContext`mleFit[$CellContext`\[CapitalMu]$$, $CellContext`bts]], 
      "Specifications" :> {{{$CellContext`\[CapitalMu]$$, 3, 
          "polynomial order \[CapitalMu]"}, 0, 16, 1, 
         Appearance -> {"Labeled"}}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{452., {60., 67.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.728086773562842*^9, 3.728086804275236*^9, 3.728090742426281*^9, 
   3.7281694459480057`*^9, 3.728169541460916*^9, 3.728169823628757*^9, 
   3.728169883652279*^9, 3.728225863858274*^9, 3.728252956249748*^9, 
   3.728946256894178*^9, 3.729022900437813*^9, {3.729119979237938*^9, 
   3.7291199962606564`*^9}, 3.729121072777959*^9, 3.729121111249694*^9, 
   3.7291723081374826`*^9, 3.729175691045731*^9, {3.729175810410253*^9, 
   3.729175846848763*^9}, 3.729182527081111*^9, 3.729183412855047*^9, {
   3.7291834481917963`*^9, 3.729183461081573*^9}, 3.729255937827094*^9, 
   3.729552301962193*^9, 3.729557876456039*^9, 3.729629838836141*^9, 
   3.7296346365430202`*^9, 3.729642872651252*^9, 3.729642909488571*^9, 
   3.7296439393563423`*^9, 3.729647185741205*^9, 3.729683202341844*^9, 
   3.729778155770583*^9, 3.7297792339418173`*^9, 3.729779281028274*^9, 
   3.7298947003399973`*^9, 3.729896006416829*^9, 3.7298961529887333`*^9, 
   3.729897295878295*^9, 3.730140355324717*^9, 3.7302402720507517`*^9, 
   3.730380091653686*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"fdc5a406-afba-4ec4-95b6-d7f7f4961f5a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["RLS: Recurrent Least Squares", "Subsection",
 CellChangeTimes->{{3.72825197766994*^9, 
  3.72825198556595*^9}},ExpressionUUID->"5d759a27-e118-43f8-b084-\
2f8ccbc12929"],

Cell[TextData[{
 "RLS is regularized by its a-priori estimate of the unknown parameters and \
its a-priori information matrix. Use the slider below to see that once the \
minimum info becomes too large, the \[CapitalLambda] matrix becomes \
ill-conditioned: pink warning message appear from the Wolfram kernel, and the \
solution is numerically suspect. In the rest of this paper, we eliminate \
these error message by applying Wolfram\[CloseCurlyQuote]s ",
 Cell[BoxData[
  FormBox["Quiet", TraditionalForm]], "Code",ExpressionUUID->
  "9b505f9f-26c0-4b35-9fff-cb61a0fb8312"],
 " because we notice, numerically, that ill-conditioning of the information \
matrix does not seem to be harmful."
}], "Text",
 CellChangeTimes->{{3.72792327800198*^9, 3.7279233078789587`*^9}, {
  3.7279713983804617`*^9, 3.72797140314161*^9}, {3.7280360936971283`*^9, 
  3.728036119472001*^9}, {3.728036163659585*^9, 3.728036240971705*^9}, {
  3.728219601486958*^9, 3.728219652487793*^9}, {3.728252003629099*^9, 
  3.7282520048359327`*^9}, {3.7291654907947273`*^9, 3.7291655087082767`*^9}, {
  3.729174198506338*^9, 3.729174199241322*^9}, {3.729182539373966*^9, 
  3.729182552706852*^9}, {3.729645241053973*^9, 3.72964531696039*^9}, {
  3.729798163505123*^9, 
  3.729798175666603*^9}},ExpressionUUID->"953a9bfd-0f1e-4b34-806a-\
12bc491d013a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "rlsFit", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"rlsFit", "[", "\[Sigma]2\[CapitalLambda]_", "]"}], "[", 
     RowBox[{"\[CapitalMu]_", ",", "trainingSet_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xs", "=", 
         RowBox[{
         "trainingSet", "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{"ys", "=", 
         RowBox[{
         "trainingSet", "\[LeftDoubleBracket]", "2", 
          "\[RightDoubleBracket]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Xi]0", "=", 
           RowBox[{"List", "/@", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0", ",", 
              RowBox[{"\[CapitalMu]", "+", "1"}]}], "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\[CapitalLambda]0", "=", 
           RowBox[{"\[Sigma]2\[CapitalLambda]", "*", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"\[CapitalMu]", "+", "1"}], "]"}]}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Fold", "[", 
         RowBox[{"update", ",", 
          RowBox[{"{", 
           RowBox[{"\[Xi]0", ",", "\[CapitalLambda]0"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"List", "/@", "ys"}], ",", 
             RowBox[{"List", "/@", 
              RowBox[{"partialsFn", "[", 
               RowBox[{"\[CapitalMu]", ",", "xs"}], "]"}]}]}], "}"}], 
           "\[Transpose]"}]}], "]"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"rlsFit", "[", 
      SuperscriptBox["10", 
       RowBox[{"-", "log\[Sigma]2\[CapitalLambda]"}]], "]"}], "[", 
     RowBox[{"3", ",", "bts"}], "]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"log\[Sigma]2\[CapitalLambda]", ",", "9.034"}], "}"}], ",", "0",
      ",", "16", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.727883299044437*^9, 3.727883408526169*^9}, {
   3.727883570679338*^9, 3.727883753730864*^9}, {3.727883800858717*^9, 
   3.727883838115073*^9}, {3.727883894473887*^9, 3.727884018340303*^9}, {
   3.72788406916578*^9, 3.727884157272581*^9}, {3.727884225392531*^9, 
   3.7278842277505903`*^9}, {3.7278843168329363`*^9, 
   3.7278844893030443`*^9}, {3.72788451944672*^9, 3.727884559637722*^9}, {
   3.727884601998887*^9, 3.727884641880664*^9}, {3.727884702205894*^9, 
   3.727884709112802*^9}, {3.727884840379463*^9, 3.727884840498255*^9}, {
   3.7279032520135508`*^9, 3.727903302618636*^9}, 3.7279033915207367`*^9, {
   3.727913089794886*^9, 3.727913129180463*^9}, {3.727923317022047*^9, 
   3.727923549746903*^9}, {3.727923650995542*^9, 3.727923655663189*^9}, 
   3.727923702873125*^9, {3.727923927853791*^9, 3.727923934334038*^9}, {
   3.727925310895234*^9, 3.727925333557376*^9}, {3.728036060877223*^9, 
   3.728036070969619*^9}, {3.7280362269856453`*^9, 3.72803623654352*^9}, {
   3.7280907259214077`*^9, 3.7280907259309683`*^9}, {3.728225889419126*^9, 
   3.728225889490087*^9}, {3.729173873480887*^9, 3.729173873491919*^9}, {
   3.729173952692565*^9, 3.729174033832899*^9}, {3.729174227557437*^9, 
   3.729174255702014*^9}, 3.729175632402956*^9, {3.729647132778007*^9, 
   3.729647148168085*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"4668cdf5-7903-4f95-83fa-ae16e0957cb5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`log\[Sigma]2\[CapitalLambda]$$ = 9.034, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`log\[Sigma]2\[CapitalLambda]$$], 9.034}, 0, 16}}, 
    Typeset`size$$ = {432., {4., 11.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`log\[Sigma]2\[CapitalLambda]$2420$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`log\[Sigma]2\[CapitalLambda]$$ = 9.034}, 
      "ControllerVariables" :> {
        Hold[$CellContext`log\[Sigma]2\[CapitalLambda]$$, $CellContext`log\
\[Sigma]2\[CapitalLambda]$2420$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Part[
        $CellContext`rlsFit[
        10^(-$CellContext`log\[Sigma]2\[CapitalLambda]$$)][
        3, $CellContext`bts], 1], 
      "Specifications" :> {{{$CellContext`log\[Sigma]2\[CapitalLambda]$$, 
          9.034}, 0, 16, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{487., {60., 67.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.727913103888098*^9, 3.7279131297094307`*^9}, 
   3.72791538595157*^9, 3.727915690618195*^9, 3.727918037406971*^9, 
   3.7279180951339293`*^9, 3.727923485679799*^9, {3.7279235212598963`*^9, 
   3.727923539397266*^9}, 3.727923656903368*^9, 3.727923703600333*^9, 
   3.7279240791268167`*^9, 3.7279241986997967`*^9, 3.727925360788505*^9, {
   3.727927707618471*^9, 3.7279277327546997`*^9}, 3.727967810771263*^9, 
   3.727968733807341*^9, 3.727969808755946*^9, 3.727969955556759*^9, {
   3.728036061824555*^9, 3.728036072918947*^9}, {3.7280362295589123`*^9, 
   3.7280362371095047`*^9}, 3.72804435235367*^9, 3.728046448406433*^9, 
   3.728066470986565*^9, 3.728068121352648*^9, 3.728083784580184*^9, 
   3.728090742542427*^9, 3.728169446059235*^9, 3.728169541523823*^9, 
   3.728169823744402*^9, 3.728169883754513*^9, {3.728225871308848*^9, 
   3.728225890298745*^9}, 3.728252956368375*^9, 3.728946256965219*^9, 
   3.7290229005394793`*^9, {3.729119979308299*^9, 3.729119996363627*^9}, 
   3.729121072861215*^9, 3.729121111350686*^9, 3.7291723082385883`*^9, 
   3.72917389958121*^9, {3.729174004154214*^9, 3.729174028000448*^9}, 
   3.729175691158844*^9, 3.729175854610073*^9, 3.729183412914186*^9, {
   3.729183448249649*^9, 3.729183461158495*^9}, 3.729255937922879*^9, 
   3.72955230200729*^9, 3.729557876515918*^9, 3.729629838903739*^9, 
   3.7296346366745358`*^9, 3.7296428727312737`*^9, 3.72964290955186*^9, 
   3.7296439394770603`*^9, 3.729646853151237*^9, 3.729647185826949*^9, 
   3.729683202415702*^9, 3.729778155827753*^9, 3.729779234003327*^9, 
   3.729779281093878*^9, 3.72989470041908*^9, 3.7298960064731913`*^9, 
   3.7298961530898743`*^9, 3.729897295954137*^9, 3.730140355404768*^9, 
   3.73024027222139*^9, 3.730380091717915*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"461edd9f-b107-45bc-8ee4-0175df10c3e9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["KAL: Foldable Kalman Filter", "Subsection",
 CellChangeTimes->{{3.728252019102867*^9, 3.728252024734199*^9}, {
  3.7290943120705023`*^9, 
  3.7290943137983313`*^9}},ExpressionUUID->"1a256cc5-717d-4f70-98d5-\
1eccc5dcef4a"],

Cell[TextData[{
 "The foldable Kalman filter (KAL) follows below. This version has only the \
",
 StyleBox["update",
  FontSlant->"Italic"],
 " phase of a typical Kalman filter because the parameters-to-estimate are \
constant and there is no ",
 StyleBox["predict",
  FontSlant->"Italic"],
 " phase.\n\nNote the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "\[CapitalZeta]"], TraditionalForm]],ExpressionUUID->
  "944fe3ef-92a4-4716-82e3-d3bdcef1b832"],
 " parameter, the first in the definition of ",
 Cell[BoxData[
  FormBox["kalmanUpdate", TraditionalForm]], "Code",ExpressionUUID->
  "217ff7f6-5c5e-4f2d-b3fe-0e8e9924016d"],
 ". This is the ",
 StyleBox["covariance matrix of the observation noise",
  FontSlant->"Italic"],
 ". It is a constant throughout the folding run of the filter. That\
\[CloseCurlyQuote]s why it\[CloseCurlyQuote]s lambda-lifted into its own \
function slot; ",
 Cell[BoxData[
  FormBox["kalmanUpdate", TraditionalForm]], "Code",ExpressionUUID->
  "a6d93a7a-fed8-40bf-98a2-004f1bf9b537"],
 ", called with some concrete value of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "\[CapitalZeta]"], TraditionalForm]],ExpressionUUID->
  "87bdc418-bc3f-44b6-8a9a-fbee89c68b91"],
 ", yields a function that can be folded over an a-priori estimate ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "0"], TraditionalForm]],ExpressionUUID->
  "2125d705-4d59-4364-b34e-6de72dbb8e08"],
 " and covariance ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "0"], TraditionalForm]],ExpressionUUID->
  "cae5d4c1-22e1-4e7d-a1db-7c46cb34fc07"],
 " and a sequence of observation-and-partial-covector pairs ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"\[Zeta]", ",", "a"}], "}"}], TraditionalForm]],ExpressionUUID->
  "49799594-1382-4aab-87dd-b9fc92b25aa6"],
 "."
}], "Text",
 CellChangeTimes->{{3.727925392992813*^9, 3.727925440455097*^9}, {
  3.727968003304467*^9, 3.727968095322001*^9}, {3.727971415917358*^9, 
  3.727971445401681*^9}, {3.728167467247233*^9, 3.7281676104536*^9}, {
  3.7282196608402767`*^9, 3.728219713545024*^9}, {3.7282197580747232`*^9, 
  3.728219820377639*^9}, {3.728225898772212*^9, 3.7282259019302683`*^9}, {
  3.7282520355408773`*^9, 3.7282520676585073`*^9}, {3.728252107648376*^9, 
  3.7282521980434017`*^9}, {3.729030059987007*^9, 3.729030074977326*^9}, {
  3.729030986864485*^9, 3.7290310566698503`*^9}, {3.729092807796928*^9, 
  3.729092853441671*^9}, {3.729165528060895*^9, 3.729165730475572*^9}, {
  3.729174335777738*^9, 3.729174413265232*^9}, {3.7291825734673*^9, 
  3.729182599308608*^9}, {3.729638303220274*^9, 3.729638354229904*^9}, {
  3.729798208714859*^9, 
  3.729798263491578*^9}},ExpressionUUID->"ed0c0833-92da-47c1-8f6d-\
d072ddce7e84"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"kalmanUpdate", ",", "kalFit"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["kalmanUpdate",
       Background->RGBColor[1, 1, 0]], "[", "P\[CapitalZeta]_", "]"}], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Xi]_", ",", "P_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Zeta]_", ",", "a_"}], "}"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"D", ",", "KT", ",", "K", ",", "L"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"D", "=", 
        RowBox[{"P\[CapitalZeta]", "+", 
         RowBox[{"a", ".", "P", ".", 
          RowBox[{"a", "\[Transpose]"}]}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"KT", "=", 
        RowBox[{"LinearSolve", "[", 
         RowBox[{"D", ",", 
          RowBox[{"a", ".", "P"}]}], "]"}]}], ";", 
       RowBox[{"K", "=", 
        RowBox[{"KT", "\[Transpose]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L", "=", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", 
          RowBox[{"Length", "[", "P", "]"}], "]"}], "-", 
         RowBox[{"K", ".", "a"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Xi]", "+", 
          RowBox[{"K", ".", 
           RowBox[{"(", 
            RowBox[{"\[Zeta]", "-", 
             RowBox[{"a", ".", "\[Xi]"}]}], ")"}]}]}], ",", 
         RowBox[{"L", ".", "P"}]}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"kalFit", "[", 
     RowBox[{"\[Sigma]\[Zeta]2_", ",", "\[Sigma]\[Xi]2_"}], "]"}], "[", 
    RowBox[{"order_", ",", "trainingSet_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"xs", "=", 
        RowBox[{
        "trainingSet", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], ",", 
       RowBox[{"ys", "=", 
        RowBox[{
        "trainingSet", "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Xi]0", "=", 
          RowBox[{"List", "/@", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"order", "+", "1"}]}], "]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"P0", "=", 
          RowBox[{"\[Sigma]\[Xi]2", "*", 
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"order", "+", "1"}], "]"}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Fold", "[", 
        RowBox[{
         RowBox[{"kalmanUpdate", "[", 
          RowBox[{"\[Sigma]\[Zeta]2", "*", 
           RowBox[{"IdentityMatrix", "[", "1", "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"\[Xi]0", ",", "P0"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"List", "/@", "ys"}], ",", 
            RowBox[{"List", "/@", 
             RowBox[{"partialsFn", "[", 
              RowBox[{"order", ",", "xs"}], "]"}]}]}], "}"}], 
          "\[Transpose]"}]}], "]"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.727913455235773*^9, 3.727913522283977*^9}, 
   3.727913696290469*^9, {3.727913736480159*^9, 3.727913844376683*^9}, {
   3.727917392534089*^9, 3.727917436971686*^9}, {3.727917505035927*^9, 
   3.727917528745805*^9}, {3.727917565263034*^9, 3.727917689094305*^9}, {
   3.727917745897264*^9, 3.7279177578567343`*^9}, {3.727917794603846*^9, 
   3.727917832787274*^9}, 3.727917880971725*^9, {3.727917936171432*^9, 
   3.727918023146969*^9}, {3.727918153331463*^9, 3.727918275269082*^9}, {
   3.727918376669937*^9, 3.727918414049831*^9}, {3.727918508981811*^9, 
   3.727918529673747*^9}, {3.727918590013206*^9, 3.727918649485745*^9}, {
   3.727918701604838*^9, 3.727918748563583*^9}, {3.727919051486678*^9, 
   3.727919074926166*^9}, {3.7279191082942677`*^9, 3.7279191590963287`*^9}, {
   3.7279192864475107`*^9, 3.727919323121303*^9}, {3.727919354826254*^9, 
   3.727919508497794*^9}, {3.727919541340006*^9, 3.727919683877797*^9}, {
   3.727920118873128*^9, 3.7279202093625507`*^9}, {3.727921237681443*^9, 
   3.727921317118623*^9}, {3.7279213549874077`*^9, 3.727921369577837*^9}, {
   3.727921727194334*^9, 3.727921729479971*^9}, {3.727921764122665*^9, 
   3.727921833477203*^9}, {3.72792411169958*^9, 3.727924167792699*^9}, {
   3.72792422895082*^9, 3.727924231141032*^9}, {3.72792438065587*^9, 
   3.7279243990664377`*^9}, {3.727925449102767*^9, 3.7279255631525297`*^9}, {
   3.72792560570716*^9, 3.7279256061694813`*^9}, {3.7279681913170443`*^9, 
   3.727968211031343*^9}, 3.728167450131751*^9, {3.72816963059844*^9, 
   3.728169630606372*^9}, {3.728950036924389*^9, 3.728950066472802*^9}, {
   3.729165737473629*^9, 3.729165758394801*^9}, {3.729174264764344*^9, 
   3.729174321096059*^9}, {3.729638286474793*^9, 3.7296382904326887`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"3117ef4d-d3f2-49c6-a0e0-edcb55974bac"]
}, Closed]],

Cell[CellGroupData[{

Cell["See All Three", "Subsection",
 CellChangeTimes->{{3.729094292024653*^9, 
  3.729094294711062*^9}},ExpressionUUID->"79c27655-ef70-49e0-840d-\
4cd0f992f88f"],

Cell[TextData[{
 "The following interactive demonstration shows ",
 Cell[BoxData[
  FormBox["mleFit", TraditionalForm]], "Code",ExpressionUUID->
  "4cb84eca-55a6-402e-87b6-60cd967b9f5b"],
 " (normal equations), ",
 Cell[BoxData[
  FormBox["rlsFit", TraditionalForm]], "Code",ExpressionUUID->
  "32d5863c-f1e1-40c4-9b5d-481484f253d0"],
 " (recurrent least squares), and ",
 Cell[BoxData[
  FormBox["kalFit", TraditionalForm]], "Code",ExpressionUUID->
  "1a3bf1c2-c6f4-4897-8186-d26fb9573d41"],
 " (Kalman folding) on Bishop\[CloseCurlyQuote]s training set.\n\nWhen the \
a-priori information matrix in RLS is ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"-", "6"}]], TraditionalForm]],ExpressionUUID->
  "f6fa54ad-2bf3-49fc-8f51-d6ac554275e8"],
 ", and when the a-priori covariance of the a-priori estimate in KAL is ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "6"], TraditionalForm]],ExpressionUUID->
  "b5f6a42b-8214-43eb-b532-b23cb54f2a71"],
 ", both RLS and KAL produce regularized fits. In contrast, the MLE over-fits \
a ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["9", "th"], TraditionalForm]],ExpressionUUID->
  "df6e2ce4-ee21-4852-9304-c5350f92ab2f"],
 "-order polynomial by interpolating (going through) every data point because \
a ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["9", "th"], TraditionalForm]],ExpressionUUID->
  "6ea035c7-661b-4906-ba49-314a63a809b6"],
 "-order polynomial fits the ten data points exactly: the normal equations \
are neither overdetermined nor underdetermined at order nine, but \
accidentally constitute an exactly solvable linear system.\n\nIncreasing ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "log\[CapitalLambda]"}], TraditionalForm]], "Code",
  ExpressionUUID->"61902d13-4626-4d5f-8830-5b0bd423956c"],
 " ",
 StyleBox["decreases",
  FontSlant->"Italic"],
 " the (magnitude of the) a-priori information matrix in RLS, meaning that we \
have less Bayesian belief in the a-priori estimate of the unknown parameters. \
Increasing ",
 Cell[BoxData[
  FormBox["log\[Sigma]\[Xi]2", TraditionalForm]], "Code",ExpressionUUID->
  "c17d11ea-e11e-4a64-bf08-fb5cc88187e6"],
 " ",
 StyleBox["increases",
  FontSlant->"Italic"],
 " the a-priori covariance of the estimate in KAL and similarly decreases \
belief in the a-priori estimate. They eventually both over-fit the data \
completely and align with MLE. Later, we show that MAP can be similarly made \
to over-fit. Run the polynomial order up to nine, then ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "log\[CapitalLambda]"}], TraditionalForm]], "Code",
  ExpressionUUID->"a0f39e4c-2db3-415b-a534-44240dd6e6ec"],
 " and ",
 Cell[BoxData[
  FormBox["log\[Sigma]\[Xi]2", TraditionalForm]], "Code",ExpressionUUID->
  "2b542e52-8384-4059-9874-7f53c5d64849"],
 " all the way to the right, to their maximum values. "
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAWIQfaCLT7/k2GvHKzx3bEH0PolaVxBt5iYdDKIDOt0i
QLTdyT4wbSF2ZVE7kK4JkFwKojU5zN52AGnhJ8veg+jfpW1/QbSWyVvRTiBd
yTJPBkTf2tCjDaJ3tOy1A9GFa5lCQbSdaHw6iL4zUToLRHNflq0G0WmLzrWC
aGYVSfsukPsaTcH0q4NfJoDollU3F4Douicbzx4E0ge2dt4C0dPyd545AqRP
74XQq9knBr4G0gnbZdJAdN3uS7eYj792nByi/wxEP5vGuUoYSCtPzF4NomXs
pfdePAG058a9syB63amdhVeBdNM7CK0ib7AORN/0g9DXleO/gmgB/g4wrXC2
7cw1IJ39EUKr+rL8uAmk5ZQO/wLRKmKrY+8B6VNaG+NAtNvV2U93n3zt+HXS
p08g+t2N5T9AtM0tCG3hxDiF7dRrx6p6bTDNG7J9Fohe5WW3CEQDAASlAHc=

  "],ExpressionUUID->"8010689f-309c-4f3e-bf23-5b34674387a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", 
     RowBox[{"(*", " ", 
      RowBox[{"gensym", ":", " ", 
       RowBox[{"fresh", " ", "variable", " ", "name"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"terms", "=", 
          RowBox[{"symbolicPowers", "[", 
           RowBox[{"x", ",", "\[CapitalMu]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"cs", "=", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "\[CapitalMu]", "]"}], "/@", 
           RowBox[{"List", "/@", 
            RowBox[{
            "bts", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"recurrent", "=", 
            RowBox[{"Quiet", "@", 
             RowBox[{
              RowBox[{"rlsFit", "[", 
               SuperscriptBox["10", 
                RowBox[{"-", "log\[CapitalLambda]0"}]], "]"}], "[", 
              RowBox[{"\[CapitalMu]", ",", "bts"}], "]"}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"normal", "=", 
            RowBox[{"mleFit", "[", 
             RowBox[{"\[CapitalMu]", ",", "bts"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"kalman", "=", 
            RowBox[{
             RowBox[{"kalFit", "[", 
              RowBox[{
               SuperscriptBox["bishopFakeSigma", "2"], ",", 
               SuperscriptBox["10", "log\[Sigma]\[Xi]2"]}], "]"}], "[", 
             RowBox[{"\[CapitalMu]", ",", "bts"}], "]"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"rlsFn", "=", 
              RowBox[{
               RowBox[{"{", "terms", "}"}], ".", 
               RowBox[{
               "recurrent", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"mleFn", "=", 
              RowBox[{"terms", ".", "normal"}]}], ",", "\[IndentingNewLine]", 
             
             RowBox[{"kalFn", "=", 
              RowBox[{
               RowBox[{"{", "terms", "}"}], ".", 
               RowBox[{
               "kalman", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"lp", "=", 
               RowBox[{"ListPlot", "[", 
                RowBox[{
                 RowBox[{"bts", "\[Transpose]"}], ",", "\[IndentingNewLine]", 
                 
                 RowBox[{"PlotMarkers", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Graphics", "@", 
                    RowBox[{"{", 
                    RowBox[{"Blue", ",", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}], 
                    "}"}]}], ",", ".05"}], "}"}]}]}], "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"showlist", "=", 
                 RowBox[{"{", 
                  RowBox[{"lp", ",", 
                   RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{"2.", "\[Pi]", " ", "x"}], "]"}],
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0.", ",", "1."}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Thick", ",", 
                    StyleBox["Green",
                    Background->RGBColor[1, 1, 0]]}], "}"}]}]}], "]"}]}], 
                  "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{"rlsQ", ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"showlist", ",", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox["rlsFn",
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    StyleBox["Purple",
                    Background->RGBColor[1, 1, 0]], "}"}]}]}], "]"}]}], 
                   "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{"mleQ", ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"showlist", ",", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox["mleFn",
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    StyleBox["Orange",
                    Background->RGBColor[1, 1, 0]], "}"}]}]}], "]"}]}], 
                   "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{"kalQ", ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"showlist", ",", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox["kalFn",
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    StyleBox["Cyan",
                    Background->RGBColor[1, 1, 0]], "}"}]}]}], "]"}]}], 
                   "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Quiet", "@", 
                 RowBox[{"Show", "[", 
                  RowBox[{"showlist", ",", 
                   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                   RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<x\>\"", ",", "\"\<t\>\""}], "}"}]}]}], 
                  "]"}]}]}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Button", "[", 
            RowBox[{"\"\<RESET\>\"", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalMu]", "=", "9"}], ";", 
                RowBox[{"log\[CapitalLambda]0", "=", "3"}], ";", 
                RowBox[{"log\[Sigma]\[Xi]2", "=", "3"}]}], ")"}], "&"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"rlsQ", ",", "True", ",", "\"\<RLS\>\""}], "}"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"kalQ", ",", "True", ",", "\"\<KAL\>\""}], "}"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"mleQ", ",", "True", ",", "\"\<MLE\>\""}], "}"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}]}], "}"}],
          "}"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\[CapitalMu]", ",", "9", ",", "\"\<polynomial order\>\""}], "}"}],
           ",", "0", ",", "16", ",", "1", ",", 
          RowBox[{"Appearance", "\[Rule]", 
           RowBox[{"{", "\"\<Labeled\>\"", "}"}]}]}], "}"}], "]"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "log\[CapitalLambda]0", ",", "3", ",", 
            "\"\<-log a-priori info (RLS)\>\""}], "}"}], ",", "0", ",", "16", 
          ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
        "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "log\[Sigma]\[Xi]2", ",", "3", ",", 
            "\"\<log a-priori cov (KAL)\>\""}], "}"}], ",", "0", ",", "16", 
          ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
        "]"}], "}"}]}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727884681931381*^9, 3.7278848244947367`*^9}, 
   3.727884861217602*^9, {3.727884975910451*^9, 3.7278849940673532`*^9}, {
   3.727885103521431*^9, 3.727885154698123*^9}, {3.72788520225443*^9, 
   3.727885279820177*^9}, {3.727885496115718*^9, 3.727885517688189*^9}, {
   3.72788559395383*^9, 3.727885598972475*^9}, {3.7278856296542664`*^9, 
   3.727885630876935*^9}, {3.727885695972756*^9, 3.727885696864628*^9}, {
   3.727886633660364*^9, 3.72788671287046*^9}, {3.727886975364171*^9, 
   3.727886975439041*^9}, {3.727903476653379*^9, 3.7279034819231358`*^9}, {
   3.727903531862627*^9, 3.727903539245574*^9}, 3.727913149489944*^9, {
   3.727915429732944*^9, 3.7279154437948627`*^9}, {3.727915750998211*^9, 
   3.7279158447033873`*^9}, {3.7279213832695303`*^9, 3.72792149154887*^9}, {
   3.727921523149373*^9, 3.72792161270367*^9}, {3.72792165300301*^9, 
   3.727921654632832*^9}, {3.727921753282296*^9, 3.727921753360197*^9}, {
   3.727924008558401*^9, 3.727924045018003*^9}, {3.727924293814445*^9, 
   3.727924370827516*^9}, 3.727965590613636*^9, {3.7279686551525917`*^9, 
   3.727968670349081*^9}, {3.7279689406605043`*^9, 3.727969019631563*^9}, {
   3.727970883056108*^9, 3.727970945128386*^9}, {3.727971005813472*^9, 
   3.727971023734253*^9}, {3.727990640753121*^9, 3.727990674786282*^9}, {
   3.727990711779483*^9, 3.727990808626033*^9}, {3.727991307012423*^9, 
   3.727991307022031*^9}, {3.7279932412769613`*^9, 3.7279932949280367`*^9}, {
   3.7279933910397243`*^9, 3.727993398358789*^9}, {3.727993778490755*^9, 
   3.72799379332897*^9}, {3.727993826040863*^9, 3.7279938751552763`*^9}, {
   3.727993956673335*^9, 3.727993958184173*^9}, 3.727994128012043*^9, {
   3.7280354067714148`*^9, 3.7280354258611927`*^9}, {3.728035634299762*^9, 
   3.728035732029833*^9}, {3.72803585641748*^9, 3.728035906176405*^9}, {
   3.728038924314391*^9, 3.728039041653799*^9}, {3.728039077026232*^9, 
   3.72803913265169*^9}, {3.728039194847865*^9, 3.728039320044661*^9}, {
   3.728044256958378*^9, 3.728044343151896*^9}, {3.728044393583234*^9, 
   3.728044466540698*^9}, 3.7280447095836163`*^9, {3.728044856722988*^9, 
   3.728044959527645*^9}, {3.728044995179022*^9, 3.728044998104682*^9}, {
   3.728045028753289*^9, 3.728045063548128*^9}, {3.728045464570526*^9, 
   3.728045476328084*^9}, {3.728045812340419*^9, 3.728045836978776*^9}, {
   3.7280461335391397`*^9, 3.728046355530389*^9}, {3.728046392282709*^9, 
   3.728046397281275*^9}, {3.728046429888109*^9, 3.728046434285967*^9}, {
   3.728046509047914*^9, 3.728046577986915*^9}, {3.728048625582951*^9, 
   3.728048658147644*^9}, {3.728048704639155*^9, 3.7280487209829884`*^9}, {
   3.728048763333255*^9, 3.728048783520523*^9}, 3.728048849900649*^9, {
   3.728048881350296*^9, 3.7280488887365723`*^9}, {3.7280489358794527`*^9, 
   3.728048947834031*^9}, {3.7280492952517767`*^9, 3.728049427179392*^9}, {
   3.728049506853256*^9, 3.7280496162697783`*^9}, {3.728049702949929*^9, 
   3.728049708359687*^9}, {3.7280497561537037`*^9, 3.728049819625853*^9}, {
   3.728049930158724*^9, 3.728049930640306*^9}, {3.728089854705469*^9, 
   3.728089855621914*^9}, {3.728090725808407*^9, 3.7280907258189697`*^9}, {
   3.728169349695664*^9, 3.728169349720875*^9}, {3.7281694009815397`*^9, 
   3.7281694178910418`*^9}, {3.728169511786654*^9, 3.7281695237214537`*^9}, {
   3.728169612536371*^9, 3.728169630625689*^9}, 3.72825398263583*^9, {
   3.729093231337966*^9, 3.729093231816064*^9}, {3.729119276943676*^9, 
   3.729119308121522*^9}, {3.7291200359185753`*^9, 3.729120071022612*^9}, {
   3.729120620963278*^9, 3.729120653409905*^9}, {3.729120691319798*^9, 
   3.729120728301819*^9}, {3.729173389813801*^9, 3.729173389829308*^9}, {
   3.729173873512885*^9, 3.729173873529933*^9}, {3.7291744772483892`*^9, 
   3.7291744951446943`*^9}, {3.7291745287743883`*^9, 3.729174572901572*^9}, {
   3.729175490403535*^9, 3.7291755161637173`*^9}, {3.729175633605082*^9, 
   3.729175638831461*^9}, {3.729183394512477*^9, 3.729183394521019*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"3870cf8d-74e6-419c-91a8-4f7425e2e6cf"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`kalQ$$ = 
    True, $CellContext`log\[CapitalLambda]0$$ = 
    3, $CellContext`log\[Sigma]\[Xi]2$$ = 3, $CellContext`mleQ$$ = 
    True, $CellContext`rlsQ$$ = True, $CellContext`\[CapitalMu]$$ = 9, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`rlsQ$$], True, "RLS"}, {True, False}}, {{
       Hold[$CellContext`kalQ$$], True, "KAL"}, {True, False}}, {{
       Hold[$CellContext`mleQ$$], True, "MLE"}, {True, False}}, {{
       Hold[$CellContext`\[CapitalMu]$$], 9, "polynomial order"}, 0, 16, 1}, {{
       Hold[$CellContext`log\[CapitalLambda]0$$], 3, 
       "-log a-priori info (RLS)"}, 0, 16}, {{
       Hold[$CellContext`log\[Sigma]\[Xi]2$$], 3, "log a-priori cov (KAL)"}, 
      0, 16}, {
      Hold[
       Grid[{{
          Grid[{{
             Button[
             "RESET", ($CellContext`\[CapitalMu]$$ = 
               9; $CellContext`log\[CapitalLambda]0$$ = 
               3; $CellContext`log\[Sigma]\[Xi]2$$ = 3)& ], 
             Manipulate`Place[1], 
             Manipulate`Place[2], 
             Manipulate`Place[3]}}]}, {
          Manipulate`Place[4]}, {
          Manipulate`Place[5]}, {
          Manipulate`Place[6]}}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {450., {141., 147.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`rlsQ$2437$$ = False, $CellContext`kalQ$2438$$ = 
    False, $CellContext`mleQ$2439$$ = 
    False, $CellContext`\[CapitalMu]$2440$$ = 
    0, $CellContext`log\[CapitalLambda]0$2441$$ = 
    0, $CellContext`log\[Sigma]\[Xi]2$2442$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`kalQ$$ = 
        True, $CellContext`log\[CapitalLambda]0$$ = 
        3, $CellContext`log\[Sigma]\[Xi]2$$ = 3, $CellContext`mleQ$$ = 
        True, $CellContext`rlsQ$$ = True, $CellContext`\[CapitalMu]$$ = 9}, 
      "ControllerVariables" :> {
        Hold[$CellContext`rlsQ$$, $CellContext`rlsQ$2437$$, False], 
        Hold[$CellContext`kalQ$$, $CellContext`kalQ$2438$$, False], 
        Hold[$CellContext`mleQ$$, $CellContext`mleQ$2439$$, False], 
        Hold[$CellContext`\[CapitalMu]$$, $CellContext`\[CapitalMu]$2440$$, 
         0], 
        Hold[$CellContext`log\[CapitalLambda]0$$, $CellContext`log\
\[CapitalLambda]0$2441$$, 0], 
        Hold[$CellContext`log\[Sigma]\[Xi]2$$, \
$CellContext`log\[Sigma]\[Xi]2$2442$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Module[{$CellContext`x$}, 
        With[{$CellContext`terms$ = \
$CellContext`symbolicPowers[$CellContext`x$, $CellContext`\[CapitalMu]$$], \
$CellContext`cs$ = Map[
            $CellContext`\[Phi][$CellContext`\[CapitalMu]$$], 
            Map[List, 
             Part[$CellContext`bts, 1]]]}, 
         With[{$CellContext`recurrent$ = Quiet[
             $CellContext`rlsFit[
             10^(-$CellContext`log\[CapitalLambda]0$$)][$CellContext`\
\[CapitalMu]$$, $CellContext`bts]], $CellContext`normal$ = \
$CellContext`mleFit[$CellContext`\[CapitalMu]$$, $CellContext`bts], \
$CellContext`kalman$ = $CellContext`kalFit[$CellContext`bishopFakeSigma^2, 
             10^$CellContext`log\[Sigma]\[Xi]2$$][$CellContext`\[CapitalMu]$$,\
 $CellContext`bts]}, 
          With[{$CellContext`rlsFn$ = Dot[{$CellContext`terms$}, 
              Part[$CellContext`recurrent$, 1]], $CellContext`mleFn$ = 
            Dot[$CellContext`terms$, $CellContext`normal$], \
$CellContext`kalFn$ = Dot[{$CellContext`terms$}, 
              Part[$CellContext`kalman$, 1]]}, 
           With[{$CellContext`lp$ = ListPlot[
               Transpose[$CellContext`bts], PlotMarkers -> {
                 Graphics[{Blue, 
                   Circle[{0, 0}, 1]}], 0.05}]}, 
            Module[{$CellContext`showlist$ = {$CellContext`lp$, 
                Plot[
                 Sin[2. Pi $CellContext`x$], {$CellContext`x$, 0., 1.}, 
                 PlotStyle -> {Thick, Green}]}}, If[$CellContext`rlsQ$$, 
               AppendTo[$CellContext`showlist$, 
                
                Plot[$CellContext`rlsFn$, {$CellContext`x$, 0, 1}, 
                 PlotStyle -> {Purple}]]]; If[$CellContext`mleQ$$, 
               AppendTo[$CellContext`showlist$, 
                
                Plot[$CellContext`mleFn$, {$CellContext`x$, 0, 1}, 
                 PlotStyle -> {Orange}]]]; If[$CellContext`kalQ$$, 
               AppendTo[$CellContext`showlist$, 
                
                Plot[$CellContext`kalFn$, {$CellContext`x$, 0, 1}, 
                 PlotStyle -> {Cyan}]]]; Quiet[
               
               Show[$CellContext`showlist$, Frame -> True, 
                FrameLabel -> {"x", "t"}]]]]]]]], 
      "Specifications" :> {{{$CellContext`rlsQ$$, True, "RLS"}, {True, False},
          ControlPlacement -> 1}, {{$CellContext`kalQ$$, True, "KAL"}, {
         True, False}, ControlPlacement -> 
         2}, {{$CellContext`mleQ$$, True, "MLE"}, {True, False}, 
         ControlPlacement -> 
         3}, {{$CellContext`\[CapitalMu]$$, 9, "polynomial order"}, 0, 16, 1, 
         Appearance -> {"Labeled"}, ControlPlacement -> 
         4}, {{$CellContext`log\[CapitalLambda]0$$, 3, 
          "-log a-priori info (RLS)"}, 0, 16, Appearance -> "Labeled", 
         ControlPlacement -> 
         5}, {{$CellContext`log\[Sigma]\[Xi]2$$, 3, "log a-priori cov (KAL)"},
          0, 16, Appearance -> "Labeled", ControlPlacement -> 6}, 
        Grid[{{
           Grid[{{
              Button[
              "RESET", ($CellContext`\[CapitalMu]$$ = 
                9; $CellContext`log\[CapitalLambda]0$$ = 
                3; $CellContext`log\[Sigma]\[Xi]2$$ = 3)& ], 
              Manipulate`Place[1], 
              Manipulate`Place[2], 
              Manipulate`Place[3]}}]}, {
           Manipulate`Place[4]}, {
           Manipulate`Place[5]}, {
           Manipulate`Place[6]}}]}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{505., {244., 251.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.729120694893572*^9, 3.729120729239387*^9, 3.729121073140068*^9, 
   3.729121111649043*^9, 3.729172308359383*^9, 3.729174504534432*^9, 
   3.729174541120797*^9, 3.729174577438936*^9, 3.7291756912669277`*^9, 
   3.729175878038041*^9, 3.729183413008506*^9, {3.729183448351598*^9, 
   3.729183461260701*^9}, 3.7292559380417747`*^9, 3.7295523020803957`*^9, 
   3.729557876588092*^9, 3.729629838965455*^9, 3.729634637046328*^9, 
   3.7296428728365097`*^9, 3.729642909628141*^9, 3.729643939586529*^9, 
   3.72964718593789*^9, 3.7296832025410233`*^9, 3.729778155948976*^9, 
   3.7297792341062117`*^9, 3.729779281194851*^9, 3.729894700523287*^9, 
   3.7298960065802193`*^9, 3.729896153198247*^9, 3.729897296057836*^9, 
   3.73014035550076*^9, 3.7302402723294153`*^9, 3.730380091798254*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"d27ce4d8-9803-4500-a869-37b203321c88"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Renormalizing RLS", "Subchapter",
 CellChangeTimes->{{3.729092768444851*^9, 3.729092782412208*^9}, {
  3.729191699611701*^9, 3.729191706169241*^9}, {3.729798432235529*^9, 
  3.7297984335852747`*^9}},ExpressionUUID->"ec2835d0-1e43-4366-9376-\
c0a251fa559b"],

Cell[TextData[{
 "When the observation noise ",
 Cell[BoxData[
  FormBox["\[CapitalZeta]", TraditionalForm]],ExpressionUUID->
  "cee2b76b-94f4-4d39-af2d-0579b6076db6"],
 " is unity, KAL coincides with RLS. In the demonstration below, a-priori \
information ",
 Cell[BoxData[
  FormBox["\[CapitalLambda]", TraditionalForm]],ExpressionUUID->
  "64b2c5a6-569c-42ea-9d39-1c5b1e4d462c"],
 " in RLS is set always to be the inverse of a-priori estimate covariance ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]],ExpressionUUID->
  "0c6f3956-3d95-4cf6-a9d1-9ca1c9fcb773"],
 " in KAL; RLS and KAL will have the same belief in the a-priori estimate of \
the unknown parameters. Vary the observation noise independently to see KAL \
and RLS coincide when it\[CloseCurlyQuote]s zero.\n\nAs observation noise \
decreases, the solutions believe the observations more and the solution \
over-fits. As the a-priori covariance decreases, the solution believes the \
a-priori estimates more and the solution regularizes."
}], "Text",
 CellChangeTimes->{{3.729093282411186*^9, 3.729093313683037*^9}, {
   3.729117959440587*^9, 3.729117962326047*^9}, {3.7291180366585493`*^9, 
   3.7291181529404573`*^9}, {3.729120823468717*^9, 3.7291208319067087`*^9}, {
   3.729120924129122*^9, 3.7291209334511013`*^9}, {3.7291612546720057`*^9, 
   3.7291614312105837`*^9}, {3.729161481669347*^9, 3.729161524300392*^9}, {
   3.729165948834399*^9, 3.7291660151159143`*^9}, 3.7291746302654448`*^9, 
   3.729174660835752*^9, {3.729182703813655*^9, 3.7291827056457043`*^9}, {
   3.729645533347239*^9, 3.729645535008542*^9}, {3.72968376925354*^9, 
   3.729683796986575*^9}, {3.72968383611133*^9, 3.729683840551021*^9}, {
   3.7296873492799683`*^9, 3.7296874288640547`*^9}, {3.729798450427746*^9, 
   3.729798491548514*^9}},ExpressionUUID->"d78bc809-65a9-43d3-b5fa-\
adc52a5bb0e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"terms", "=", 
          RowBox[{"symbolicPowers", "[", 
           RowBox[{"x", ",", "\[CapitalMu]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"cs", "=", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "\[CapitalMu]", "]"}], "/@", 
           RowBox[{"List", "/@", 
            RowBox[{
            "bts", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"rls", "=", 
            RowBox[{"Quiet", "@", 
             RowBox[{
              RowBox[{"rlsFit", "[", 
               SuperscriptBox["10", 
                RowBox[{
                 RowBox[{"-", "2"}], "log\[Sigma]\[Xi]"}]], "]"}], "[", 
              RowBox[{"\[CapitalMu]", ",", "bts"}], "]"}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"kalman", "=", 
            RowBox[{
             RowBox[{"kalFit", "[", 
              RowBox[{
               SuperscriptBox["10", 
                RowBox[{"2", "log\[Sigma]\[Zeta]"}]], ",", 
               SuperscriptBox["10", 
                RowBox[{"2", "log\[Sigma]\[Xi]"}]]}], "]"}], "[", 
             RowBox[{"\[CapitalMu]", ",", "bts"}], "]"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"rlsFn", "=", 
              RowBox[{
               RowBox[{"{", "terms", "}"}], ".", 
               RowBox[{
               "rls", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"kalFn", "=", 
              RowBox[{
               RowBox[{"{", "terms", "}"}], ".", 
               RowBox[{
               "kalman", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"lp", "=", 
               RowBox[{"ListPlot", "[", 
                RowBox[{
                 RowBox[{"bts", "\[Transpose]"}], ",", "\[IndentingNewLine]", 
                 
                 RowBox[{"PlotMarkers", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Graphics", "@", 
                    RowBox[{"{", 
                    RowBox[{"Blue", ",", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}], 
                    "}"}]}], ",", ".05"}], "}"}]}]}], "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"showlist", "=", 
                 RowBox[{"{", 
                  RowBox[{"lp", ",", 
                   RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{"2.", "\[Pi]", " ", "x"}], "]"}],
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0.", ",", "1."}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Thick", ",", 
                    StyleBox["Green",
                    Background->RGBColor[1, 1, 0]]}], "}"}]}]}], "]"}]}], 
                  "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{"rlsQ", ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"showlist", ",", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox["rlsFn",
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    StyleBox["Purple",
                    Background->RGBColor[1, 1, 0]], "}"}]}]}], "]"}]}], 
                   "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{"kalQ", ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"showlist", ",", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox["kalFn",
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    StyleBox["Cyan",
                    Background->RGBColor[1, 1, 0]], "}"}]}]}], "]"}]}], 
                   "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Quiet", "@", 
                 RowBox[{"Show", "[", 
                  RowBox[{"showlist", ",", 
                   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                   RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<x\>\"", ",", "\"\<t\>\""}], "}"}]}]}], 
                  "]"}]}]}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Grid", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Button", "[", 
             RowBox[{"\"\<RESET\>\"", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"log\[Sigma]\[Zeta]", "=", "0.0"}], ";", 
                 RowBox[{"log\[Sigma]\[Xi]", "=", "1.5"}], ";", 
                 RowBox[{"\[CapitalMu]", "=", "9"}]}], ")"}], "&"}]}], "]"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"Control", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"rlsQ", ",", "True", ",", "\"\<RLS\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Control", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"kalQ", ",", "True", ",", "\"\<KAL\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}]}], 
           "}"}], "}"}], "]"}], ",", "\"\<\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\[CapitalMu]", ",", "9", ",", "\"\<polynomial order\>\""}], 
            "}"}], ",", "0", ",", "16", ",", "1", ",", 
           RowBox[{"Appearance", "\[Rule]", 
            RowBox[{"{", "\"\<Labeled\>\"", "}"}]}]}], "}"}], "]"}], ",", 
        "\"\<\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "log\[Sigma]\[Xi]", ",", "1.5", ",", 
            "\"\<log \!\(\*SqrtBox[\(P\)]\) (KAL) = (-log \!\(\*SqrtBox[\(\
\[CapitalLambda]\)]\)) (RLS) \>\""}], "}"}], ",", 
          RowBox[{"-", "3"}], ",", "8", ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
        "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "log\[Sigma]\[Zeta]", ",", "0.0", ",", 
            "\"\<log \!\(\*SqrtBox[\(\[CapitalZeta]\)]\) (KAL)\>\""}], "}"}], 
          ",", 
          RowBox[{"-", "6"}], ",", "3", ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
        "]"}], "}"}]}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727884681931381*^9, 3.7278848244947367`*^9}, 
   3.727884861217602*^9, {3.727884975910451*^9, 3.7278849940673532`*^9}, {
   3.727885103521431*^9, 3.727885154698123*^9}, {3.72788520225443*^9, 
   3.727885279820177*^9}, {3.727885496115718*^9, 3.727885517688189*^9}, {
   3.72788559395383*^9, 3.727885598972475*^9}, {3.7278856296542664`*^9, 
   3.727885630876935*^9}, {3.727885695972756*^9, 3.727885696864628*^9}, {
   3.727886633660364*^9, 3.72788671287046*^9}, {3.727886975364171*^9, 
   3.727886975439041*^9}, {3.727903476653379*^9, 3.7279034819231358`*^9}, {
   3.727903531862627*^9, 3.727903539245574*^9}, 3.727913149489944*^9, {
   3.727915429732944*^9, 3.7279154437948627`*^9}, {3.727915750998211*^9, 
   3.7279158447033873`*^9}, {3.7279213832695303`*^9, 3.72792149154887*^9}, {
   3.727921523149373*^9, 3.72792161270367*^9}, {3.72792165300301*^9, 
   3.727921654632832*^9}, {3.727921753282296*^9, 3.727921753360197*^9}, {
   3.727924008558401*^9, 3.727924045018003*^9}, {3.727924293814445*^9, 
   3.727924370827516*^9}, 3.727965590613636*^9, {3.7279686551525917`*^9, 
   3.727968670349081*^9}, {3.7279689406605043`*^9, 3.727969019631563*^9}, {
   3.727970883056108*^9, 3.727970945128386*^9}, {3.727971005813472*^9, 
   3.727971023734253*^9}, {3.727990640753121*^9, 3.727990674786282*^9}, {
   3.727990711779483*^9, 3.727990808626033*^9}, {3.727991307012423*^9, 
   3.727991307022031*^9}, {3.7279932412769613`*^9, 3.7279932949280367`*^9}, {
   3.7279933910397243`*^9, 3.727993398358789*^9}, {3.727993778490755*^9, 
   3.72799379332897*^9}, {3.727993826040863*^9, 3.7279938751552763`*^9}, {
   3.727993956673335*^9, 3.727993958184173*^9}, 3.727994128012043*^9, {
   3.7280354067714148`*^9, 3.7280354258611927`*^9}, {3.728035634299762*^9, 
   3.728035732029833*^9}, {3.72803585641748*^9, 3.728035906176405*^9}, {
   3.728038924314391*^9, 3.728039041653799*^9}, {3.728039077026232*^9, 
   3.72803913265169*^9}, {3.728039194847865*^9, 3.728039320044661*^9}, {
   3.728044256958378*^9, 3.728044343151896*^9}, {3.728044393583234*^9, 
   3.728044466540698*^9}, 3.7280447095836163`*^9, {3.728044856722988*^9, 
   3.728044959527645*^9}, {3.728044995179022*^9, 3.728044998104682*^9}, {
   3.728045028753289*^9, 3.728045063548128*^9}, {3.728045464570526*^9, 
   3.728045476328084*^9}, {3.728045812340419*^9, 3.728045836978776*^9}, {
   3.7280461335391397`*^9, 3.728046355530389*^9}, {3.728046392282709*^9, 
   3.728046397281275*^9}, {3.728046429888109*^9, 3.728046434285967*^9}, {
   3.728046509047914*^9, 3.728046577986915*^9}, {3.728048625582951*^9, 
   3.728048658147644*^9}, {3.728048704639155*^9, 3.7280487209829884`*^9}, {
   3.728048763333255*^9, 3.728048783520523*^9}, 3.728048849900649*^9, {
   3.728048881350296*^9, 3.7280488887365723`*^9}, {3.7280489358794527`*^9, 
   3.728048947834031*^9}, {3.7280492952517767`*^9, 3.728049427179392*^9}, {
   3.728049506853256*^9, 3.7280496162697783`*^9}, {3.728049702949929*^9, 
   3.728049708359687*^9}, {3.7280497561537037`*^9, 3.728049819625853*^9}, {
   3.728049930158724*^9, 3.728049930640306*^9}, {3.728089854705469*^9, 
   3.728089855621914*^9}, {3.728090725808407*^9, 3.7280907258189697`*^9}, {
   3.728169349695664*^9, 3.728169349720875*^9}, {3.7281694009815397`*^9, 
   3.7281694178910418`*^9}, {3.728169511786654*^9, 3.7281695237214537`*^9}, {
   3.728169612536371*^9, 3.728169630625689*^9}, 3.72825398263583*^9, {
   3.7290928993104963`*^9, 3.7290929198661003`*^9}, {3.729093017541959*^9, 
   3.7290930188886843`*^9}, {3.7290930762770233`*^9, 3.729093076719734*^9}, {
   3.72909336384054*^9, 3.729093404015414*^9}, {3.729095580798506*^9, 
   3.7290957047591*^9}, {3.729095766580648*^9, 3.7290957771880827`*^9}, {
   3.729107615295549*^9, 3.729107649857699*^9}, {3.729107694037426*^9, 
   3.729107743875201*^9}, {3.7291077762521057`*^9, 3.7291078031246223`*^9}, {
   3.729118170017755*^9, 3.729118205624216*^9}, {3.729118574833902*^9, 
   3.729118716465946*^9}, 3.729118800635138*^9, {3.7291198853367987`*^9, 
   3.729119917193569*^9}, {3.729119958982697*^9, 3.729119965955413*^9}, {
   3.7291200866814137`*^9, 3.729120095768982*^9}, {3.729120128434678*^9, 
   3.729120131648838*^9}, {3.729120172278734*^9, 3.729120172356533*^9}, {
   3.729120743402363*^9, 3.7291207441433563`*^9}, {3.729120788602343*^9, 
   3.7291207913479967`*^9}, {3.7291208644443913`*^9, 3.72912086593517*^9}, {
   3.729120949328354*^9, 3.729120951079392*^9}, {3.729120998089177*^9, 
   3.729121101876314*^9}, {3.729161109484889*^9, 3.729161122514371*^9}, {
   3.729161176256221*^9, 3.729161200551162*^9}, {3.729166018684317*^9, 
   3.729166061187087*^9}, {3.729173389847056*^9, 3.729173389871232*^9}, {
   3.729173453409334*^9, 3.729173453420225*^9}, {3.729174596320022*^9, 
   3.7291746086723146`*^9}, {3.72917468944347*^9, 3.729174740763813*^9}, {
   3.729175490419692*^9, 3.729175516174968*^9}, {3.729175639773261*^9, 
   3.729175642039402*^9}, {3.729647100398603*^9, 3.729647108685156*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"c2153b8f-523a-4f44-8102-f58268af8565"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`kalQ$$ = 
    True, $CellContext`log\[Sigma]\[Zeta]$$ = 
    0., $CellContext`log\[Sigma]\[Xi]$$ = 1.5, $CellContext`rlsQ$$ = 
    True, $CellContext`\[CapitalMu]$$ = 9, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`rlsQ$$], True, "RLS"}, {True, False}}, {{
       Hold[$CellContext`kalQ$$], True, "KAL"}, {True, False}}, {{
       Hold[$CellContext`\[CapitalMu]$$], 9, "polynomial order"}, 0, 16, 1}, {{
       Hold[$CellContext`log\[Sigma]\[Xi]$$], 1.5, 
       "log \!\(\*SqrtBox[\(P\)]\) (KAL) = (-log \!\(\*SqrtBox[\(\
\[CapitalLambda]\)]\)) (RLS) "}, -3, 8}, {{
       Hold[$CellContext`log\[Sigma]\[Zeta]$$], 0., 
       "log \!\(\*SqrtBox[\(\[CapitalZeta]\)]\) (KAL)"}, -6, 3}, {
      Hold[
       Grid[{{
          Grid[{{
             Button[
             "RESET", ($CellContext`log\[Sigma]\[Zeta]$$ = 
               0.; $CellContext`log\[Sigma]\[Xi]$$ = 
               1.5; $CellContext`\[CapitalMu]$$ = 9)& ], 
             Manipulate`Place[1], 
             Manipulate`Place[2]}}], ""}, {
          Manipulate`Place[3], ""}, {
          Manipulate`Place[4]}, {
          Manipulate`Place[5]}}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {450., {141., 147.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`rlsQ$2469$$ = False, $CellContext`kalQ$2470$$ = 
    False, $CellContext`\[CapitalMu]$2471$$ = 
    0, $CellContext`log\[Sigma]\[Xi]$2472$$ = 
    0, $CellContext`log\[Sigma]\[Zeta]$2473$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`kalQ$$ = 
        True, $CellContext`log\[Sigma]\[Zeta]$$ = 
        0., $CellContext`log\[Sigma]\[Xi]$$ = 1.5, $CellContext`rlsQ$$ = 
        True, $CellContext`\[CapitalMu]$$ = 9}, "ControllerVariables" :> {
        Hold[$CellContext`rlsQ$$, $CellContext`rlsQ$2469$$, False], 
        Hold[$CellContext`kalQ$$, $CellContext`kalQ$2470$$, False], 
        Hold[$CellContext`\[CapitalMu]$$, $CellContext`\[CapitalMu]$2471$$, 
         0], 
        Hold[$CellContext`log\[Sigma]\[Xi]$$, \
$CellContext`log\[Sigma]\[Xi]$2472$$, 0], 
        Hold[$CellContext`log\[Sigma]\[Zeta]$$, $CellContext`log\[Sigma]\
\[Zeta]$2473$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Module[{$CellContext`x$}, 
        With[{$CellContext`terms$ = \
$CellContext`symbolicPowers[$CellContext`x$, $CellContext`\[CapitalMu]$$], \
$CellContext`cs$ = Map[
            $CellContext`\[Phi][$CellContext`\[CapitalMu]$$], 
            Map[List, 
             Part[$CellContext`bts, 1]]]}, 
         With[{$CellContext`rls$ = Quiet[
             $CellContext`rlsFit[
             10^((-2) $CellContext`log\[Sigma]\[Xi]$$)][$CellContext`\
\[CapitalMu]$$, $CellContext`bts]], $CellContext`kalman$ = \
$CellContext`kalFit[
            10^(2 $CellContext`log\[Sigma]\[Zeta]$$), 
             10^(2 $CellContext`log\[Sigma]\[Xi]$$)][$CellContext`\[CapitalMu]\
$$, $CellContext`bts]}, 
          With[{$CellContext`rlsFn$ = Dot[{$CellContext`terms$}, 
              Part[$CellContext`rls$, 1]], $CellContext`kalFn$ = 
            Dot[{$CellContext`terms$}, 
              Part[$CellContext`kalman$, 1]]}, 
           With[{$CellContext`lp$ = ListPlot[
               Transpose[$CellContext`bts], PlotMarkers -> {
                 Graphics[{Blue, 
                   Circle[{0, 0}, 1]}], 0.05}]}, 
            Module[{$CellContext`showlist$ = {$CellContext`lp$, 
                Plot[
                 Sin[2. Pi $CellContext`x$], {$CellContext`x$, 0., 1.}, 
                 PlotStyle -> {Thick, Green}]}}, If[$CellContext`rlsQ$$, 
               AppendTo[$CellContext`showlist$, 
                
                Plot[$CellContext`rlsFn$, {$CellContext`x$, 0, 1}, 
                 PlotStyle -> {Purple}]]]; If[$CellContext`kalQ$$, 
               AppendTo[$CellContext`showlist$, 
                
                Plot[$CellContext`kalFn$, {$CellContext`x$, 0, 1}, 
                 PlotStyle -> {Cyan}]]]; Quiet[
               
               Show[$CellContext`showlist$, Frame -> True, 
                FrameLabel -> {"x", "t"}]]]]]]]], 
      "Specifications" :> {{{$CellContext`rlsQ$$, True, "RLS"}, {True, False},
          ControlPlacement -> 1}, {{$CellContext`kalQ$$, True, "KAL"}, {
         True, False}, ControlPlacement -> 
         2}, {{$CellContext`\[CapitalMu]$$, 9, "polynomial order"}, 0, 16, 1, 
         Appearance -> {"Labeled"}, ControlPlacement -> 
         3}, {{$CellContext`log\[Sigma]\[Xi]$$, 1.5, 
          "log \!\(\*SqrtBox[\(P\)]\) (KAL) = (-log \!\(\*SqrtBox[\(\
\[CapitalLambda]\)]\)) (RLS) "}, -3, 8, Appearance -> "Labeled", 
         ControlPlacement -> 
         4}, {{$CellContext`log\[Sigma]\[Zeta]$$, 0., 
          "log \!\(\*SqrtBox[\(\[CapitalZeta]\)]\) (KAL)"}, -6, 3, Appearance -> 
         "Labeled", ControlPlacement -> 5}, 
        Grid[{{
           Grid[{{
              Button[
              "RESET", ($CellContext`log\[Sigma]\[Zeta]$$ = 
                0.; $CellContext`log\[Sigma]\[Xi]$$ = 
                1.5; $CellContext`\[CapitalMu]$$ = 9)& ], 
              Manipulate`Place[1], 
              Manipulate`Place[2]}}], ""}, {
           Manipulate`Place[3], ""}, {
           Manipulate`Place[4]}, {
           Manipulate`Place[5]}}]}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{537., {244., 251.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7291608432818193`*^9, 3.72916112450849*^9, {3.729161176716465*^9, 
   3.729161201301146*^9}, 3.7291612332234373`*^9, 3.729166027254204*^9, 
   3.729166062247652*^9, 3.729172308588915*^9, 3.729174610695847*^9, {
   3.729174741969412*^9, 3.7291747607471*^9}, 3.729175691543783*^9, 
   3.729175884256433*^9, 3.729183413081258*^9, {3.729183448421172*^9, 
   3.7291834613216057`*^9}, 3.7292559386259813`*^9, 3.729552302382516*^9, 
   3.729557876632798*^9, 3.7296298391238832`*^9, 3.7296346371776114`*^9, 
   3.72964287312507*^9, 3.729642909680106*^9, 3.729643939780446*^9, 
   3.729647111709886*^9, 3.7296471859968224`*^9, 3.729683202732308*^9, 
   3.7296836129467773`*^9, 3.7297781560231*^9, 3.7297792341882687`*^9, 
   3.729779281260777*^9, 3.7298947007340803`*^9, 3.729896006637224*^9, 
   3.729896153410234*^9, 3.729897296235509*^9, 3.73014035573673*^9, 
   3.730240272552095*^9, 3.730380091869788*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"85bb298c-87ec-4146-8158-b03b5e1336a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Add Observation Noise to RLS", "Subsection",
 CellChangeTimes->{{3.729094358222797*^9, 3.7290944123276787`*^9}, {
  3.729798505179409*^9, 
  3.7297985074907103`*^9}},ExpressionUUID->"f2ba3712-eb3a-4eb3-848b-\
e310da76977c"],

Cell[TextData[{
 "RLS, so far, is normalized to unit observation (OBN) noise. How to modify \
RLS to account for non-normalized OBN noise? \n\nScale (each row of) the \
partials by the inverse of the OBN standard deviation, represented below by a \
matrix square root of the OBN covariance ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "\[CapitalZeta]"], TraditionalForm]],ExpressionUUID->
  "47ef5763-33fe-40ce-8d6b-6dca9bd22ffb"],
 ". Finally, rescale the final estimate (not the final covariance) by a \
matrix built from the inverse OBN standard deviation because the recurrent \
normal equations, which incrementally build ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["P", "\[CapitalZeta]", 
        RowBox[{"-", "1"}]], "\[CenterDot]", 
       RowBox[{"A", "\[Transpose]"}], "\[CenterDot]", "A", "\[CenterDot]", 
       SubsuperscriptBox["P", "\[CapitalZeta]", 
        RowBox[{"-", "T"}]]}], ")"}], 
     RowBox[{"-", "1"}]], "\[CenterDot]", 
    SubsuperscriptBox["P", "\[CapitalZeta]", 
     RowBox[{"-", "1"}]], "\[CenterDot]", 
    RowBox[{"A", "\[Transpose]"}], "\[CenterDot]", "\[CapitalZeta]"}], 
   TraditionalForm]],ExpressionUUID->"71782ec1-e57e-4a36-9cc9-684e06306435"],
 ", have one too many factors of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "\[CapitalZeta]"], TraditionalForm]],ExpressionUUID->
  "c536a520-ad98-411c-bb70-5ca584b90b94"],
 "."
}], "Text",
 CellChangeTimes->{{3.729094387864348*^9, 3.729094408224104*^9}, {
  3.7290949467513723`*^9, 3.729094978828157*^9}, {3.7290954227665462`*^9, 
  3.729095484361279*^9}, {3.729107556348858*^9, 3.729107556825692*^9}, {
  3.729169365030899*^9, 3.72916938704521*^9}, {3.7291728712132807`*^9, 
  3.7291729647708797`*^9}, {3.729182737533868*^9, 3.729182738415864*^9}, {
  3.7296381231351852`*^9, 3.729638151867065*^9}, {3.729639553579912*^9, 
  3.72963957002866*^9}, {3.729639602824461*^9, 3.729639607872213*^9}, {
  3.729639746459138*^9, 3.729639966397956*^9}, {3.7296461335142803`*^9, 
  3.729646178394472*^9}, {3.729646644796595*^9, 3.729646660280738*^9}, {
  3.7296839614014273`*^9, 3.72968396184893*^9}, {3.729687467727697*^9, 
  3.7296874741909933`*^9}},ExpressionUUID->"978149cd-9868-42b3-b719-\
ecc543111b8b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "rlsUpdate", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"rlsUpdate", "[", "sqrtP\[CapitalZeta]_", "]"}], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Xi]_", ",", "\[CapitalLambda]_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Zeta]_", ",", "a_"}], "}"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sP\[CapitalZeta]ia", "=", 
        RowBox[{"LinearSolve", "[", 
         RowBox[{"sqrtP\[CapitalZeta]", ",", "a"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[CapitalPi]", "=", 
          RowBox[{"(", 
           RowBox[{"\[CapitalLambda]", "+", 
            RowBox[{
             RowBox[{"sP\[CapitalZeta]ia", "\[Transpose]"}], ".", 
             "sP\[CapitalZeta]ia"}]}], ")"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"LinearSolve", "[", 
           RowBox[{"\[CapitalPi]", ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"sP\[CapitalZeta]ia", "\[Transpose]"}], ".", 
               "\[Zeta]"}], "+", 
              RowBox[{"\[CapitalLambda]", ".", "\[Xi]"}]}], ")"}]}], "]"}], 
          ",", "\[CapitalPi]"}], "}"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Xi]0", "=", 
        RowBox[{"(", GridBox[{
           {"0"},
           {"0"}
          }], ")"}]}], ",", 
       RowBox[{"\[CapitalLambda]0", "=", 
        RowBox[{"(", GridBox[{
           {"1.0*^-6", "0"},
           {"0", "1.0*^-6"}
          }], ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"inputs", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"List", "/@", 
            RowBox[{"data", "\[LeftDoubleBracket]", 
             RowBox[{"1", ";;", "n"}], "\[RightDoubleBracket]"}]}], ",", 
           RowBox[{"List", "/@", 
            RowBox[{"partials", "\[LeftDoubleBracket]", 
             RowBox[{"1", ";;", "n"}], "\[RightDoubleBracket]"}]}]}], "}"}], 
         "\[Transpose]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\[Xi]rr", ",", "\[Xi]r", ",", "\[Xi]k", ",", "\[CapitalPi]rr", ",", 
         "\[CapitalPi]r", ",", "\[CapitalPi]k"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Xi]rr", ",", "\[CapitalPi]rr"}], "}"}], "=", 
          RowBox[{"Fold", "[", 
           RowBox[{
            RowBox[{"rlsUpdate", "[", 
             RowBox[{"\[Sigma]", " ", 
              RowBox[{"IdentityMatrix", "[", "1", "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\[Xi]0", ",", "\[CapitalLambda]0"}], "}"}], ",", 
            "inputs"}], "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Xi]r", ",", "\[CapitalPi]r"}], "}"}], "=", 
          RowBox[{"Fold", "[", 
           RowBox[{"update", ",", 
            RowBox[{"{", 
             RowBox[{"\[Xi]0", ",", "\[CapitalLambda]0"}], "}"}], ",", 
            "inputs"}], "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Xi]k", ",", "\[CapitalPi]k"}], "}"}], "=", 
          RowBox[{"Fold", "[", 
           RowBox[{
            RowBox[{"kalmanUpdate", "[", 
             SuperscriptBox["\[Sigma]", "2"], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Xi]0", ",", 
              RowBox[{"Inverse", "@", "\[CapitalLambda]0"}]}], "}"}], ",", 
            "inputs"}], "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
        RowBox[{"MatrixForm", "@", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"IdentityMatrix", "[", "2", "]"}], "\[Sigma]"], ".", 
              "\[Xi]rr"}], ",", "\[Xi]r", ",", "\[Xi]k"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[CapitalPi]rr", ",", 
             RowBox[{"\[CapitalPi]r", "/", 
              SuperscriptBox["\[Sigma]", "2"]}], ",", 
             RowBox[{"Inverse", "@", "\[CapitalPi]k"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Chop", "[", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"\[CapitalPi]rr", "-", 
                 RowBox[{"\[CapitalPi]r", "/", 
                  SuperscriptBox["\[Sigma]", "2"]}]}], "]"}], ",", 
               SuperscriptBox["10", 
                RowBox[{"-", "6"}]]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Chop", "[", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"Inverse", "@", "\[CapitalPi]k"}], "-", 
                 RowBox[{"\[CapitalPi]r", "/", 
                  SuperscriptBox["\[Sigma]", "2"]}]}], "]"}], ",", 
               SuperscriptBox["10", 
                RowBox[{"-", "6"}]]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Chop", "[", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"Inverse", "@", "\[CapitalPi]k"}], "-", 
                 "\[CapitalPi]rr"}], "]"}], ",", 
               SuperscriptBox["10", 
                RowBox[{"-", "6"}]]}], "]"}]}], "}"}]}], "}"}]}]}]}], "]"}]}],
     "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "3"}], "}"}], ",", "3", ",", "nData", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Sigma]", ",", "1"}], "}"}], ",", 
     RowBox[{"-", "100"}], ",", "100", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.727054852495049*^9, 3.72705494257406*^9}, {
   3.727055026792467*^9, 3.727055093506559*^9}, {3.7270551930291023`*^9, 
   3.727055263833913*^9}, {3.727055297216107*^9, 3.7270554270906563`*^9}, {
   3.7270560338846903`*^9, 3.72705612788085*^9}, {3.7270561855129213`*^9, 
   3.7270561959544077`*^9}, {3.727056250031129*^9, 3.727056367103942*^9}, {
   3.727056427865035*^9, 3.727056443080068*^9}, {3.727056561323501*^9, 
   3.727056598046468*^9}, {3.727056640141169*^9, 3.727056654582451*^9}, {
   3.727056728700244*^9, 3.7270567914565277`*^9}, {3.727056869366274*^9, 
   3.727056921039433*^9}, 3.72705709924362*^9, {3.727057420502048*^9, 
   3.7270575464285316`*^9}, {3.7270577446377487`*^9, 3.727057775909028*^9}, {
   3.7270578799866133`*^9, 3.727057901007744*^9}, 3.7270581603330593`*^9, {
   3.727058349930079*^9, 3.7270584478842707`*^9}, {3.727058490337566*^9, 
   3.727058577824399*^9}, {3.727058673744141*^9, 3.7270586947547493`*^9}, {
   3.727058788099071*^9, 3.7270588909590683`*^9}, {3.727058934322414*^9, 
   3.7270589393580847`*^9}, {3.72705898616982*^9, 3.7270589868650723`*^9}, {
   3.7270592331231947`*^9, 3.727059237300102*^9}, {3.7274435231168203`*^9, 
   3.727443546500602*^9}, {3.727443876120749*^9, 3.7274438848810577`*^9}, {
   3.727444759010458*^9, 3.727444822403467*^9}, {3.727444904584729*^9, 
   3.727444917600658*^9}, {3.727444951170147*^9, 3.72744495624857*^9}, {
   3.727455276322372*^9, 3.7274553027713842`*^9}, {3.727455828581184*^9, 
   3.727455858661305*^9}, {3.7274561810931997`*^9, 3.727456183162497*^9}, {
   3.727472496770452*^9, 3.727472540592374*^9}, {3.727472571262414*^9, 
   3.7274725926081057`*^9}, {3.727473460371025*^9, 3.727473470385874*^9}, {
   3.727967024755598*^9, 3.7279670373987417`*^9}, 3.727967235445434*^9, {
   3.728948393392125*^9, 3.728948394937408*^9}, {3.7290949247050467`*^9, 
   3.729094943930032*^9}, {3.729095003042301*^9, 3.729095003876113*^9}, {
   3.7290950412490463`*^9, 3.729095051008603*^9}, {3.7290950822550173`*^9, 
   3.729095135857238*^9}, {3.7290951897446327`*^9, 3.729095402554632*^9}, {
   3.729107574665441*^9, 3.7291075901656437`*^9}, 3.7291080484571247`*^9, {
   3.729108084736548*^9, 3.72910825558943*^9}, {3.729161604459531*^9, 
   3.729161610440398*^9}, {3.7291616424288397`*^9, 3.729161760746108*^9}, {
   3.729161803140615*^9, 3.72916181703271*^9}, {3.7291721056426287`*^9, 
   3.729172155283436*^9}, {3.7291721980443363`*^9, 3.729172276420932*^9}, {
   3.729172336052294*^9, 3.729172342704544*^9}, {3.7291723737632227`*^9, 
   3.729172427102948*^9}, {3.729172497300097*^9, 3.7291726002607937`*^9}, {
   3.729172635205014*^9, 3.7291727804950743`*^9}, {3.729172814049247*^9, 
   3.72917282262862*^9}, {3.729172924194323*^9, 3.729172927538876*^9}, {
   3.7291729818445587`*^9, 3.729173000378613*^9}, {3.729174803584015*^9, 
   3.729174827188703*^9}, {3.729635300462594*^9, 3.729635329025786*^9}, 
   3.729636008968544*^9, {3.729636272681835*^9, 3.7296363081017237`*^9}, {
   3.729636416390744*^9, 3.7296364270043907`*^9}, {3.7296365151239147`*^9, 
   3.729636544411797*^9}, {3.729636598430265*^9, 3.729636615497266*^9}, {
   3.729636673165737*^9, 3.729636822399268*^9}, {3.72963687410984*^9, 
   3.7296368920773907`*^9}, {3.7296369845843077`*^9, 
   3.7296370095969133`*^9}, {3.7296371791119556`*^9, 3.729637188403821*^9}, {
   3.729637251543976*^9, 3.7296374636954813`*^9}, {3.7296375127019663`*^9, 
   3.729637650441799*^9}, 3.729637697282694*^9, 3.729637746956402*^9, {
   3.729637912605995*^9, 3.729638007565567*^9}, {3.7296380790331573`*^9, 
   3.729638109879693*^9}, {3.729638194298698*^9, 3.7296382277516327`*^9}, 
   3.72964577609685*^9, {3.7296460525874643`*^9, 3.729646120714403*^9}, 
   3.729682464425685*^9, {3.729682496154779*^9, 3.729682501153379*^9}, {
   3.729683983125988*^9, 3.729683996176063*^9}, {3.7296853629102182`*^9, 
   3.7296853792222557`*^9}, {3.729685411789864*^9, 3.729685447926292*^9}, {
   3.72968551455221*^9, 3.729685521383741*^9}, {3.729685560401882*^9, 
   3.729685629173448*^9}, {3.7296856732126093`*^9, 3.729685903363908*^9}, {
   3.729686096422873*^9, 3.729686185724934*^9}, {3.7296862221744957`*^9, 
   3.729686222655352*^9}, {3.729686261470471*^9, 3.729686307392109*^9}, {
   3.729686344163858*^9, 3.729686424060445*^9}, {3.729686474516107*^9, 
   3.7296865793443832`*^9}, {3.729686619156342*^9, 3.72968666650456*^9}, {
   3.729687217278598*^9, 3.7296872845587063`*^9}, {3.7296876028411913`*^9, 
   3.7296876338678923`*^9}, {3.729798616749312*^9, 3.729798662617351*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"a82fcb89-f589-43a5-9790-852c212a730f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 3, $CellContext`\[Sigma]$$ = 1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 3}, 3, $CellContext`nData, 1}, {{
       Hold[$CellContext`\[Sigma]$$], 1}, -100, 100}}, Typeset`size$$ = {
    11272., {137.41754150390625`, 144.58245849609375`}}, Typeset`update$$ = 0,
     Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n$2722$$ = 0, $CellContext`\[Sigma]$2723$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 3, $CellContext`\[Sigma]$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$2722$$, 0], 
        Hold[$CellContext`\[Sigma]$$, $CellContext`\[Sigma]$2723$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      With[{$CellContext`\[Xi]0$ = {{0}, {
          0}}, $CellContext`\[CapitalLambda]0$ = {{1.*^-6, 0}, {
           0, 1.*^-6}}, $CellContext`inputs$ = Transpose[{
            Map[List, 
             Part[$CellContext`data, 
              Span[1, $CellContext`n$$]]], 
            Map[List, 
             Part[$CellContext`partials, 
              Span[1, $CellContext`n$$]]]}]}, 
        Module[{$CellContext`\[Xi]rr$, $CellContext`\[Xi]r$, $CellContext`\
\[Xi]k$, $CellContext`\[CapitalPi]rr$, $CellContext`\[CapitalPi]r$, \
$CellContext`\[CapitalPi]k$}, {$CellContext`\[Xi]rr$, $CellContext`\
\[CapitalPi]rr$} = Fold[
            $CellContext`rlsUpdate[$CellContext`\[Sigma]$$ 
             IdentityMatrix[
              1]], {$CellContext`\[Xi]0$, $CellContext`\[CapitalLambda]0$}, \
$CellContext`inputs$]; {$CellContext`\[Xi]r$, $CellContext`\[CapitalPi]r$} = 
          Fold[$CellContext`update, {$CellContext`\[Xi]0$, $CellContext`\
\[CapitalLambda]0$}, $CellContext`inputs$]; {$CellContext`\[Xi]k$, \
$CellContext`\[CapitalPi]k$} = Fold[
            $CellContext`kalmanUpdate[$CellContext`\[Sigma]$$^2], \
{$CellContext`\[Xi]0$, 
             Inverse[$CellContext`\[CapitalLambda]0$]}, $CellContext`inputs$]; 
         MatrixForm[{{
             Dot[
             IdentityMatrix[
               2]/$CellContext`\[Sigma]$$, $CellContext`\[Xi]rr$], \
$CellContext`\[Xi]r$, $CellContext`\[Xi]k$}, {$CellContext`\[CapitalPi]rr$, \
$CellContext`\[CapitalPi]r$/$CellContext`\[Sigma]$$^2, 
             Inverse[$CellContext`\[CapitalPi]k$]}, {
             Chop[
              
              Abs[$CellContext`\[CapitalPi]rr$ - \
$CellContext`\[CapitalPi]r$/$CellContext`\[Sigma]$$^2], 10^(-6)], 
             Chop[
              Abs[
              Inverse[$CellContext`\[CapitalPi]k$] - \
$CellContext`\[CapitalPi]r$/$CellContext`\[Sigma]$$^2], 10^(-6)], 
             Chop[
              Abs[
              Inverse[$CellContext`\[CapitalPi]k$] - \
$CellContext`\[CapitalPi]rr$], 10^(-6)]}}]]], 
      "Specifications" :> {{{$CellContext`n$$, 3}, 3, $CellContext`nData, 1, 
         Appearance -> "Labeled"}, {{$CellContext`\[Sigma]$$, 1}, -100, 100, 
         Appearance -> "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{4.503599627370496*^15, {200., 207.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.72968605374187*^9, {3.729686160079255*^9, 3.729686224438879*^9}, 
   3.729686308803747*^9, 3.7296863933549547`*^9, 3.729686424622281*^9, {
   3.729686501023221*^9, 3.72968651336834*^9}, {3.7296865684021482`*^9, 
   3.729686582348391*^9}, {3.729686643824795*^9, 3.7296866678473473`*^9}, 
   3.729687255698826*^9, 3.729687285772131*^9, {3.7296876265461206`*^9, 
   3.7296876456103354`*^9}, 3.729778156089766*^9, 3.729779234251914*^9, 
   3.729779281327022*^9, {3.729798617730486*^9, 3.7297986636105833`*^9}, 
   3.7298947009139147`*^9, 3.729896006704764*^9, 3.729896153679371*^9, 
   3.729897296422574*^9, 3.7301403559781733`*^9, 3.7302402727373343`*^9, 
   3.730380092188154*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"19b79586-13c5-4f21-ba18-1cb01f35670f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["RLS beats KAL", "Subsection",
 CellChangeTimes->{{3.729182753746653*^9, 3.729182764662409*^9}, {
  3.7291917374240217`*^9, 3.729191746263137*^9}, {3.7296405387074757`*^9, 
  3.72964054391427*^9}},ExpressionUUID->"277778b0-dcfe-45cc-9dcb-\
3222470948a4"],

Cell["\<\
KAL and renormalized RLS are mathematically equivalent. Operationally, KAL \
uses subtraction to recur the covariance of the estimates, so is exposed to \
catastrophic cancelation. RLS only adds to the information matrix, so is \
exposed only to ill-conditioning, which is empirically less severe. We show \
this below.\
\>", "Text",
 CellChangeTimes->{{3.729108318055666*^9, 3.729108347023395*^9}, {
  3.729119343997692*^9, 3.729119359971643*^9}, {3.729169476126769*^9, 
  3.729169477106061*^9}, {3.72917483481177*^9, 3.7291748799421263`*^9}, {
  3.729191759307276*^9, 3.729191781475971*^9}, {3.729640562998232*^9, 
  3.729640568230112*^9}, {3.729640980175406*^9, 3.729640998789782*^9}, {
  3.7296411048780746`*^9, 3.7296411151875257`*^9}, {3.729641300872263*^9, 
  3.729641334229947*^9}, {3.7296461936050053`*^9, 3.729646207586768*^9}, {
  3.729712752322254*^9, 3.729712803608899*^9}, {3.7297987012257757`*^9, 
  3.729798723965109*^9}},ExpressionUUID->"03638b05-1593-4c2c-ad46-\
68b784ca0a43"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Regularization and MAP", "Chapter",
 CellChangeTimes->{{3.727878613935317*^9, 3.727878617609169*^9}},
 CellTags->"c:14",ExpressionUUID->"0a62acb1-49c7-40e7-8ca4-b6c8f3a93974"],

Cell[TextData[{
 "Bishop reports ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "=", 
    RowBox[{"11.111", "\[Ellipsis]"}]}], TraditionalForm]],ExpressionUUID->
  "8e22fb9c-13dd-4596-83d2-17c772c852a1"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "=", "0.005"}], TraditionalForm]],ExpressionUUID->
  "9439b565-4e31-4d22-ae02-3f68785439e4"],
 " in his figure 1.17 (page 32) and in equations 1.70 through 1.72 (page 31), \
which look suspiciously like the equations for Kalman filtering. Bishop\
\[CloseCurlyQuote]s matrix ",
 Cell[BoxData[
  FormBox[
   StyleBox["S",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "15229e6b-eefa-48a8-80b0-df50abb6726b"],
 StyleBox[" looks like ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["D",
     FontWeight->"Bold"], 
    RowBox[{"\[ThinSpace]", 
     RowBox[{"-", "1"}]}]], TraditionalForm]],ExpressionUUID->
  "1c5226ee-b619-4054-a482-ddd3e76e3691"],
 " in ",
 Cell[BoxData[
  FormBox["kalmanUpdate", TraditionalForm]], "Code",ExpressionUUID->
  "de857dd2-14f7-46ca-88a7-ba75c4137d1c"],
 " above. Let\[CloseCurlyQuote]s reproduce MAP via RLS and KAL."
}], "Text",
 CellChangeTimes->{{3.727971621209344*^9, 3.727971949635846*^9}, {
  3.72797205224653*^9, 3.7279722021279373`*^9}, {3.7279725817509613`*^9, 
  3.727972703314744*^9}, {3.7280847454753532`*^9, 3.728084792840749*^9}, {
  3.728220011630794*^9, 3.7282200748560743`*^9}, {3.728252317415781*^9, 
  3.728252334400373*^9}, {3.729171081665955*^9, 3.729171117218204*^9}, {
  3.729191351993813*^9, 3.729191365808433*^9}, {3.7291948298181257`*^9, 
  3.729194830792169*^9}, {3.729798750699163*^9, 
  3.72979875284214*^9}},ExpressionUUID->"2267e09b-40d6-4365-bafa-\
9ee4864f7ea4"],

Cell[CellGroupData[{

Cell["Bishop\[CloseCurlyQuote]s MAP", "Subchapter",
 CellChangeTimes->{{3.72797221730235*^9, 3.727972224770916*^9}, {
  3.728034928939948*^9, 3.7280349304923964`*^9}},
 CellTags->"c:15",ExpressionUUID->"08896713-5645-41eb-8d53-64e0ec086c76"],

Cell[TextData[{
 "Bishop\[CloseCurlyQuote]s equations 1.70 through 1.72 are reproduced here. \
The dimensions of the identity matrix in ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],ExpressionUUID->
  "1eacf56a-a8d9-4664-995f-125386c0e309"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalMu]", "+", "1"}], TraditionalForm]],ExpressionUUID->
  "3ce7d474-d9b6-4b6b-9a80-613654c0eeeb"],
 ", where ",
 Cell[BoxData[
  FormBox["\[CapitalMu]", TraditionalForm]],ExpressionUUID->
  "5120e51b-c864-42ac-a6ed-b95ded545421"],
 " is the order of the polynomial, one more than ",
 Cell[BoxData[
  FormBox["\[CapitalMu]", TraditionalForm]],ExpressionUUID->
  "aab244ae-ede9-45f4-b7b4-4d49f0916e6c"],
 " to account for the leading bias term:"
}], "Text",
 CellChangeTimes->{{3.727972249677867*^9, 3.727972263698797*^9}, {
   3.727992395654808*^9, 3.7279924502184677`*^9}, {3.7281700269116917`*^9, 
   3.7281700419010553`*^9}, {3.728170120216963*^9, 3.728170134209874*^9}, {
   3.72911884925035*^9, 3.729118878325338*^9}, {3.729162024195531*^9, 
   3.7291620299164963`*^9}, {3.7291711306418667`*^9, 3.729171176680653*^9}, 
   3.729178684600383*^9, {3.729182872291184*^9, 3.7291828738856*^9}, {
   3.729798765133129*^9, 
   3.729798765324222*^9}},ExpressionUUID->"dd21213d-8d31-4a8d-a140-\
6b14ed289ff2"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"m", "(", "x", ")"}], "  ", "=", "  ", 
   RowBox[{"\[Beta]", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]", "\[ThinSpace]", "(", "x", ")"}], "\[Transpose]"}], 
     "\[CenterDot]", "S", "\[CenterDot]", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "1"}], "N"], 
      RowBox[{
       RowBox[{"\[Phi]", "\[ThinSpace]", "(", 
        SubscriptBox["x", "n"], ")"}], 
       SubscriptBox["t", "n"]}]}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.727972280222818*^9, 3.7279724431858997`*^9}, {
  3.727972476930735*^9, 3.727972478697866*^9}, {3.7279730887912483`*^9, 
  3.7279731267447147`*^9}},ExpressionUUID->"db86a230-5b1e-4fe3-95ba-\
6e4e94b0201d"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["s", "2"], "(", "x", ")"}], "  ", "=", "  ", 
   RowBox[{
    SuperscriptBox["\[Beta]", 
     RowBox[{"\[ThinSpace]", 
      RowBox[{"-", "1"}]}]], "+", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]", "\[ThinSpace]", "(", "x", ")"}], "\[Transpose]"}], 
     "\[CenterDot]", "S", "\[CenterDot]", 
     RowBox[{"\[Phi]", "\[ThinSpace]", "(", "x", ")"}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.7279724613260727`*^9, 3.727972528960863*^9}, {
  3.727972730192233*^9, 3.727972730194661*^9}, {3.727973130733033*^9, 
  3.727973133972931*^9}},ExpressionUUID->"3c09bb1f-eb89-48d7-852a-\
3ceb5f7869d2"],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["S", 
    RowBox[{"\[ThinSpace]", 
     RowBox[{"-", "1"}]}]], "  ", 
   OverscriptBox["=", "def"], "  ", 
   RowBox[{
    RowBox[{"\[Alpha]", " ", 
     SubscriptBox["I", 
      RowBox[{"\[CapitalMu]", "+", "1"}]]}], "+", 
    RowBox[{"\[Beta]", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "1"}], "N"], 
      RowBox[{
       RowBox[{"\[Phi]", "\[ThinSpace]", "(", 
        SubscriptBox["x", "n"], ")"}], "\[CenterDot]", 
       RowBox[{
        RowBox[{"\[Phi]", "\[ThinSpace]", "(", 
         SubscriptBox["x", "n"], ")"}], "\[Transpose]"}]}]}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.72797275156035*^9, 3.727972881609983*^9}, {
  3.727973139344582*^9, 3.727973142448781*^9}, {3.727992385246423*^9, 
  3.727992388437778*^9}},ExpressionUUID->"9a6c9c06-bbdb-4d30-ae15-\
5a8af458f260"],

Cell["\<\
Here are links between Bishop\[CloseCurlyQuote]s formulation and ours, \
without derivation. \
\>", "Text",
 CellChangeTimes->{{3.728247291344137*^9, 3.728247310423942*^9}, {
  3.728248735711397*^9, 
  3.7282487376877623`*^9}},ExpressionUUID->"ba8ab0b2-920e-421b-b051-\
20637ca48939"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "1"}], "N"], 
    RowBox[{
     RowBox[{"\[Phi]", "\[ThinSpace]", "(", 
      SubscriptBox["x", "n"], ")"}], 
     SubscriptBox["t", "n"]}]}], "=", 
   RowBox[{
    RowBox[{"A", "\[Transpose]"}], "\[CenterDot]", "\[CapitalZeta]"}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.728246767415718*^9, 3.728246838582246*^9}, {
  3.728246899084139*^9, 3.72824690103373*^9}, {3.728247197825539*^9, 
  3.728247228753024*^9}, {3.728247278577318*^9, 
  3.72824728616096*^9}},ExpressionUUID->"fb8823b3-a39b-40d6-bfa4-\
60cc6197efe8"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    UnderscriptBox["lim", 
     RowBox[{"\[Alpha]", "\[Rule]", "0"}]], 
    RowBox[{"(", "\[ThinSpace]", 
     RowBox[{
      SuperscriptBox["\[Beta]", 
       RowBox[{"\[ThinSpace]", 
        RowBox[{"-", "1"}]}]], 
      SuperscriptBox["S", 
       RowBox[{"\[ThinSpace]", 
        RowBox[{"-", "1"}]}]]}], ")"}]}], "=", 
   RowBox[{
    RowBox[{"A", "\[Transpose]"}], "\[CenterDot]", "A"}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.728247724107789*^9, 
  3.728247835449356*^9}},ExpressionUUID->"a5944e6b-c1e2-4355-bec7-\
2b12888c8d0e"],

Cell[CellGroupData[{

Cell["\[CapitalPhi] Vectors", "Subsection",
 CellChangeTimes->{{3.728246200325514*^9, 
  3.72824620633247*^9}},ExpressionUUID->"8872f092-b076-4f1d-8a50-\
196b896e8cb3"],

Cell[TextData[{
 "Bishop\[CloseCurlyQuote]s ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Phi]", "\[ThinSpace]", "(", 
    SubscriptBox["x", "n"], ")"}], TraditionalForm]],ExpressionUUID->
  "d0357893-7a34-47d5-b9df-6d65e4cd6db3"],
 " is a ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"\[CapitalMu]", "+", "1"}], ")"}], TraditionalForm]],
  ExpressionUUID->"be18f1f6-fa19-4618-85e4-a7b0798c19b0"],
 "-dimensional column vector of the powers of the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]],ExpressionUUID->
  "a695a214-da64-4bf6-9e54-8c1109d67926"],
 " input ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "n"], TraditionalForm]],ExpressionUUID->
  "a592915b-b190-4cca-a80f-fa0eb5f0f7b6"],
 ". These powers are the basis functions of a polynomial model for the curve. \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Phi]", "\[ThinSpace]", "(", 
    SubscriptBox["x", "n"], ")"}], TraditionalForm]],ExpressionUUID->
  "c73c1dda-88c8-44a2-92c1-fc534674e49f"],
 " is the dual (transpose) of one row of our partials matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "711ac6f0-8e88-49d6-896e-5df4757ff9bf"],
 ". \n\nAs written, Bishop\[CloseCurlyQuote]s equations are non-recurrent, \
requiring all data ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "n"], TraditionalForm]],ExpressionUUID->
  "8c93d51c-82cf-4849-9217-6ca946a75539"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Phi]", "\[ThinSpace]", "(", 
    SubscriptBox["x", "n"], ")"}], TraditionalForm]],ExpressionUUID->
  "a73423ff-d81a-49db-8ce5-8bf4b609f34c"],
 " in memory. Plus, as written, they require inverting matrix ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],ExpressionUUID->
  "883351be-2cb8-44c7-a551-6e0d6beceae2"],
 ". They thus suffer from the operational ills of the normal equations. "
}], "Text",
 CellChangeTimes->{{3.727972933675117*^9, 3.727973078876171*^9}, {
   3.7279731471152554`*^9, 3.727973158916931*^9}, {3.727973221836879*^9, 
   3.727973225832409*^9}, {3.727973303634624*^9, 3.727973419552944*^9}, {
   3.72797356270901*^9, 3.727973628849347*^9}, {3.72797366287252*^9, 
   3.727973666796633*^9}, {3.727974021159554*^9, 3.727974048392016*^9}, {
   3.7279742261495733`*^9, 3.727974272673163*^9}, {3.7279743703033*^9, 
   3.727974393755924*^9}, {3.7279744457003307`*^9, 3.7279744754841213`*^9}, {
   3.7279909913943167`*^9, 3.7279910540283127`*^9}, {3.727992083686421*^9, 
   3.7279920838762627`*^9}, {3.7279924628991203`*^9, 3.727992516567472*^9}, {
   3.728034977126224*^9, 3.7280350056809273`*^9}, {3.7280848433291597`*^9, 
   3.728084865045436*^9}, {3.728084911051063*^9, 3.7280851520750723`*^9}, {
   3.7281700673790197`*^9, 3.728170114044112*^9}, {3.72817017243155*^9, 
   3.728170228710331*^9}, {3.728220150909762*^9, 3.728220256483842*^9}, {
   3.72822645762605*^9, 3.728226489609394*^9}, {3.728252404072995*^9, 
   3.728252407743845*^9}, {3.729031135725021*^9, 3.7290311504327307`*^9}, {
   3.729031182197022*^9, 3.729031247473465*^9}, {3.729118895789219*^9, 
   3.7291189027722054`*^9}, {3.7291191791553907`*^9, 3.729119179167945*^9}, {
   3.7291712705279293`*^9, 3.729171273095373*^9}, {3.7291716361016483`*^9, 
   3.729171713599073*^9}, {3.7291749543161783`*^9, 3.729174983647272*^9}, 
   3.7291828972165833`*^9, {3.729798784388638*^9, 
   3.7297987849222937`*^9}},ExpressionUUID->"437f3f51-3f90-4c54-ba24-\
046eb7577083"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\[Phi]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Phi]", "[", "\[CapitalMu]_", "]"}], "[", "xn_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Quiet", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       SuperscriptBox["xn", "i"], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "\[CapitalMu]"}], "}"}]}], "]"}]}], "/.", 
    
    RowBox[{"{", 
     RowBox[{"Indeterminate", "\[Rule]", "1"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", 
  RowBox[{
   RowBox[{"\[Phi]", "[", "3", "]"}], "/@", 
   RowBox[{"List", "/@", 
    RowBox[{
    "bts", "\[LeftDoubleBracket]", "1", 
     "\[RightDoubleBracket]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.727973167925046*^9, 3.7279732069191923`*^9}, {
   3.727973258420764*^9, 3.727973267473878*^9}, {3.727973429851573*^9, 
   3.727973456984548*^9}, {3.7279735073990107`*^9, 3.727973544918976*^9}, {
   3.727973599459084*^9, 3.727973603790498*^9}, {3.7279736372428493`*^9, 
   3.727973649545477*^9}, {3.72797372689071*^9, 3.7279737331067553`*^9}, {
   3.727973816644998*^9, 3.7279738168679523`*^9}, {3.72797400882194*^9, 
   3.7279740141305532`*^9}, {3.727974059584772*^9, 3.727974079989175*^9}, {
   3.727974139169652*^9, 3.727974144037814*^9}, {3.727974283500222*^9, 
   3.727974357586182*^9}, {3.7279743965807533`*^9, 3.727974431722498*^9}, {
   3.727974493179165*^9, 3.7279747668644867`*^9}, {3.727989252021517*^9, 
   3.727989259286603*^9}, {3.7279894297361*^9, 3.727989457309639*^9}, {
   3.72799130695959*^9, 3.727991323954713*^9}, {3.7279914092481813`*^9, 
   3.727991418823888*^9}, {3.727992110982379*^9, 3.727992136250567*^9}, 
   3.727992510695593*^9, 3.727993474811754*^9, 3.729175642856516*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"d142c329-5ece-4948-9cd1-0eafa77f0363"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1"},
       {"0.`"},
       {"0.`"},
       {"0.`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.`"},
       {"0.1111111111111111`"},
       {"0.012345679012345678`"},
       {"0.0013717421124828531`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.`"},
       {"0.2222222222222222`"},
       {"0.04938271604938271`"},
       {"0.010973936899862825`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.`"},
       {"0.3333333333333333`"},
       {"0.1111111111111111`"},
       {"0.037037037037037035`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.`"},
       {"0.4444444444444444`"},
       {"0.19753086419753085`"},
       {"0.0877914951989026`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.`"},
       {"0.5555555555555556`"},
       {"0.308641975308642`"},
       {"0.1714677640603567`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.`"},
       {"0.6666666666666666`"},
       {"0.4444444444444444`"},
       {"0.2962962962962963`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.`"},
       {"0.7777777777777777`"},
       {"0.6049382716049381`"},
       {"0.4705075445816184`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.`"},
       {"0.8888888888888888`"},
       {"0.7901234567901234`"},
       {"0.7023319615912208`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.`"},
       {"1.`"},
       {"1.`"},
       {"1.`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.72797476735454*^9, {3.727989442724881*^9, 3.7279894588380623`*^9}, {
   3.727991319054626*^9, 3.727991333268414*^9}, {3.727992119104147*^9, 
   3.727992136593679*^9}, 3.727992528933445*^9, 3.727993509509782*^9, 
   3.728044352739295*^9, 3.7280464487735233`*^9, 3.728066471393063*^9, 
   3.728068121686639*^9, 3.728083785006975*^9, 3.7280907429940033`*^9, 
   3.728169446568424*^9, 3.728169541724071*^9, 3.728169824254798*^9, 
   3.728169884294923*^9, 3.7282529567610817`*^9, 3.7289462573501*^9, 
   3.729022900837743*^9, 3.729119979791541*^9, 3.729121073594092*^9, 
   3.729121112049911*^9, 3.7291723088762493`*^9, 3.729175691909602*^9, 
   3.729175898527714*^9, 3.729183413214457*^9, {3.72918344855357*^9, 
   3.729183461458799*^9}, 3.7292559391231413`*^9, 3.729552302640155*^9, 
   3.7295578767316313`*^9, 3.729629839331705*^9, 3.729634637380622*^9, 
   3.7296428734670143`*^9, 3.729642909800926*^9, 3.7296439400116787`*^9, 
   3.729647186226632*^9, 3.729683245991271*^9, 3.72977817757222*^9, 
   3.7297792343175077`*^9, 3.729779281386825*^9, 3.7298947010192213`*^9, 
   3.7298960068269453`*^9, 3.729896153792561*^9, 3.729897296568533*^9, 
   3.730140356048112*^9, 3.730240272837371*^9, 3.730380092251895*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"bd6ba7b9-225d-428b-82a9-c6dd457094a1"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["S Inverse", "Subsection",
 CellChangeTimes->{{3.7282461813905153`*^9, 
  3.728246183677311*^9}},ExpressionUUID->"148c0c4e-ef5b-4b4e-8401-\
4b6d7028be67"],

Cell["Bishop\[CloseCurlyQuote]s equation 1.72.", "Text",
 CellChangeTimes->{{3.727973854544991*^9, 3.727973958387879*^9}, {
  3.7279935391781883`*^9, 3.7279935616792603`*^9}, {3.7281702480246696`*^9, 
  3.7281702828359957`*^9}, {3.7291717549435673`*^9, 3.729171756365779*^9}, {
  3.729173508646914*^9, 
  3.7291735382601423`*^9}},ExpressionUUID->"464727e5-9688-47e4-9fa8-\
a4a6e39e29ee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"sInv", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sInv", "[", 
    RowBox[{"\[Alpha]_", ",", "\[Beta]_", ",", "cs_", ",", "\[CapitalMu]_"}], 
    "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalNu]", "=", 
       RowBox[{"Length", "[", "cs", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"IdentityMatrix", "[", 
        RowBox[{"\[CapitalMu]", "+", "1"}], "]"}]}], "+", 
      RowBox[{"\[Beta]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "cs", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ".", 
          RowBox[{
           RowBox[{
           "cs", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
           "\[Transpose]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "\[CapitalNu]"}], "}"}]}], "]"}]}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.727973884729273*^9, 3.727973893707472*^9}, {
   3.727973967319463*^9, 3.727973981031104*^9}, {3.727974108227893*^9, 
   3.72797411197365*^9}, {3.7279741548510723`*^9, 3.72797416892636*^9}, {
   3.7279748009815598`*^9, 3.727974944132066*^9}, {3.727974978991621*^9, 
   3.727975013741935*^9}, {3.727975044573173*^9, 3.727975082061253*^9}, {
   3.727975179449038*^9, 3.727975183788499*^9}, {3.727989511270849*^9, 
   3.727989517784666*^9}, {3.7279913069753647`*^9, 3.727991306982168*^9}, {
   3.727991851964892*^9, 3.727992057554862*^9}, {3.727992211691082*^9, 
   3.7279923598616533`*^9}, 3.728035965335248*^9, {3.72917351493624*^9, 
   3.729173515353211*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"22e779bc-5922-4e43-8ecc-e696f6ce8c12"]
}, Closed]],

Cell[CellGroupData[{

Cell["MAP Mean", "Subsection",
 CellChangeTimes->{{3.7282462270238667`*^9, 
  3.7282462292069902`*^9}},ExpressionUUID->"e34b4a76-5e00-4f52-8590-\
379e5e10ffc3"],

Cell["Bishop\[CloseCurlyQuote]s equation 1.70.", "Text",
 CellChangeTimes->{{3.7279935722104673`*^9, 3.727993577636578*^9}, {
   3.728252554798936*^9, 3.728252645286251*^9}, {3.729171771786726*^9, 
   3.72917177432257*^9}, 
   3.729182916782524*^9},ExpressionUUID->"a23e953c-2e55-4aa9-96de-\
83ec96d542c5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "mapMean", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mapMean", "[", 
    RowBox[{
    "\[Alpha]_", ",", "\[Beta]_", ",", "x_", ",", "cs_", ",", "ts_", ",", 
     "\[CapitalMu]_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalNu]", "=", 
        RowBox[{"Length", "@", "cs"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Beta]", "*", 
         RowBox[{
          RowBox[{"\[Phi]", "[", "\[CapitalMu]", "]"}], "[", "x", "]"}]}], 
        "}"}], ".", 
       RowBox[{"(*", " ", 
        RowBox[{"row", " ", "of", " ", "partials"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"LinearSolve", "[", 
        RowBox[{"(*", " ", 
         RowBox[{"vector", " ", "of", " ", "coefficients"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"sInv", "[", 
          RowBox[{
          "\[Alpha]", ",", "\[Beta]", ",", "cs", ",", "\[CapitalMu]"}], "]"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"ts", ".", "cs"}]}], "]"}]}]}], "]"}], 
    "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.727989096190207*^9, 3.727989111607684*^9}, {
   3.727989185580763*^9, 3.7279892393755693`*^9}, {3.72798955173129*^9, 
   3.727989594075267*^9}, {3.727989624561162*^9, 3.7279897672865*^9}, 
   3.727990207781111*^9, {3.7279902406039467`*^9, 3.727990276509069*^9}, {
   3.727990432145055*^9, 3.727990545195623*^9}, {3.72799130699829*^9, 
   3.727991307005333*^9}, {3.727991591768076*^9, 3.727991609737764*^9}, {
   3.727991645183196*^9, 3.72799166420612*^9}, {3.727992608834428*^9, 
   3.727992654156641*^9}, {3.7279927039199*^9, 3.7279927175692453`*^9}, {
   3.7279930333670883`*^9, 3.727993080952739*^9}, {3.727993138537717*^9, 
   3.727993147323758*^9}, {3.727993213160774*^9, 3.727993217820777*^9}, 
   3.728035955225011*^9, {3.7282262295415688`*^9, 3.728226243962159*^9}, {
   3.728226290221162*^9, 3.728226420069693*^9}, {3.728226502066142*^9, 
   3.728226526171074*^9}, {3.7282265682957487`*^9, 3.728226638371058*^9}, {
   3.728227010234784*^9, 3.7282270232238007`*^9}, {3.728245933205378*^9, 
   3.728245936365489*^9}, {3.7282459778757668`*^9, 3.728246022965337*^9}, {
   3.7282460585043507`*^9, 3.728246102733577*^9}, {3.7282462526429663`*^9, 
   3.728246318744425*^9}, {3.7282463492129383`*^9, 3.7282463559800463`*^9}, {
   3.728246442446768*^9, 3.728246466102882*^9}, {3.728246507569501*^9, 
   3.728246536388625*^9}, {3.728246579393989*^9, 3.7282466681208487`*^9}, {
   3.728247344958013*^9, 3.728247355611513*^9}, {3.7282474213422194`*^9, 
   3.728247422795175*^9}, {3.728247471143052*^9, 3.7282474904691353`*^9}, {
   3.728247907660754*^9, 3.7282479741618853`*^9}, {3.728248056332654*^9, 
   3.728248134124445*^9}, {3.728248164455634*^9, 3.7282481746776342`*^9}, 
   3.728248206633081*^9, {3.7282482403818007`*^9, 3.728248407583012*^9}, {
   3.728248438362019*^9, 3.72824858749609*^9}, {3.728248829569028*^9, 
   3.728249068639111*^9}, {3.728249133978136*^9, 3.7282492510926323`*^9}, 
   3.7282530152093763`*^9, {3.7282530485877857`*^9, 3.7282530512187223`*^9}, {
   3.72825308467808*^9, 3.7282531487824993`*^9}, {3.728253205404887*^9, 
   3.728253436301762*^9}, {3.72830462816504*^9, 3.7283050236694736`*^9}, {
   3.729177176419301*^9, 3.729177182963616*^9}, {3.729177255620264*^9, 
   3.729177269247582*^9}, 3.729177430853569*^9, {3.729177461134405*^9, 
   3.729177625835404*^9}, {3.7291776788725452`*^9, 3.729177737476037*^9}, {
   3.729177797007773*^9, 3.7291777980048656`*^9}, {3.7291783630299997`*^9, 
   3.72917836685954*^9}, {3.729179191155795*^9, 3.729179191813648*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"9fc998df-b844-4c4d-8b20-4682c622b1d0"]
}, Closed]],

Cell[CellGroupData[{

Cell["A-Priori Variances \[Alpha] and \[Beta]", "Subsection",
 CellChangeTimes->{{3.729433856658804*^9, 3.7294338622133093`*^9}, {
  3.7296329364064617`*^9, 3.729632937814076*^9}, {3.7297178930877743`*^9, 
  3.729717894821443*^9}, {3.729792663995645*^9, 
  3.7297926706425962`*^9}},ExpressionUUID->"0e07c3a2-874e-408d-9286-\
9356269c9864"],

Cell[TextData[{
 "Bishop defines ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "=", 
    RowBox[{"1", "/", 
     SubsuperscriptBox["\[Sigma]", "\[Zeta]", "2"]}]}], TraditionalForm]],
  ExpressionUUID->"3cb59500-197e-4c4e-ac9f-4d98e4a2a78f"],
 ", where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "\[Zeta]"], TraditionalForm]],ExpressionUUID->
  "4effa52e-3332-40b9-89db-fd17665a3169"],
 " is the standard deviation, from the model, of the prediction ",
 Cell[BoxData[
  FormBox["\[Zeta]", TraditionalForm]],ExpressionUUID->
  "d2430b71-8a16-463d-b08f-b4d69197671a"],
 ". The prediction ",
 Cell[BoxData[
  FormBox["\[Zeta]", TraditionalForm]],ExpressionUUID->
  "b4d5173e-78b5-4555-ba3f-38a350e58db3"],
 " is the value of the model on an arbitrary input ",
 Cell[BoxData[
  FormBox["\[Xi]", TraditionalForm]],ExpressionUUID->
  "c0efd558-47a6-464c-8219-11b4b7c12c31"],
 ". Similarly, Bishop defines ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "=", 
    RowBox[{"1", "/", 
     SubsuperscriptBox["\[Sigma]", "\[Xi]", "2"]}]}], TraditionalForm]],
  ExpressionUUID->"da801590-9053-4510-8f2d-61ce312277e8"],
 ", where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "\[Xi]"], TraditionalForm]],ExpressionUUID->
  "c3e1a099-1dc9-4e14-9310-78cf5ec0e7cf"],
 " is the standard deviation of the a-priori distribution of the unknown \
parameter estimate ",
 Cell[BoxData[
  FormBox["\[Xi]", TraditionalForm]],ExpressionUUID->
  "4cbca5ac-87c6-4cca-bb56-d89b90a797bf"],
 ". \n\nWe observe, numerically, that Bishop\[CloseCurlyQuote]s equations \
match RLS and KAL when ",
 Cell[BoxData[
  FormBox["\[Beta]", TraditionalForm]],ExpressionUUID->
  "79f416eb-30c7-45b8-8f29-c6b700475cbc"],
 " is ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Sigma]", "\[Xi]", "2"], TraditionalForm]],
  ExpressionUUID->"4b490b01-f5f1-4c8b-a825-4654e9f817cb"],
 " and when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "=", 
    SubsuperscriptBox["\[Sigma]", "\[Zeta]", "2"]}], TraditionalForm]],
  ExpressionUUID->"45fbcfcb-989e-462b-9f48-4d6edb33b0b7"],
 ". We leave full proof to another paper, being satisfied with numerical \
evidence here. \n\nSemi-numerically, the proposition is true (above order 4, \
The following becomes taxing for Mathematica):"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQHTp1TkzIydeOnH/eZoJob69/+SBaQNSkGUTXvurv
BNHPsqO7QPS8e/mLQXTTc8nVILr37431IFpqX98REH1L/lB2D5Depm+XA6JD
rjkVg+h9jtfLQTRP+vUzW4G0xqXXZ0H0gdrvN+4A6ZKQrMcguuDmi+cguqLg
1xsQ7bL5bsh9IP1F2CIURHM6zykD0Zvc5pWD6ANeK5tAtAtHXwuINni4++wf
IL3ISOsRiE5SUYv8B6QtZy5IBNENH5p7QPSfyx0TQHTC1NLK/yDze25Vg+iu
q9a9zKdeOz65KjMDRD9SMpwLoqccaVsIog3uRF4F0X9yFG6D6Ndh5Q9BtMWz
qicgOuKo2XU2IF0UbwOmAdt+z8w=
  
  "],ExpressionUUID->"8347131a-ee49-43f7-863e-d937b7676dfd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"x", ",", "\[Alpha]", ",", "\[Beta]", ",", "chopQ"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"chopQ", "=", "False"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"cs", "=", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "\[CapitalMu]", "]"}], "/@", 
           RowBox[{"List", "/@", 
            RowBox[{
            "bts", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}]}]}], ",", 
         RowBox[{"ts", "=", 
          RowBox[{
          "bts", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{"chopQ", ",", "Chop", ",", "Identity"}], "]"}], "@", 
        RowBox[{"FullSimplify", "[", 
         RowBox[{
          RowBox[{"mapMean", "[", 
           RowBox[{
           "\[Alpha]", ",", "\[Beta]", ",", "x", ",", "cs", ",", "ts", ",", 
            "\[CapitalMu]"}], "]"}], "-", 
          RowBox[{"mapMean", "[", 
           RowBox[{
            FractionBox["1", "\[Beta]"], ",", 
            FractionBox["1", "\[Alpha]"], ",", "x", ",", "cs", ",", "ts", ",",
             "\[CapitalMu]"}], "]"}]}], "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Column", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Button", "[", 
            RowBox[{"\"\<UN-CHOP\>\"", ",", 
             RowBox[{"chopQ", "=", "False"}]}], "]"}], ",", 
           "\"\<        \>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<CHOP\>\"", ",", 
             RowBox[{"chopQ", "=", "True"}]}], "]"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\[CapitalMu]", ",", "2", ",", "\"\<order \[CapitalMu]\>\""}], 
            "}"}], ",", "0", ",", "4", ",", "1", ",", 
           RowBox[{"Appearance", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<Open\>\"", ",", "\"\<Labeled\>\""}], "}"}]}]}], 
          "}"}], "]"}]}], "}"}], "]"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.727884681931381*^9, 3.7278848244947367`*^9}, 
   3.727884861217602*^9, {3.727884975910451*^9, 3.7278849940673532`*^9}, {
   3.727885103521431*^9, 3.727885154698123*^9}, {3.72788520225443*^9, 
   3.727885279820177*^9}, {3.727885496115718*^9, 3.727885517688189*^9}, {
   3.72788559395383*^9, 3.727885598972475*^9}, {3.7278856296542664`*^9, 
   3.727885630876935*^9}, {3.727885695972756*^9, 3.727885696864628*^9}, {
   3.727886633660364*^9, 3.72788671287046*^9}, {3.727886975364171*^9, 
   3.727886975439041*^9}, {3.727903476653379*^9, 3.7279034819231358`*^9}, {
   3.727903531862627*^9, 3.727903539245574*^9}, 3.727913149489944*^9, {
   3.727915429732944*^9, 3.7279154437948627`*^9}, {3.727915750998211*^9, 
   3.7279158447033873`*^9}, {3.7279213832695303`*^9, 3.72792149154887*^9}, {
   3.727921523149373*^9, 3.72792161270367*^9}, {3.72792165300301*^9, 
   3.727921654632832*^9}, {3.727921753282296*^9, 3.727921753360197*^9}, {
   3.727924008558401*^9, 3.727924045018003*^9}, {3.727924293814445*^9, 
   3.727924370827516*^9}, 3.727965590613636*^9, {3.7279686551525917`*^9, 
   3.727968670349081*^9}, {3.7279689406605043`*^9, 3.727969019631563*^9}, {
   3.727970883056108*^9, 3.727970945128386*^9}, {3.727971005813472*^9, 
   3.727971023734253*^9}, {3.727990640753121*^9, 3.727990674786282*^9}, {
   3.727990711779483*^9, 3.727990808626033*^9}, {3.727991307012423*^9, 
   3.727991307022031*^9}, {3.7279932412769613`*^9, 3.7279932949280367`*^9}, {
   3.7279933910397243`*^9, 3.727993398358789*^9}, {3.727993778490755*^9, 
   3.72799379332897*^9}, {3.727993826040863*^9, 3.7279938751552763`*^9}, {
   3.727993956673335*^9, 3.727993958184173*^9}, 3.727994128012043*^9, {
   3.7280354067714148`*^9, 3.7280354258611927`*^9}, {3.728035634299762*^9, 
   3.728035732029833*^9}, {3.72803585641748*^9, 3.728035906176405*^9}, {
   3.728038924314391*^9, 3.728039041653799*^9}, {3.728039077026232*^9, 
   3.72803913265169*^9}, {3.728039194847865*^9, 3.728039320044661*^9}, {
   3.728044256958378*^9, 3.728044343151896*^9}, {3.728044393583234*^9, 
   3.728044466540698*^9}, 3.7280447095836163`*^9, {3.728044856722988*^9, 
   3.728044959527645*^9}, {3.728044995179022*^9, 3.728044998104682*^9}, {
   3.728045028753289*^9, 3.728045063548128*^9}, {3.728045464570526*^9, 
   3.728045476328084*^9}, {3.728045812340419*^9, 3.728045836978776*^9}, {
   3.7280461335391397`*^9, 3.728046355530389*^9}, {3.728046392282709*^9, 
   3.728046397281275*^9}, {3.728046429888109*^9, 3.728046434285967*^9}, {
   3.728046509047914*^9, 3.728046577986915*^9}, {3.728048625582951*^9, 
   3.728048658147644*^9}, {3.728048704639155*^9, 3.7280487209829884`*^9}, {
   3.728048763333255*^9, 3.728048783520523*^9}, 3.728048849900649*^9, {
   3.728048881350296*^9, 3.7280488887365723`*^9}, {3.7280489358794527`*^9, 
   3.728048947834031*^9}, {3.7280492952517767`*^9, 3.728049427179392*^9}, {
   3.728049506853256*^9, 3.7280496162697783`*^9}, {3.728050015065921*^9, 
   3.7280500376507397`*^9}, {3.7280500733077374`*^9, 
   3.7280501005796213`*^9}, {3.728089881496944*^9, 3.728089882038129*^9}, {
   3.728090725835964*^9, 3.728090725845487*^9}, {3.728169349750301*^9, 
   3.728169349773612*^9}, {3.728169400997793*^9, 3.728169417906619*^9}, {
   3.728169511798567*^9, 3.728169523731205*^9}, {3.7281696125541363`*^9, 
   3.7281696306368437`*^9}, 3.728226727530678*^9, {3.728226810131266*^9, 
   3.728226816018466*^9}, {3.728226857072884*^9, 3.728226861119492*^9}, 
   3.728245946305786*^9, {3.7282487072286263`*^9, 3.728248709889584*^9}, {
   3.728251170478485*^9, 3.728251170709284*^9}, {3.7282526609079533`*^9, 
   3.728252718943617*^9}, 3.728252776351699*^9, {3.728252825506783*^9, 
   3.7282528275522842`*^9}, {3.7282528645183697`*^9, 3.728252865147182*^9}, 
   3.7282539826691*^9, {3.7291194284711437`*^9, 3.729119493281761*^9}, {
   3.7291195510227203`*^9, 3.729119680314639*^9}, {3.729119849724024*^9, 
   3.7291198585722113`*^9}, {3.7291717881457*^9, 3.729171818317573*^9}, {
   3.729171854440769*^9, 3.729171871385407*^9}, {3.72917192869256*^9, 
   3.7291720371346607`*^9}, {3.729173126976542*^9, 3.729173139435835*^9}, {
   3.729173200255974*^9, 3.729173275110746*^9}, {3.7291733458987417`*^9, 
   3.729173346264063*^9}, {3.729173389656439*^9, 3.729173389676496*^9}, {
   3.729173453362727*^9, 3.729173453374463*^9}, {3.72917500863538*^9, 
   3.729175053102626*^9}, {3.729175506297736*^9, 3.72917551618956*^9}, {
   3.729175643623238*^9, 3.729175648090048*^9}, {3.729176146733549*^9, 
   3.729176146742311*^9}, {3.729178985302376*^9, 3.729179018757811*^9}, {
   3.729179428316293*^9, 3.729179429546385*^9}, {3.729183394535775*^9, 
   3.729183394547886*^9}, {3.729190274999607*^9, 3.72919028248487*^9}, {
   3.729195946539386*^9, 3.729195963662328*^9}, {3.729256050052142*^9, 
   3.729256067693101*^9}, {3.729551202293354*^9, 3.7295512309957952`*^9}, {
   3.7296339987183323`*^9, 3.7296340585670023`*^9}, {3.72963414997302*^9, 
   3.7296342843671503`*^9}, {3.729634402705227*^9, 3.729634445056549*^9}, {
   3.729640374024897*^9, 3.7296403796236258`*^9}, {3.729640414581646*^9, 
   3.729640440813695*^9}, {3.729682825170733*^9, 3.729682850158277*^9}, {
   3.729687964822157*^9, 3.729687976272668*^9}, {3.729688124350306*^9, 
   3.729688350523089*^9}, {3.729688433189711*^9, 3.729688519693812*^9}, {
   3.7296888315942287`*^9, 3.729688853951269*^9}, {3.729688885214087*^9, 
   3.729688980761574*^9}, {3.729689047339793*^9, 3.72968904899368*^9}, {
   3.729689085039751*^9, 3.729689088321394*^9}, {3.729689126691318*^9, 
   3.729689162680344*^9}, {3.729689199269363*^9, 3.729689319536848*^9}, {
   3.7296894525051317`*^9, 3.7296895044680653`*^9}, {3.7296895377540073`*^9, 
   3.729689925517149*^9}, {3.729698780575644*^9, 3.7296988032889967`*^9}, {
   3.72969891708257*^9, 3.729698973930211*^9}, {3.729699028638085*^9, 
   3.729699670715773*^9}, {3.729699704631276*^9, 3.7296997129720783`*^9}, {
   3.729706992747849*^9, 3.729707001634725*^9}, {3.7297070524424753`*^9, 
   3.729707066383106*^9}, {3.7297071244821672`*^9, 3.729707137919736*^9}, {
   3.729707203038928*^9, 3.72970729917104*^9}, {3.729707646971855*^9, 
   3.729707660202389*^9}, {3.7297079419830017`*^9, 3.72970797164758*^9}, {
   3.729708009957337*^9, 3.729708049867004*^9}, {3.729708084939846*^9, 
   3.7297080920715303`*^9}, {3.729708515163211*^9, 3.729708569024414*^9}, {
   3.729708613027947*^9, 3.729708623070286*^9}, {3.729708794113842*^9, 
   3.729708805535737*^9}, {3.729710516671919*^9, 3.7297105167550173`*^9}, {
   3.729715343638529*^9, 3.729715514668886*^9}, {3.72971554649118*^9, 
   3.729715548641029*^9}, {3.729716174415708*^9, 3.7297162284181137`*^9}, {
   3.72971633922969*^9, 3.729716391073391*^9}, {3.729716434095726*^9, 
   3.7297164499844*^9}, {3.72971649749555*^9, 3.7297165316584883`*^9}, {
   3.7297165626756287`*^9, 3.72971664507301*^9}, 3.7297169348805857`*^9, {
   3.729717614590805*^9, 3.72971765727661*^9}, {3.729717764117723*^9, 
   3.729717812221105*^9}, {3.729775043049199*^9, 3.729775109731035*^9}, {
   3.729775163059536*^9, 3.7297751691054783`*^9}, {3.7297752542857*^9, 
   3.729775353153812*^9}, {3.729775426509468*^9, 3.729775439298881*^9}, {
   3.729775501959437*^9, 3.729775509498376*^9}, {3.7297756788539267`*^9, 
   3.729775889524164*^9}, {3.729775998285616*^9, 3.7297760435753508`*^9}, {
   3.729776079463018*^9, 3.72977609036007*^9}, {3.729782135519264*^9, 
   3.729782210852579*^9}, {3.7297822445658417`*^9, 3.729782365608235*^9}, {
   3.729782395984023*^9, 3.7297824531580763`*^9}, {3.729782495606496*^9, 
   3.729782567276868*^9}, {3.729782598609139*^9, 3.729782697457747*^9}, {
   3.729782728227727*^9, 3.7297827325418167`*^9}, {3.729782956333859*^9, 
   3.729782990916945*^9}, {3.7297830295719624`*^9, 3.7297830711784143`*^9}, {
   3.729783101922255*^9, 3.7297831604734583`*^9}, {3.729783202732057*^9, 
   3.7297832061980753`*^9}, {3.729783273985505*^9, 3.729783295285995*^9}, {
   3.729792821533854*^9, 3.7297928677603407`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"880e6f2e-2c72-44a8-8609-320d22162534"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`chopQ$$ = False}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`\[CapitalMu]$$ = 2, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{{
        Hold[$CellContext`\[CapitalMu]$$], 2, "order \[CapitalMu]"}, 0, 4, 
       1}, {
       Hold[
        Column[{
          Row[{
            Button["UN-CHOP", $CellContext`chopQ$$ = False], "        ", 
            Button["CHOP", $CellContext`chopQ$$ = True]}], 
          Manipulate`Place[1]}]], Manipulate`Dump`ThisIsNotAControl}}, 
     Typeset`size$$ = {790.25, {93.69677734375, 16.}}, Typeset`update$$ = 0, 
     Typeset`initDone$$, Typeset`skipInitDone$$ = 
     True, $CellContext`\[CapitalMu]$2766$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      2, StandardForm, "Variables" :> {$CellContext`\[CapitalMu]$$ = 2}, 
       "ControllerVariables" :> {
         Hold[$CellContext`\[CapitalMu]$$, $CellContext`\[CapitalMu]$2766$$, 
          0]}, "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
       With[{$CellContext`cs$ = Map[
            $CellContext`\[Phi][$CellContext`\[CapitalMu]$$], 
            Map[List, 
             Part[$CellContext`bts, 1]]], $CellContext`ts$ = 
          Part[$CellContext`bts, 2]}, 
         If[$CellContext`chopQ$$, Chop, Identity][
          
          FullSimplify[$CellContext`mapMean[$CellContext`\[Alpha], \
$CellContext`\[Beta], $CellContext`x, $CellContext`cs$, $CellContext`ts$, \
$CellContext`\[CapitalMu]$$] - $CellContext`mapMean[
           1/$CellContext`\[Beta], 
            1/$CellContext`\[Alpha], $CellContext`x, $CellContext`cs$, \
$CellContext`ts$, $CellContext`\[CapitalMu]$$]]]], 
       "Specifications" :> {{{$CellContext`\[CapitalMu]$$, 2, 
           "order \[CapitalMu]"}, 0, 4, 1, Appearance -> {"Open", "Labeled"}, 
          ControlPlacement -> 1}, 
         Column[{
           Row[{
             Button["UN-CHOP", $CellContext`chopQ$$ = False], "        ", 
             Button["CHOP", $CellContext`chopQ$$ = True]}], 
           Manipulate`Place[1]}]}, "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{846., {142., 149.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.7297782657737503`*^9, 3.729779234914673*^9, 3.729779309463353*^9, 
   3.729782169097911*^9, 3.729782212385736*^9, 3.729782264223064*^9, {
   3.729782321149456*^9, 3.729782334713049*^9}, {3.729782366911766*^9, 
   3.729782409837133*^9}, 3.729782456605835*^9, 3.729782570409789*^9, {
   3.729782606279397*^9, 3.729782640383834*^9}, {3.729782699444137*^9, 
   3.729782733551096*^9}, {3.7297829709597683`*^9, 3.729782991922044*^9}, {
   3.729783051941214*^9, 3.729783072104805*^9}, {3.729783103752767*^9, 
   3.729783162251648*^9}, 3.72978321464939*^9, 3.729783296029469*^9, {
   3.729792849257351*^9, 3.729792868783079*^9}, 3.7298947011281157`*^9, 
   3.729896006909101*^9, 3.729896153898386*^9, 3.729897296669344*^9, 
   3.73014035613733*^9, 3.730240272921041*^9, 3.7303800923497267`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"b07364be-9ea8-4758-a6a7-fe4998b9c776"]
}, Open  ]],

Cell[TextData[{
 "The other two combinations, where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", 
       SubsuperscriptBox["\[Sigma]", "\[Zeta]", "2"]}], " ", "\[Wedge]", " ", 
      "\[Alpha]"}], "=", 
     SubsuperscriptBox["\[Sigma]", "\[Zeta]", "2"]}]}], TraditionalForm]],
  ExpressionUUID->"3c8c5deb-108d-43ab-9803-c6eeaa41be5a"],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "=", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Sigma]", "\[Xi]", "2"], " ", "\[Wedge]", " ", 
      "\[Alpha]"}], "=", 
     RowBox[{"1", "/", 
      SubsuperscriptBox["\[Sigma]", "\[Xi]", "2"]}]}]}], TraditionalForm]],
  ExpressionUUID->"091d4ea1-9899-4f40-8494-d4a5560376dc"],
 " are not correct. Intuitively, these two combinations do not contain full \
information about the a-priori beliefs in both ",
 Cell[BoxData[
  FormBox["\[Zeta]", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "25c9f435-1258-4111-ae97-95819c0dc110"],
 " and ",
 Cell[BoxData[
  FormBox["\[Xi]", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "f2270d0c-8d5e-48db-beb9-f5b6e221e6c1"],
 ", so we do not expect them to be correct. This fact can be demonstrated \
numerically.\n\nIn the following demonstration, the numerical evidence for \
equality of the two applications of MAP becomes overwhelming. MAP, RLS, and \
KAL match for all settings of ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Sigma]", "\[Xi]", "2"], TraditionalForm]],
  ExpressionUUID->"43777bf0-347f-4339-a30b-caaca26375ea"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Sigma]", "\[Zeta]", "2"], TraditionalForm]],
  ExpressionUUID->"03f7d140-bb9e-4b49-a90c-93d03643da4e"],
 ", ",
 Cell[BoxData[
  FormBox["\[CapitalMu]", TraditionalForm]],ExpressionUUID->
  "4e14f357-6e1d-4562-a503-d8a33ad79b0d"],
 " (order of the model), and assignments of ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]],ExpressionUUID->
  "6d988ecb-a118-4856-94a5-c1b3425efc15"],
 " and ",
 Cell[BoxData[
  FormBox["\[Beta]", TraditionalForm]],ExpressionUUID->
  "f755a1b1-ab8a-4891-9c0e-de8f6f0c9f59"],
 ". The one deviation from perfect match concerns KAL. Explore the case where \
the order is around ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalMu]", "=", "4"}], TraditionalForm]],ExpressionUUID->
  "427b4264-a2e3-4974-a79b-bd1e22d45410"],
 ". For high ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Sigma]", "\[Xi]", "2"], TraditionalForm]],
  ExpressionUUID->"6138c40a-4c79-4f97-88b0-ea1e16441c42"],
 " (don\[CloseCurlyQuote]t believe the a-priori estimate of ",
 Cell[BoxData[
  FormBox["\[Xi]", TraditionalForm]],ExpressionUUID->
  "8ede57ef-973c-4114-bf65-08adc80e2d22"],
 ") and low ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Sigma]", "\[Zeta]z", "2"], TraditionalForm]],
  ExpressionUUID->"976c4626-4857-4fb0-9890-7e1c2c476242"],
 " (",
 StyleBox["do",
  FontSlant->"Italic"],
 " believe the observational data), KAL fluctuates wildly. Why? The Kalman \
denominator ",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", "=", 
    RowBox[{
     SubscriptBox["P", "\[Zeta]"], "+", 
     RowBox[{
      RowBox[{"a", "\[Transpose]"}], 
      SubscriptBox["P", "\[Xi]"], "a"}]}]}], TraditionalForm]],
  ExpressionUUID->"f370fac0-c8e6-480a-bb39-fa1c564318d6"],
 " becomes nearly ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "\[Transpose]"}], 
    SubscriptBox["P", "\[Xi]"], "a"}], TraditionalForm]],ExpressionUUID->
  "a6bc1f16-0b8a-4d78-b8ca-1ec54345ea34"],
 ". The Kalman gain, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"K", "=", 
    RowBox[{
     SubscriptBox["P", "\[Xi]"], " ", 
     RowBox[{"a", "\[Transpose]"}], 
     SuperscriptBox["D", 
      RowBox[{"-", "1"}]]}]}], TraditionalForm]],ExpressionUUID->
  "67d8e535-dd07-4789-8b7e-d765ef3ab24d"],
 " is nearly ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["a", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "bc26f308-cc73-4f74-99c5-b2cd9c9df669"],
 ". The covariance update, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"I", "-", 
      RowBox[{"K", " ", "a"}]}], ")"}], "\[CenterDot]", "P"}], 
   TraditionalForm]],ExpressionUUID->"507f8d85-dc1a-442b-8c74-d6548ac0649a"],
 ", becomes ill-conditioned, if not negative, because ",
 Cell[BoxData[
  FormBox[
   RowBox[{"K", " ", "a"}], TraditionalForm]],ExpressionUUID->
  "2f1be427-a6af-4e70-ba49-a962269a03ad"],
 " is near unity. \n\nRenormalized RLS does not suffer from these ills \
because it never subtracts. Renormalized RLS is still exposed to \
ill-conditioning of the information matrix, but that seems numerically to be \
less harmful to the final result. We wrap RLS in ",
 Cell[BoxData[
  FormBox["Quiet", TraditionalForm]], "Code",ExpressionUUID->
  "5bc2626d-10d1-4129-a6ff-b0cfb809366f"],
 " to suppress warnings. There is no free lunch; MAP also shows \
ill-conditioning and is similarly wrapped."
}], "Text",
 CellChangeTimes->{{3.729783790020461*^9, 3.729783833800892*^9}, {
  3.729792752988352*^9, 3.729792754474485*^9}, {3.72979292818992*^9, 
  3.729793090930941*^9}, {3.7297931436578207`*^9, 3.729793265017269*^9}, {
  3.729793300332588*^9, 3.729793320164184*^9}, {3.7297988561592207`*^9, 
  3.729798964992071*^9}},ExpressionUUID->"5fff4966-096a-44cc-ab3c-\
82d0767844e1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "rrlsFit", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"rrlsFit", "[", 
     RowBox[{"\[Sigma]2\[Zeta]_", ",", "\[Sigma]2\[Xi]_"}], "]"}], "[", 
    RowBox[{"\[CapitalMu]_", ",", "trainingSet_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"xs", "=", 
        RowBox[{
        "trainingSet", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], ",", 
       RowBox[{"ys", "=", 
        RowBox[{
        "trainingSet", "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Xi]0", "=", 
          RowBox[{"List", "/@", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"\[CapitalMu]", "+", "1"}]}], "]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\[CapitalLambda]0", "=", 
          RowBox[{
           SuperscriptBox["\[Sigma]2\[Xi]", 
            RowBox[{"-", "1"}]], "*", 
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"\[CapitalMu]", "+", "1"}], "]"}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Xi]", ",", "\[CapitalLambda]"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Xi]", ",", "\[CapitalLambda]"}], "}"}], "=", 
           RowBox[{"Fold", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"rlsUpdate", "[", 
              RowBox[{
               SqrtBox["\[Sigma]2\[Zeta]"], " ", 
               RowBox[{"IdentityMatrix", "[", "1", "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\[Xi]0", ",", "\[CapitalLambda]0"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"List", "/@", "ys"}], ",", 
                RowBox[{"List", "/@", 
                 RowBox[{"partialsFn", "[", 
                  RowBox[{"\[CapitalMu]", ",", "xs"}], "]"}]}]}], "}"}], 
              "\[Transpose]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Xi]", "/", 
             SqrtBox["\[Sigma]2\[Zeta]"]}], ",", "\[CapitalLambda]"}], 
           "}"}]}]}], "]"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.729633130001239*^9, {3.729633467830708*^9, 3.729633492149434*^9}, {
   3.7296337563259163`*^9, 3.729633881138937*^9}, {3.729634078099366*^9, 
   3.729634114632291*^9}, {3.729634488868413*^9, 3.729634543490809*^9}, {
   3.729634604318096*^9, 3.729634609788732*^9}, {3.729634698866778*^9, 
   3.7296346994928493`*^9}, {3.729634739708737*^9, 3.729634753142261*^9}, {
   3.729634799344757*^9, 3.7296347996478977`*^9}, {3.729634920657688*^9, 
   3.729634927950851*^9}, {3.729634993197016*^9, 3.729635007292894*^9}, {
   3.729640041813924*^9, 3.729640137924788*^9}, {3.72964025016105*^9, 
   3.729640319535129*^9}, {3.7296827987466717`*^9, 3.729682819296286*^9}, {
   3.729683287333426*^9, 3.729683287716338*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"88f5a1ae-eef7-4c06-a0db-0ec2d09b17e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Alpha]\[Beta]Bishop", "=", "True"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "x", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"terms", "=", 
            RowBox[{"symbolicPowers", "[", 
             RowBox[{"x", ",", "\[CapitalMu]"}], "]"}]}], ",", 
           RowBox[{"cs", "=", 
            RowBox[{
             RowBox[{"\[Phi]", "[", "\[CapitalMu]", "]"}], "/@", 
             RowBox[{"List", "/@", 
              RowBox[{
              "bts", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}]}]}]}], ",", 
           RowBox[{"ts", "=", 
            RowBox[{
            "bts", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           ",", 
           RowBox[{"\[Sigma]\[Zeta]2", "=", 
            SuperscriptBox["10.", 
             RowBox[{"2", "log\[Sigma]\[Zeta]"}]]}], ",", 
           RowBox[{"\[Sigma]\[Xi]2", "=", 
            SuperscriptBox["10.", 
             RowBox[{"2", "log\[Sigma]\[Xi]"}]]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"normal", "=", 
              RowBox[{"mleFit", "[", 
               RowBox[{"\[CapitalMu]", ",", "bts"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"kalman", "=", 
              RowBox[{
               RowBox[{"kalFit", "[", 
                RowBox[{"\[Sigma]\[Zeta]2", ",", "\[Sigma]\[Xi]2"}], "]"}], 
               "[", 
               RowBox[{"\[CapitalMu]", ",", "bts"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"rrls", "=", 
              RowBox[{"Quiet", "@", 
               RowBox[{
                RowBox[{"rrlsFit", "[", 
                 RowBox[{"\[Sigma]\[Zeta]2", ",", "\[Sigma]\[Xi]2"}], "]"}], 
                "[", 
                RowBox[{"\[CapitalMu]", ",", "bts"}], "]"}]}]}]}], "}"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Alpha]", "=", 
                RowBox[{"If", "[", 
                 RowBox[{"\[Alpha]\[Beta]Bishop", ",", 
                  FractionBox["1", "\[Sigma]\[Xi]2"], ",", 
                  "\[Sigma]\[Zeta]2"}], "]"}]}], ",", 
               RowBox[{"\[Beta]", "=", 
                RowBox[{"If", "[", 
                 RowBox[{"\[Alpha]\[Beta]Bishop", ",", 
                  FractionBox["1", "\[Sigma]\[Zeta]2"], ",", 
                  "\[Sigma]\[Xi]2"}], "]"}]}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mleFn", "=", 
                  RowBox[{"terms", ".", "normal"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"kalFn", "=", 
                  RowBox[{
                   RowBox[{"{", "terms", "}"}], ".", 
                   RowBox[{
                   "kalman", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"mapFn", "=", 
                  RowBox[{"Quiet", "@", 
                   RowBox[{"mapMean", "[", 
                    RowBox[{
                    "\[Alpha]", ",", "\[Beta]", ",", "x", ",", "cs", ",", 
                    "ts", ",", "\[CapitalMu]"}], "]"}]}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"rlsFn", "=", 
                  RowBox[{
                   RowBox[{"{", "terms", "}"}], ".", 
                   RowBox[{
                   "rrls", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"With", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"lp", "=", 
                   RowBox[{"ListPlot", "[", 
                    RowBox[{
                    RowBox[{"bts", "\[Transpose]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"PlotMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Graphics", "@", 
                    RowBox[{"{", 
                    RowBox[{"Blue", ",", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}], 
                    "}"}]}], ",", ".05"}], "}"}]}]}], "]"}]}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Module", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"showlist", "=", 
                    RowBox[{"{", 
                    RowBox[{"lp", ",", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{"2.", "\[Pi]", " ", "x"}], "]"}],
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0.", ",", "1."}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Thick", ",", 
                    StyleBox["Green",
                    Background->RGBColor[1, 1, 0]]}], "}"}]}]}], "]"}]}], 
                    "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"mleQ", ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"showlist", ",", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox["mleFn",
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    StyleBox["Orange",
                    Background->RGBColor[1, 1, 0]], "}"}]}]}], "]"}]}], 
                    "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{"rlsQ", ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"showlist", ",", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox["rlsFn",
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    StyleBox["Purple",
                    Background->RGBColor[1, 1, 0]], "}"}]}]}], "]"}]}], 
                    "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"kalQ", ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"showlist", ",", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox["kalFn",
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    StyleBox["Cyan",
                    Background->RGBColor[1, 1, 0]], "}"}]}]}], "]"}]}], 
                    "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{"mapQ", ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"showlist", ",", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox["mapFn",
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    StyleBox["Magenta",
                    Background->RGBColor[1, 1, 0]], "}"}]}]}], "]"}]}], 
                    "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Quiet", "@", 
                    RowBox[{"Show", "[", 
                    RowBox[{"showlist", ",", 
                    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
                    RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<\[Zeta]\>\"", ",", "\"\<\>\""}], "}"}], ",", 
                    
                    RowBox[{"{", 
                    RowBox[{"\"\<\[Xi]\>\"", ",", 
                    RowBox[{"Grid", "[", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<\[Alpha]: \>\"", ",", "\[Alpha]", ",", 
                    "\"\<\[Beta]:\>\"", ",", "\[Beta]"}], "}"}], "}"}], 
                    "]"}]}], "\[IndentingNewLine]", "}"}]}], "}"}]}]}], 
                    "]"}]}]}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
        "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Column", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"SetterBar", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "\[Alpha]\[Beta]Bishop", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "True", "\[Rule]", 
             "\"\<\[Alpha] = \!\(\*FractionBox[\(1\), SubsuperscriptBox[\(\
\[Sigma]\), \(\[Xi]\), \(2\)]]\), \[Beta] = \!\(\*FractionBox[\(1\), \
SubsuperscriptBox[\(\[Sigma]\), \(\[Zeta]\), \(2\)]]\)\>\""}], ",", 
            RowBox[{
            "False", "\[Rule]", 
             "\"\<\[Alpha] = \!\(\*SubsuperscriptBox[\(\[Sigma]\), \
\(\[Zeta]\), \(2\)]\), \[Beta] = \!\(\*SubsuperscriptBox[\(\[Sigma]\), \
\(\[Xi]\), \(2\)]\)\>\""}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Row", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Button", "[", 
             RowBox[{"\"\<RESET\>\"", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[CapitalMu]", "=", "4"}], ";", 
                 RowBox[{"log\[Sigma]\[Xi]", "=", ".5"}], ";", 
                 RowBox[{"log\[Sigma]\[Zeta]", "=", 
                  RowBox[{"-", "1.5"}]}]}], ")"}], "&"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Control", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"kalQ", ",", "True", ",", "\"\<        KAL\>\""}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Control", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"rlsQ", ",", "True", ",", "\"\<        RLS\>\""}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Control", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"mleQ", ",", "False", ",", "\"\<        MLE\>\""}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Control", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"mapQ", ",", "True", ",", "\"\<        MAP\>\""}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}]}], 
           "}"}], ",", 
          RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\[CapitalMu]", ",", "4", ",", "\"\<order \[CapitalMu]\>\""}], 
            "}"}], ",", "0", ",", "16", ",", "1", ",", 
           RowBox[{"Appearance", "\[Rule]", 
            RowBox[{"{", "\"\<Labeled\>\"", "}"}]}]}], "}"}], "]"}], ",", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "log\[Sigma]\[Xi]", ",", ".5", ",", 
             "\"\<log \[Sigma]\[Xi] (KAL)\>\""}], "}"}], ",", 
           RowBox[{"-", "3"}], ",", " ", "5", ",", 
           RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"log\[Sigma]\[Zeta]", ",", 
             RowBox[{"-", "1.5"}], ",", "\"\<log \[Sigma]\[Zeta] (KAL)\>\""}],
             "}"}], ",", 
           RowBox[{"-", "7"}], ",", "3", ",", 
           RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
         "]"}]}], "}"}], "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727884681931381*^9, 3.7278848244947367`*^9}, 
   3.727884861217602*^9, {3.727884975910451*^9, 3.7278849940673532`*^9}, {
   3.727885103521431*^9, 3.727885154698123*^9}, {3.72788520225443*^9, 
   3.727885279820177*^9}, {3.727885496115718*^9, 3.727885517688189*^9}, {
   3.72788559395383*^9, 3.727885598972475*^9}, {3.7278856296542664`*^9, 
   3.727885630876935*^9}, {3.727885695972756*^9, 3.727885696864628*^9}, {
   3.727886633660364*^9, 3.72788671287046*^9}, {3.727886975364171*^9, 
   3.727886975439041*^9}, {3.727903476653379*^9, 3.7279034819231358`*^9}, {
   3.727903531862627*^9, 3.727903539245574*^9}, 3.727913149489944*^9, {
   3.727915429732944*^9, 3.7279154437948627`*^9}, {3.727915750998211*^9, 
   3.7279158447033873`*^9}, {3.7279213832695303`*^9, 3.72792149154887*^9}, {
   3.727921523149373*^9, 3.72792161270367*^9}, {3.72792165300301*^9, 
   3.727921654632832*^9}, {3.727921753282296*^9, 3.727921753360197*^9}, {
   3.727924008558401*^9, 3.727924045018003*^9}, {3.727924293814445*^9, 
   3.727924370827516*^9}, 3.727965590613636*^9, {3.7279686551525917`*^9, 
   3.727968670349081*^9}, {3.7279689406605043`*^9, 3.727969019631563*^9}, {
   3.727970883056108*^9, 3.727970945128386*^9}, {3.727971005813472*^9, 
   3.727971023734253*^9}, {3.727990640753121*^9, 3.727990674786282*^9}, {
   3.727990711779483*^9, 3.727990808626033*^9}, {3.727991307012423*^9, 
   3.727991307022031*^9}, {3.7279932412769613`*^9, 3.7279932949280367`*^9}, {
   3.7279933910397243`*^9, 3.727993398358789*^9}, {3.727993778490755*^9, 
   3.72799379332897*^9}, {3.727993826040863*^9, 3.7279938751552763`*^9}, {
   3.727993956673335*^9, 3.727993958184173*^9}, 3.727994128012043*^9, {
   3.7280354067714148`*^9, 3.7280354258611927`*^9}, {3.728035634299762*^9, 
   3.728035732029833*^9}, {3.72803585641748*^9, 3.728035906176405*^9}, {
   3.728038924314391*^9, 3.728039041653799*^9}, {3.728039077026232*^9, 
   3.72803913265169*^9}, {3.728039194847865*^9, 3.728039320044661*^9}, {
   3.728044256958378*^9, 3.728044343151896*^9}, {3.728044393583234*^9, 
   3.728044466540698*^9}, 3.7280447095836163`*^9, {3.728044856722988*^9, 
   3.728044959527645*^9}, {3.728044995179022*^9, 3.728044998104682*^9}, {
   3.728045028753289*^9, 3.728045063548128*^9}, {3.728045464570526*^9, 
   3.728045476328084*^9}, {3.728045812340419*^9, 3.728045836978776*^9}, {
   3.7280461335391397`*^9, 3.728046355530389*^9}, {3.728046392282709*^9, 
   3.728046397281275*^9}, {3.728046429888109*^9, 3.728046434285967*^9}, {
   3.728046509047914*^9, 3.728046577986915*^9}, {3.728048625582951*^9, 
   3.728048658147644*^9}, {3.728048704639155*^9, 3.7280487209829884`*^9}, {
   3.728048763333255*^9, 3.728048783520523*^9}, 3.728048849900649*^9, {
   3.728048881350296*^9, 3.7280488887365723`*^9}, {3.7280489358794527`*^9, 
   3.728048947834031*^9}, {3.7280492952517767`*^9, 3.728049427179392*^9}, {
   3.728049506853256*^9, 3.7280496162697783`*^9}, {3.728050015065921*^9, 
   3.7280500376507397`*^9}, {3.7280500733077374`*^9, 
   3.7280501005796213`*^9}, {3.728089881496944*^9, 3.728089882038129*^9}, {
   3.728090725835964*^9, 3.728090725845487*^9}, {3.728169349750301*^9, 
   3.728169349773612*^9}, {3.728169400997793*^9, 3.728169417906619*^9}, {
   3.728169511798567*^9, 3.728169523731205*^9}, {3.7281696125541363`*^9, 
   3.7281696306368437`*^9}, 3.728226727530678*^9, {3.728226810131266*^9, 
   3.728226816018466*^9}, {3.728226857072884*^9, 3.728226861119492*^9}, 
   3.728245946305786*^9, {3.7282487072286263`*^9, 3.728248709889584*^9}, {
   3.728251170478485*^9, 3.728251170709284*^9}, {3.7282526609079533`*^9, 
   3.728252718943617*^9}, 3.728252776351699*^9, {3.728252825506783*^9, 
   3.7282528275522842`*^9}, {3.7282528645183697`*^9, 3.728252865147182*^9}, 
   3.7282539826691*^9, {3.7291194284711437`*^9, 3.729119493281761*^9}, {
   3.7291195510227203`*^9, 3.729119680314639*^9}, {3.729119849724024*^9, 
   3.7291198585722113`*^9}, {3.7291717881457*^9, 3.729171818317573*^9}, {
   3.729171854440769*^9, 3.729171871385407*^9}, {3.72917192869256*^9, 
   3.7291720371346607`*^9}, {3.729173126976542*^9, 3.729173139435835*^9}, {
   3.729173200255974*^9, 3.729173275110746*^9}, {3.7291733458987417`*^9, 
   3.729173346264063*^9}, {3.729173389656439*^9, 3.729173389676496*^9}, {
   3.729173453362727*^9, 3.729173453374463*^9}, {3.72917500863538*^9, 
   3.729175053102626*^9}, {3.729175506297736*^9, 3.72917551618956*^9}, {
   3.729175643623238*^9, 3.729175648090048*^9}, {3.729176146733549*^9, 
   3.729176146742311*^9}, {3.729178985302376*^9, 3.729179018757811*^9}, {
   3.729179428316293*^9, 3.729179429546385*^9}, {3.729183394535775*^9, 
   3.729183394547886*^9}, {3.729190274999607*^9, 3.72919028248487*^9}, {
   3.729195946539386*^9, 3.729195963662328*^9}, {3.729256050052142*^9, 
   3.729256067693101*^9}, {3.729551202293354*^9, 3.7295512309957952`*^9}, {
   3.7296339987183323`*^9, 3.7296340585670023`*^9}, {3.72963414997302*^9, 
   3.7296342843671503`*^9}, {3.729634402705227*^9, 3.729634445056549*^9}, {
   3.729640374024897*^9, 3.7296403796236258`*^9}, {3.729640414581646*^9, 
   3.729640440813695*^9}, {3.729682825170733*^9, 3.729682850158277*^9}, {
   3.729687964822157*^9, 3.729687976272668*^9}, {3.729688124350306*^9, 
   3.729688350523089*^9}, {3.729688433189711*^9, 3.729688519693812*^9}, {
   3.7296888315942287`*^9, 3.729688853951269*^9}, {3.729688885214087*^9, 
   3.729688980761574*^9}, {3.729689047339793*^9, 3.72968904899368*^9}, {
   3.729689085039751*^9, 3.729689088321394*^9}, {3.729689126691318*^9, 
   3.729689162680344*^9}, {3.729689199269363*^9, 3.729689319536848*^9}, {
   3.7296894525051317`*^9, 3.7296895044680653`*^9}, {3.7296895377540073`*^9, 
   3.729689925517149*^9}, {3.729698780575644*^9, 3.7296988032889967`*^9}, {
   3.72969891708257*^9, 3.729698973930211*^9}, {3.729699028638085*^9, 
   3.729699670715773*^9}, {3.729699704631276*^9, 3.7296997129720783`*^9}, {
   3.729706992747849*^9, 3.729707001634725*^9}, {3.7297070524424753`*^9, 
   3.729707066383106*^9}, {3.7297071244821672`*^9, 3.729707137919736*^9}, {
   3.729707203038928*^9, 3.72970729917104*^9}, {3.729707646971855*^9, 
   3.729707660202389*^9}, {3.7297079419830017`*^9, 3.72970797164758*^9}, {
   3.729708009957337*^9, 3.729708049867004*^9}, {3.729708084939846*^9, 
   3.7297080920715303`*^9}, {3.729708515163211*^9, 3.729708569024414*^9}, {
   3.729708613027947*^9, 3.729708623070286*^9}, {3.729708794113842*^9, 
   3.729708805535737*^9}, {3.729710516671919*^9, 3.7297105167550173`*^9}, {
   3.729784342249545*^9, 3.7297847167390738`*^9}, {3.729784762209856*^9, 
   3.7297847785042458`*^9}, {3.729784818040599*^9, 3.7297849058292437`*^9}, {
   3.729784947378476*^9, 3.7297849866650257`*^9}, {3.729790334304122*^9, 
   3.7297904006081543`*^9}, {3.7297904543011217`*^9, 3.729790469826312*^9}, {
   3.729790510736865*^9, 3.729790515646512*^9}, {3.729790569437749*^9, 
   3.729790630375985*^9}, {3.729790726049513*^9, 3.7297908347358427`*^9}, {
   3.729790886318983*^9, 3.7297908985495443`*^9}, {3.729790931251046*^9, 
   3.72979112317486*^9}, {3.72979116931327*^9, 3.729791269353731*^9}, {
   3.729791359892681*^9, 3.729791406067814*^9}, {3.7297914485241547`*^9, 
   3.72979144921026*^9}, {3.729791484698999*^9, 3.729791499044384*^9}, {
   3.729791566561154*^9, 3.729791584345121*^9}, {3.7297916430977707`*^9, 
   3.7297917327178802`*^9}, {3.729791770348117*^9, 3.729791837674281*^9}, {
   3.729895980928556*^9, 3.729895981310779*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"75601b81-22f9-4a0c-a791-9b3d255dc64c"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`\[Alpha]\[Beta]Bishop$$ = True}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`kalQ$$ = 
     True, $CellContext`log\[Sigma]\[Zeta]$$ = -1.5, $CellContext`log\[Sigma]\
\[Xi]$$ = 0.5, $CellContext`mapQ$$ = True, $CellContext`mleQ$$ = 
     False, $CellContext`rlsQ$$ = True, $CellContext`\[CapitalMu]$$ = 4, 
     Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
        Hold[$CellContext`kalQ$$], True, "        KAL"}, {True, False}}, {{
        Hold[$CellContext`rlsQ$$], True, "        RLS"}, {True, False}}, {{
        Hold[$CellContext`mleQ$$], False, "        MLE"}, {True, False}}, {{
        Hold[$CellContext`mapQ$$], True, "        MAP"}, {True, False}}, {{
        Hold[$CellContext`\[CapitalMu]$$], 4, "order \[CapitalMu]"}, 0, 16, 
       1}, {{
        Hold[$CellContext`log\[Sigma]\[Xi]$$], 0.5, 
        "log \[Sigma]\[Xi] (KAL)"}, -3, 5}, {{
        Hold[$CellContext`log\[Sigma]\[Zeta]$$], -1.5, 
        "log \[Sigma]\[Zeta] (KAL)"}, -7, 3}, {
       Hold[
        Column[{
          SetterBar[
           Dynamic[$CellContext`\[Alpha]\[Beta]Bishop$$], {
           True -> "\[Alpha] = \!\(\*FractionBox[\(1\), SubsuperscriptBox[\(\
\[Sigma]\), \(\[Xi]\), \(2\)]]\), \[Beta] = \!\(\*FractionBox[\(1\), \
SubsuperscriptBox[\(\[Sigma]\), \(\[Zeta]\), \(2\)]]\)", False -> 
            "\[Alpha] = \!\(\*SubsuperscriptBox[\(\[Sigma]\), \(\[Zeta]\), \
\(2\)]\), \[Beta] = \!\(\*SubsuperscriptBox[\(\[Sigma]\), \(\[Xi]\), \
\(2\)]\)"}], 
          Row[{
            Button[
            "RESET", ($CellContext`\[CapitalMu]$$ = 
              4; $CellContext`log\[Sigma]\[Xi]$$ = 
              0.5; $CellContext`log\[Sigma]\[Zeta]$$ = -1.5)& ], 
            Manipulate`Place[1], 
            Manipulate`Place[2], 
            Manipulate`Place[3], 
            Manipulate`Place[4]}, Frame -> All], 
          Manipulate`Place[5], 
          Manipulate`Place[6], 
          Manipulate`Place[7]}]], Manipulate`Dump`ThisIsNotAControl}}, 
     Typeset`size$$ = {450., {146., 152.}}, Typeset`update$$ = 0, 
     Typeset`initDone$$, Typeset`skipInitDone$$ = 
     True, $CellContext`kalQ$2787$$ = False, $CellContext`rlsQ$2788$$ = 
     False, $CellContext`mleQ$2789$$ = False, $CellContext`mapQ$2790$$ = 
     False, $CellContext`\[CapitalMu]$2791$$ = 
     0, $CellContext`log\[Sigma]\[Xi]$2792$$ = 
     0, $CellContext`log\[Sigma]\[Zeta]$2793$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      2, StandardForm, 
       "Variables" :> {$CellContext`kalQ$$ = 
         True, $CellContext`log\[Sigma]\[Zeta]$$ = -1.5, $CellContext`log\
\[Sigma]\[Xi]$$ = 0.5, $CellContext`mapQ$$ = True, $CellContext`mleQ$$ = 
         False, $CellContext`rlsQ$$ = True, $CellContext`\[CapitalMu]$$ = 4}, 
       "ControllerVariables" :> {
         Hold[$CellContext`kalQ$$, $CellContext`kalQ$2787$$, False], 
         Hold[$CellContext`rlsQ$$, $CellContext`rlsQ$2788$$, False], 
         Hold[$CellContext`mleQ$$, $CellContext`mleQ$2789$$, False], 
         Hold[$CellContext`mapQ$$, $CellContext`mapQ$2790$$, False], 
         Hold[$CellContext`\[CapitalMu]$$, $CellContext`\[CapitalMu]$2791$$, 
          0], 
         Hold[$CellContext`log\[Sigma]\[Xi]$$, \
$CellContext`log\[Sigma]\[Xi]$2792$$, 0], 
         Hold[$CellContext`log\[Sigma]\[Zeta]$$, $CellContext`log\[Sigma]\
\[Zeta]$2793$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
       Module[{$CellContext`x$}, 
         With[{$CellContext`terms$ = \
$CellContext`symbolicPowers[$CellContext`x$, $CellContext`\[CapitalMu]$$], \
$CellContext`cs$ = Map[
             $CellContext`\[Phi][$CellContext`\[CapitalMu]$$], 
             Map[List, 
              Part[$CellContext`bts, 1]]], $CellContext`ts$ = 
           Part[$CellContext`bts, 2], $CellContext`\[Sigma]\[Zeta]2$ = 
           10.^(2 $CellContext`log\[Sigma]\[Zeta]$$), $CellContext`\[Sigma]\
\[Xi]2$ = 10.^(2 $CellContext`log\[Sigma]\[Xi]$$)}, 
          
          With[{$CellContext`normal$ = $CellContext`mleFit[$CellContext`\
\[CapitalMu]$$, $CellContext`bts], $CellContext`kalman$ = \
$CellContext`kalFit[$CellContext`\[Sigma]\[Zeta]2$, \
$CellContext`\[Sigma]\[Xi]2$][$CellContext`\[CapitalMu]$$, $CellContext`bts], \
$CellContext`rrls$ = Quiet[
              $CellContext`rrlsFit[$CellContext`\[Sigma]\[Zeta]2$, \
$CellContext`\[Sigma]\[Xi]2$][$CellContext`\[CapitalMu]$$, \
$CellContext`bts]]}, 
           
           With[{$CellContext`\[Alpha]$ = 
             If[$CellContext`\[Alpha]\[Beta]Bishop$$, 
               1/$CellContext`\[Sigma]\[Xi]2$, \
$CellContext`\[Sigma]\[Zeta]2$], $CellContext`\[Beta]$ = 
             If[$CellContext`\[Alpha]\[Beta]Bishop$$, 
               1/$CellContext`\[Sigma]\[Zeta]2$, \
$CellContext`\[Sigma]\[Xi]2$]}, 
            
            With[{$CellContext`mleFn$ = 
              Dot[$CellContext`terms$, $CellContext`normal$], \
$CellContext`kalFn$ = Dot[{$CellContext`terms$}, 
                Part[$CellContext`kalman$, 1]], $CellContext`mapFn$ = Quiet[
                $CellContext`mapMean[$CellContext`\[Alpha]$, $CellContext`\
\[Beta]$, $CellContext`x$, $CellContext`cs$, $CellContext`ts$, $CellContext`\
\[CapitalMu]$$]], $CellContext`rlsFn$ = Dot[{$CellContext`terms$}, 
                Part[$CellContext`rrls$, 1]]}, 
             With[{$CellContext`lp$ = ListPlot[
                 Transpose[$CellContext`bts], PlotMarkers -> {
                   Graphics[{Blue, 
                    Circle[{0, 0}, 1]}], 0.05}]}, 
              Module[{$CellContext`showlist$ = {$CellContext`lp$, 
                  Plot[
                   Sin[2. Pi $CellContext`x$], {$CellContext`x$, 0., 1.}, 
                   PlotStyle -> {Thick, Green}]}}, If[$CellContext`mleQ$$, 
                 AppendTo[$CellContext`showlist$, 
                  
                  Plot[$CellContext`mleFn$, {$CellContext`x$, 0, 1}, 
                   PlotStyle -> {Orange}]]]; If[$CellContext`rlsQ$$, 
                 AppendTo[$CellContext`showlist$, 
                  
                  Plot[$CellContext`rlsFn$, {$CellContext`x$, 0, 1}, 
                   PlotStyle -> {Purple}]]]; If[$CellContext`kalQ$$, 
                 AppendTo[$CellContext`showlist$, 
                  
                  Plot[$CellContext`kalFn$, {$CellContext`x$, 0, 1}, 
                   PlotStyle -> {Cyan}]]]; If[$CellContext`mapQ$$, 
                 AppendTo[$CellContext`showlist$, 
                  
                  Plot[$CellContext`mapFn$, {$CellContext`x$, 0, 1}, 
                   PlotStyle -> {Magenta}]]]; Quiet[
                 
                 Show[$CellContext`showlist$, Frame -> True, ImageSize -> 
                  Medium, FrameLabel -> {{"\[Zeta]", ""}, {"\[Xi]", 
                    
                    Grid[{{"\[Alpha]: ", $CellContext`\[Alpha]$, 
                    "\[Beta]:", $CellContext`\[Beta]$}}]}}]]]]]]]]], 
       "Specifications" :> {{{$CellContext`kalQ$$, True, "        KAL"}, {
          True, False}, ControlPlacement -> 
          1}, {{$CellContext`rlsQ$$, True, "        RLS"}, {True, False}, 
          ControlPlacement -> 
          2}, {{$CellContext`mleQ$$, False, "        MLE"}, {True, False}, 
          ControlPlacement -> 
          3}, {{$CellContext`mapQ$$, True, "        MAP"}, {True, False}, 
          ControlPlacement -> 
          4}, {{$CellContext`\[CapitalMu]$$, 4, "order \[CapitalMu]"}, 0, 16, 
          1, Appearance -> {"Labeled"}, ControlPlacement -> 
          5}, {{$CellContext`log\[Sigma]\[Xi]$$, 0.5, 
           "log \[Sigma]\[Xi] (KAL)"}, -3, 5, Appearance -> "Labeled", 
          ControlPlacement -> 
          6}, {{$CellContext`log\[Sigma]\[Zeta]$$, -1.5, 
           "log \[Sigma]\[Zeta] (KAL)"}, -7, 3, Appearance -> "Labeled", 
          ControlPlacement -> 7}, 
         Column[{
           SetterBar[
            Dynamic[$CellContext`\[Alpha]\[Beta]Bishop$$], {
            True -> "\[Alpha] = \!\(\*FractionBox[\(1\), SubsuperscriptBox[\(\
\[Sigma]\), \(\[Xi]\), \(2\)]]\), \[Beta] = \!\(\*FractionBox[\(1\), \
SubsuperscriptBox[\(\[Sigma]\), \(\[Zeta]\), \(2\)]]\)", False -> 
             "\[Alpha] = \!\(\*SubsuperscriptBox[\(\[Sigma]\), \(\[Zeta]\), \
\(2\)]\), \[Beta] = \!\(\*SubsuperscriptBox[\(\[Sigma]\), \(\[Xi]\), \
\(2\)]\)"}], 
           Row[{
             Button[
             "RESET", ($CellContext`\[CapitalMu]$$ = 
               4; $CellContext`log\[Sigma]\[Xi]$$ = 
               0.5; $CellContext`log\[Sigma]\[Zeta]$$ = -1.5)& ], 
             Manipulate`Place[1], 
             Manipulate`Place[2], 
             Manipulate`Place[3], 
             Manipulate`Place[4]}, Frame -> All], 
           Manipulate`Place[5], 
           Manipulate`Place[6], 
           Manipulate`Place[7]}]}, "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{505., {275., 282.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.729784381207548*^9, 3.7297844163676357`*^9, {3.729784455537157*^9, 
   3.7297844797500753`*^9}, 3.72978454961663*^9, {3.729784579881394*^9, 
   3.729784637108739*^9}, {3.729784681722384*^9, 3.729784717710224*^9}, 
   3.729784779431076*^9, 3.729784841514982*^9, 3.729784874445601*^9, 
   3.7297849071649437`*^9, 3.729784987534523*^9, {3.729790344993404*^9, 
   3.729790401881814*^9}, 3.729790471804407*^9, 3.729790516129326*^9, {
   3.729790611352343*^9, 3.729790631024955*^9}, 3.7297908377804728`*^9, 
   3.729791052324683*^9, 3.729791125345771*^9, 3.729791176940489*^9, {
   3.729791226113031*^9, 3.7297912700673437`*^9}, {3.729791366986239*^9, 
   3.7297914073716087`*^9}, 3.729791450410841*^9, {3.7297914878437138`*^9, 
   3.729791499782393*^9}, {3.729791573356472*^9, 3.7297915848841753`*^9}, {
   3.729791700338099*^9, 3.729791721639224*^9}, 3.729791807132395*^9, 
   3.729894701378387*^9, {3.729895982956667*^9, 3.729896007208116*^9}, 
   3.729896154153077*^9, 3.72989729688218*^9, 3.730140356463293*^9, 
   3.7302402732388268`*^9, 3.730380092431903*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"fc4ec936-39d7-4da2-a076-fbbb6b4e7b9a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Covariance of the Estimate", "Subsection",
 CellChangeTimes->{{3.729182953019375*^9, 
  3.7291829585476*^9}},ExpressionUUID->"a346459e-9fcf-4e77-95ad-ea44400ae082"],

Cell[TextData[{
 "Consider Bishop' s equation 1.71 ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["s", "2"], "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["\[Beta]", 
      RowBox[{"\[ThinSpace]", 
       RowBox[{"-", "1"}]}]], "+", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Phi]", "\[ThinSpace]", "(", "x", ")"}], "\[Transpose]"}], 
      "\[CenterDot]", "S", "\[CenterDot]", 
      RowBox[{"\[Phi]", "\[ThinSpace]", "(", "x", ")"}]}]}]}], 
   TraditionalForm]],ExpressionUUID->"6dfcd263-a97d-4bbd-8240-18fb850b2a01"],
 ", which does not depend on the output data ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "n"], TraditionalForm]],ExpressionUUID->
  "2c5fff2e-1c1d-406e-901d-41521c38df61"],
 ", just as with KAL and RLS\.7f."
}], "Text",
 CellChangeTimes->{{3.727994165301249*^9, 3.7279941851829967`*^9}, {
  3.72808526244471*^9, 3.728085323623013*^9}, {3.728253500899654*^9, 
  3.728253506076968*^9}, {3.729175093713661*^9, 3.7291750988463297`*^9}, {
  3.729189840044029*^9, 3.7291898706889067`*^9}, {3.7291903288986673`*^9, 
  3.729190329452014*^9}, {3.7297115752429132`*^9, 
  3.729711651456718*^9}},ExpressionUUID->"fb7c2896-c8c0-43ad-8c12-\
019a556a3ca8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "mapsSquared", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mapsSquared", "[", 
    RowBox[{
    "\[Alpha]_", ",", "\[Beta]_", ",", "x_", ",", "cs_", ",", 
     "\[CapitalMu]_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"\[Phi]", "[", "\[CapitalMu]", "]"}], "[", "x", "]"}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SuperscriptBox["\[Beta]", 
       RowBox[{"-", "1"}]], "+", 
      RowBox[{
       RowBox[{"{", "a", "}"}], ".", 
       RowBox[{"LinearSolve", "[", 
        RowBox[{
         RowBox[{"sInv", "[", 
          RowBox[{
          "\[Alpha]", ",", "\[Beta]", ",", "cs", ",", "\[CapitalMu]"}], "]"}],
          ",", 
         RowBox[{"List", "/@", "a"}]}], "]"}]}]}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.727994197366062*^9, 3.7279942096588373`*^9}, {
   3.727994247046831*^9, 3.7279942495547533`*^9}, {3.7279943024871273`*^9, 
   3.7279946538407373`*^9}, {3.7280359193758917`*^9, 3.728035920837536*^9}, 
   3.729175085479534*^9, 3.7291756488901587`*^9, {3.729175930984292*^9, 
   3.7291759413745337`*^9}, {3.72918296865281*^9, 3.72918296932966*^9}, {
   3.729195696029108*^9, 3.729195744219352*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"71a5a415-83da-4d91-9288-7d6b203dd2ec"],

Cell[TextData[{
 "Bishop kindly supplies the sigma-bars for his mean. He cites ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "=", "0.005"}], TraditionalForm]],ExpressionUUID->
  "716c6835-a0ca-4e21-a1e5-f1fabb29a20e"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "=", "11.1"}], TraditionalForm]],ExpressionUUID->
  "34eda4a5-047a-4ac4-89f4-ad3002dd4e23"],
 ", which correspond to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sigma]", "\[Zeta]"], "=", 
    FormBox["0.07071",
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "84d7f102-4b43-4dff-aa17-d8119992c171"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sigma]", "\[Xi]"], "=", 
    FormBox["3.333",
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "0925b158-a2eb-4d33-8d5d-20d2fb6b998c"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "10"], 
     SubscriptBox["\[Sigma]", "\[Zeta]"]}], "=", 
    FormBox[
     RowBox[{"-", "1.1505149978319906`"}],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "89a82430-c61c-45d2-8428-421f2038513e"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "10"], 
     SubscriptBox["\[Sigma]", "\[Xi]"]}], "=", 
    FormBox["0.5229",
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "6c4ddb46-0404-4254-a14b-31d303fbb18d"],
 ". These values reproduce Bishop\[CloseCurlyQuote]s figure 1.17 well.\n\n\
Kalman\[CloseCurlyQuote]s output covariance ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]],ExpressionUUID->
  "a880d95f-b2f1-45ad-93d4-7b5e04e54930"],
 " and RLS\[CloseCurlyQuote]s output information ",
 Cell[BoxData[
  FormBox["\[CapitalPi]", TraditionalForm]],ExpressionUUID->
  "85e9a51d-5c4f-4bc8-9a7c-127e8310e19d"],
 " represent uncertainty in the estimated coefficients. These do not directly \
yield uncertainties in the predicted labels, i.e., polynomials evaluated at \
each input point. For those, we follow Bishop\[CloseCurlyQuote]s analysis and \
his equation 1.71."
}], "Text",
 CellChangeTimes->{{3.728047983582913*^9, 3.728048001419952*^9}, {
   3.728048031472519*^9, 3.728048102784032*^9}, 3.728048334620097*^9, {
   3.728048573076227*^9, 3.7280485742423983`*^9}, {3.7291832860169077`*^9, 
   3.729183286905438*^9}, {3.7291909187303047`*^9, 3.729190931736122*^9}, {
   3.729190966915935*^9, 3.72919115612007*^9}, {3.7291913182402887`*^9, 
   3.729191334853733*^9}, {3.729194967822537*^9, 3.7291949964757357`*^9}, {
   3.729195092532947*^9, 3.729195228731798*^9}, {3.7291952960364323`*^9, 
   3.729195346443692*^9}, {3.729195461293686*^9, 3.729195465395809*^9}, {
   3.729195529898984*^9, 3.7291955825492153`*^9}, 3.729196046713995*^9, {
   3.729196202829361*^9, 3.729196223138455*^9}, {3.7291963897537813`*^9, 
   3.7291963938344088`*^9}, {3.729711666635454*^9, 
   3.729711717573139*^9}},ExpressionUUID->"e0445422-d911-42db-a626-\
0070632dcf10"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"terms", "=", 
          RowBox[{"symbolicPowers", "[", 
           RowBox[{"x", ",", "\[CapitalMu]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"cs", "=", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "\[CapitalMu]", "]"}], "/@", 
           RowBox[{"List", "/@", 
            RowBox[{
            "bts", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}]}]}], ",", 
         RowBox[{"ts", "=", 
          RowBox[{
          "bts", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"normal", "=", 
            RowBox[{"mleFit", "[", 
             RowBox[{"\[CapitalMu]", ",", "bts"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"kalman", "=", 
            RowBox[{
             RowBox[{"kalFit", "[", 
              RowBox[{
               SuperscriptBox["10", 
                RowBox[{"2", "log\[Sigma]\[Zeta]"}]], ",", 
               SuperscriptBox["10", 
                RowBox[{"2", "log\[Sigma]\[Xi]"}]]}], "]"}], "[", 
             RowBox[{"\[CapitalMu]", ",", "bts"}], "]"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"mleFn", "=", 
              RowBox[{"terms", ".", "normal"}]}], ",", "\[IndentingNewLine]", 
             
             RowBox[{"kalFn", "=", 
              RowBox[{
               RowBox[{"{", "terms", "}"}], ".", 
               RowBox[{
               "kalman", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"bs2", "=", 
              RowBox[{"mapsSquared", "[", 
               RowBox[{
                SuperscriptBox["10", 
                 RowBox[{"2", "log\[Sigma]\[Zeta]"}]], ",", 
                SuperscriptBox["10", 
                 RowBox[{"2", "log\[Sigma]\[Xi]"}]], ",", "x", ",", "cs", ",",
                 "\[CapitalMu]"}], 
               StyleBox["]",
                Background->RGBColor[1, 1, 0]]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"mapFn", "=", 
              RowBox[{"Quiet", "@", 
               RowBox[{"mapMean", "[", 
                RowBox[{
                 SuperscriptBox["10", 
                  RowBox[{"2", "log\[Sigma]\[Zeta]"}]], ",", 
                 SuperscriptBox["10", 
                  RowBox[{"2", "log\[Sigma]\[Xi]"}]], ",", "x", ",", "cs", 
                 ",", "ts", ",", "\[CapitalMu]"}], "]"}]}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"lp", "=", 
               RowBox[{"ListPlot", "[", 
                RowBox[{
                 RowBox[{"bts", "\[Transpose]"}], ",", "\[IndentingNewLine]", 
                 
                 RowBox[{"PlotMarkers", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Graphics", "@", 
                    RowBox[{"{", 
                    RowBox[{"Blue", ",", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}], 
                    "}"}]}], ",", ".05"}], "}"}]}]}], "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"showlist", "=", 
                 RowBox[{"{", 
                  RowBox[{"lp", ",", 
                   RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"2.", "\[Pi]", " ", "x"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0.", ",", "1."}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Thick", ",", "Green"}], "}"}]}]}], "]"}]}], 
                  "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{"mleQ", ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"showlist", ",", 
                    RowBox[{"Plot", "[", 
                    RowBox[{"mleFn", ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", "Orange", "}"}]}]}], "]"}]}], "]"}]}], "]"}],
                 ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{"kalQ", ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"showlist", ",", "\[IndentingNewLine]", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"kalFn", ",", 
                    RowBox[{"kalFn", "+", 
                    SqrtBox["bs2"]}], ",", 
                    RowBox[{"kalFn", "-", 
                    SqrtBox["bs2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Cyan", ",", 
                    RowBox[{"{", 
                    RowBox[{"Thin", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0", "]"}], ",", "Cyan"}], 
                    "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Thin", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0", "]"}], ",", "Cyan"}], 
                    "}"}]}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"Filling", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"{", "2", "}"}]}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"{", "3", "}"}]}]}], "}"}]}]}], "]"}]}], "]"}]}], 
                 "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{"mapQ", ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"showlist", ",", "\[IndentingNewLine]", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"mapFn", ",", 
                    RowBox[{"mapFn", "+", 
                    SqrtBox["bs2"]}], ",", 
                    RowBox[{"mapFn", "-", 
                    SqrtBox["bs2"]}]}], "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Magenta", ",", 
                    RowBox[{"{", 
                    RowBox[{"Thin", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0", "]"}], ",", "Magenta"}], 
                    "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Thin", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0", "]"}], ",", "Magenta"}], 
                    "}"}]}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Filling", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"{", "2", "}"}]}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"{", "3", "}"}]}]}], "}"}]}]}], "]"}]}], "]"}]}], 
                 "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Quiet", "@", 
                 RowBox[{"Show", "[", 
                  RowBox[{"showlist", ",", 
                   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                   RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<x\>\"", ",", "\"\<t\>\""}], "}"}]}]}], 
                  "]"}]}]}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Button", "[", 
            RowBox[{"\"\<RESET\>\"", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalMu]", "=", "9"}], ";", 
                RowBox[{"log\[Sigma]\[Xi]", "=", 
                 RowBox[{"Log10", "[", 
                  SqrtBox[
                   RowBox[{"1", "/", "0.09"}]], "]"}]}], ";", 
                RowBox[{"log\[Sigma]\[Zeta]", "=", 
                 RowBox[{"Log10", "[", 
                  SqrtBox["0.005"], "]"}]}]}], ")"}], "&"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"kalQ", ",", "True", ",", "\"\<KAL\>\""}], "}"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"mleQ", ",", "False", ",", "\"\<MLE\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"mapQ", ",", "True", ",", "\"\<MAP\>\""}], "}"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}]}], "}"}],
          "}"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\[CapitalMu]", ",", "9", ",", "\"\<order \[CapitalMu]\>\""}], 
           "}"}], ",", "0", ",", "16", ",", "1", ",", 
          RowBox[{"Appearance", "\[Rule]", 
           RowBox[{"{", "\"\<Labeled\>\"", "}"}]}]}], "}"}], "]"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"log\[Sigma]\[Xi]", ",", 
            RowBox[{"Log10", "[", 
             SqrtBox[
              RowBox[{"1", "/", "0.09"}]], "]"}], ",", 
            "\"\<log \[Sigma]\[Xi] (KAL)\>\""}], "}"}], ",", 
          RowBox[{"-", "3"}], ",", " ", "5", ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
        "]"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"log\[Sigma]\[Zeta]", ",", 
            RowBox[{"Log10", "[", 
             SqrtBox["0.005"], "]"}], ",", 
            "\"\<log \[Sigma]\[Zeta] (KAL)\>\""}], "}"}], ",", 
          RowBox[{"-", "5"}], ",", "3", ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
        "]"}], "}"}]}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727884681931381*^9, 3.7278848244947367`*^9}, 
   3.727884861217602*^9, {3.727884975910451*^9, 3.7278849940673532`*^9}, {
   3.727885103521431*^9, 3.727885154698123*^9}, {3.72788520225443*^9, 
   3.727885279820177*^9}, {3.727885496115718*^9, 3.727885517688189*^9}, {
   3.72788559395383*^9, 3.727885598972475*^9}, {3.7278856296542664`*^9, 
   3.727885630876935*^9}, {3.727885695972756*^9, 3.727885696864628*^9}, {
   3.727886633660364*^9, 3.72788671287046*^9}, {3.727886975364171*^9, 
   3.727886975439041*^9}, {3.727903476653379*^9, 3.7279034819231358`*^9}, {
   3.727903531862627*^9, 3.727903539245574*^9}, 3.727913149489944*^9, {
   3.727915429732944*^9, 3.7279154437948627`*^9}, {3.727915750998211*^9, 
   3.7279158447033873`*^9}, {3.7279213832695303`*^9, 3.72792149154887*^9}, {
   3.727921523149373*^9, 3.72792161270367*^9}, {3.72792165300301*^9, 
   3.727921654632832*^9}, {3.727921753282296*^9, 3.727921753360197*^9}, {
   3.727924008558401*^9, 3.727924045018003*^9}, {3.727924293814445*^9, 
   3.727924370827516*^9}, 3.727965590613636*^9, {3.7279686551525917`*^9, 
   3.727968670349081*^9}, {3.7279689406605043`*^9, 3.727969019631563*^9}, {
   3.727970883056108*^9, 3.727970945128386*^9}, {3.727971005813472*^9, 
   3.727971023734253*^9}, {3.727990640753121*^9, 3.727990674786282*^9}, {
   3.727990711779483*^9, 3.727990808626033*^9}, {3.727991307012423*^9, 
   3.727991307022031*^9}, {3.7279932412769613`*^9, 3.7279932949280367`*^9}, {
   3.7279933910397243`*^9, 3.727993398358789*^9}, {3.727993778490755*^9, 
   3.72799379332897*^9}, {3.727993826040863*^9, 3.7279938751552763`*^9}, {
   3.727993956673335*^9, 3.727993958184173*^9}, 3.727994128012043*^9, {
   3.7280354067714148`*^9, 3.7280354258611927`*^9}, {3.728035634299762*^9, 
   3.728035732029833*^9}, {3.72803585641748*^9, 3.728035906176405*^9}, {
   3.728038924314391*^9, 3.728039041653799*^9}, {3.728039077026232*^9, 
   3.72803913265169*^9}, {3.728039194847865*^9, 3.728039320044661*^9}, {
   3.728044256958378*^9, 3.728044343151896*^9}, {3.728044393583234*^9, 
   3.728044466540698*^9}, 3.7280447095836163`*^9, {3.728044856722988*^9, 
   3.728044959527645*^9}, {3.728044995179022*^9, 3.728044998104682*^9}, {
   3.728045028753289*^9, 3.728045063548128*^9}, {3.728045464570526*^9, 
   3.728045476328084*^9}, {3.728045812340419*^9, 3.728045836978776*^9}, {
   3.7280461335391397`*^9, 3.728046355530389*^9}, {3.728046392282709*^9, 
   3.728046397281275*^9}, {3.728046429888109*^9, 3.728046434285967*^9}, {
   3.728046509047914*^9, 3.728046577986915*^9}, {3.728048625582951*^9, 
   3.728048658147644*^9}, {3.728048704639155*^9, 3.7280487209829884`*^9}, {
   3.728048763333255*^9, 3.728048783520523*^9}, 3.728048849900649*^9, {
   3.728048881350296*^9, 3.7280488887365723`*^9}, {3.7280489358794527`*^9, 
   3.728048947834031*^9}, {3.7280492952517767`*^9, 3.728049427179392*^9}, {
   3.728049506853256*^9, 3.7280496162697783`*^9}, {3.728050015065921*^9, 
   3.7280500376507397`*^9}, {3.7280500733077374`*^9, 
   3.7280501005796213`*^9}, {3.728089881496944*^9, 3.728089882038129*^9}, {
   3.728090725835964*^9, 3.728090725845487*^9}, {3.728169349750301*^9, 
   3.728169349773612*^9}, {3.728169400997793*^9, 3.728169417906619*^9}, {
   3.728169511798567*^9, 3.728169523731205*^9}, {3.7281696125541363`*^9, 
   3.7281696306368437`*^9}, 3.728226727530678*^9, {3.728226810131266*^9, 
   3.728226816018466*^9}, {3.728226857072884*^9, 3.728226861119492*^9}, 
   3.728245946305786*^9, {3.7282487072286263`*^9, 3.728248709889584*^9}, {
   3.728251170478485*^9, 3.728251170709284*^9}, {3.7282526609079533`*^9, 
   3.728252718943617*^9}, 3.728252776351699*^9, {3.728252825506783*^9, 
   3.7282528275522842`*^9}, {3.7282528645183697`*^9, 3.728252865147182*^9}, 
   3.7282539826691*^9, {3.7291194284711437`*^9, 3.729119493281761*^9}, {
   3.7291195510227203`*^9, 3.729119680314639*^9}, {3.729119849724024*^9, 
   3.7291198585722113`*^9}, {3.7291717881457*^9, 3.729171818317573*^9}, {
   3.729171854440769*^9, 3.729171871385407*^9}, {3.72917192869256*^9, 
   3.7291720371346607`*^9}, {3.729173126976542*^9, 3.729173139435835*^9}, {
   3.729173200255974*^9, 3.729173275110746*^9}, {3.7291733458987417`*^9, 
   3.729173346264063*^9}, {3.729173389656439*^9, 3.729173389676496*^9}, {
   3.729173453362727*^9, 3.729173453374463*^9}, {3.72917500863538*^9, 
   3.729175053102626*^9}, {3.729175506297736*^9, 3.72917551618956*^9}, {
   3.729175643623238*^9, 3.729175648090048*^9}, {3.729176146733549*^9, 
   3.729176146742311*^9}, {3.729178985302376*^9, 3.729179018757811*^9}, {
   3.729179428316293*^9, 3.729179429546385*^9}, {3.7291833107508097`*^9, 
   3.729183351716688*^9}, {3.729183394435251*^9, 3.729183394441711*^9}, {
   3.729190091733934*^9, 3.729190094653805*^9}, {3.7291901727265663`*^9, 
   3.729190190738206*^9}, 3.7291903189647007`*^9, {3.729190363535774*^9, 
   3.729190420438587*^9}, {3.729190855161989*^9, 3.7291908759621487`*^9}, {
   3.729191173998303*^9, 3.729191310565546*^9}, {3.729191815211359*^9, 
   3.729191966406259*^9}, {3.729192009289757*^9, 3.729192012183796*^9}, 
   3.729192076913485*^9, {3.7291921189255133`*^9, 3.72919222651994*^9}, {
   3.7291934084762163`*^9, 3.7291934717245827`*^9}, {3.729193512347974*^9, 
   3.729193699962986*^9}, {3.7291937883162937`*^9, 3.72919391294538*^9}, {
   3.729193943825762*^9, 3.7291939503531523`*^9}, {3.729194005235033*^9, 
   3.729194075561458*^9}, 3.729195508767318*^9, {3.729196245290443*^9, 
   3.7291962556403313`*^9}, {3.729196364803418*^9, 3.7291963689564*^9}, {
   3.729196403932249*^9, 3.729196414116873*^9}, 3.729551253178636*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"318d1ea7-8e30-4ddd-8869-27ace3ff74f0"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`kalQ$$ = 
    True, $CellContext`log\[Sigma]\[Zeta]$$ = -1.1505149978319906`, \
$CellContext`log\[Sigma]\[Xi]$$ = 0.5228787452803376, $CellContext`mapQ$$ = 
    True, $CellContext`mleQ$$ = False, $CellContext`\[CapitalMu]$$ = 9, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`kalQ$$], True, "KAL"}, {True, False}}, {{
       Hold[$CellContext`mleQ$$], False, "MLE"}, {True, False}}, {{
       Hold[$CellContext`mapQ$$], True, "MAP"}, {True, False}}, {{
       Hold[$CellContext`\[CapitalMu]$$], 9, "order \[CapitalMu]"}, 0, 16, 
      1}, {{
       Hold[$CellContext`log\[Sigma]\[Xi]$$], 0.5228787452803376, 
       "log \[Sigma]\[Xi] (KAL)"}, -3, 5}, {{
       Hold[$CellContext`log\[Sigma]\[Zeta]$$], -1.1505149978319906`, 
       "log \[Sigma]\[Zeta] (KAL)"}, -5, 3}, {
      Hold[
       Grid[{{
          Grid[{{
             Button[
             "RESET", ($CellContext`\[CapitalMu]$$ = 
               9; $CellContext`log\[Sigma]\[Xi]$$ = Log10[
                 Sqrt[1/0.09]]; $CellContext`log\[Sigma]\[Zeta]$$ = Log10[
                 Sqrt[0.005]])& ], 
             Manipulate`Place[1], 
             Manipulate`Place[2], 
             Manipulate`Place[3]}}]}, {
          Manipulate`Place[4]}, {
          Manipulate`Place[5]}, {
          Manipulate`Place[6]}}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {450., {141., 147.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`kalQ$2822$$ = False, $CellContext`mleQ$2823$$ = 
    False, $CellContext`mapQ$2824$$ = 
    False, $CellContext`\[CapitalMu]$2825$$ = 
    0, $CellContext`log\[Sigma]\[Xi]$2826$$ = 
    0, $CellContext`log\[Sigma]\[Zeta]$2827$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`kalQ$$ = 
        True, $CellContext`log\[Sigma]\[Zeta]$$ = -1.1505149978319906`, \
$CellContext`log\[Sigma]\[Xi]$$ = 0.5228787452803376, $CellContext`mapQ$$ = 
        True, $CellContext`mleQ$$ = False, $CellContext`\[CapitalMu]$$ = 9}, 
      "ControllerVariables" :> {
        Hold[$CellContext`kalQ$$, $CellContext`kalQ$2822$$, False], 
        Hold[$CellContext`mleQ$$, $CellContext`mleQ$2823$$, False], 
        Hold[$CellContext`mapQ$$, $CellContext`mapQ$2824$$, False], 
        Hold[$CellContext`\[CapitalMu]$$, $CellContext`\[CapitalMu]$2825$$, 
         0], 
        Hold[$CellContext`log\[Sigma]\[Xi]$$, \
$CellContext`log\[Sigma]\[Xi]$2826$$, 0], 
        Hold[$CellContext`log\[Sigma]\[Zeta]$$, $CellContext`log\[Sigma]\
\[Zeta]$2827$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Module[{$CellContext`x$}, 
        With[{$CellContext`terms$ = \
$CellContext`symbolicPowers[$CellContext`x$, $CellContext`\[CapitalMu]$$], \
$CellContext`cs$ = Map[
            $CellContext`\[Phi][$CellContext`\[CapitalMu]$$], 
            Map[List, 
             Part[$CellContext`bts, 1]]], $CellContext`ts$ = 
          Part[$CellContext`bts, 2]}, 
         With[{$CellContext`normal$ = $CellContext`mleFit[$CellContext`\
\[CapitalMu]$$, $CellContext`bts], $CellContext`kalman$ = $CellContext`kalFit[
            10^(2 $CellContext`log\[Sigma]\[Zeta]$$), 
             10^(2 $CellContext`log\[Sigma]\[Xi]$$)][$CellContext`\[CapitalMu]\
$$, $CellContext`bts]}, 
          
          With[{$CellContext`mleFn$ = 
            Dot[$CellContext`terms$, $CellContext`normal$], \
$CellContext`kalFn$ = Dot[{$CellContext`terms$}, 
              
              Part[$CellContext`kalman$, 
               1]], $CellContext`bs2$ = $CellContext`mapsSquared[
             10^(2 $CellContext`log\[Sigma]\[Zeta]$$), 
              10^(
               2 $CellContext`log\[Sigma]\[Xi]$$), $CellContext`x$, \
$CellContext`cs$, $CellContext`\[CapitalMu]$$], $CellContext`mapFn$ = Quiet[
              $CellContext`mapMean[
              10^(2 $CellContext`log\[Sigma]\[Zeta]$$), 
               10^(2 $CellContext`log\[Sigma]\[Xi]$$), $CellContext`x$, \
$CellContext`cs$, $CellContext`ts$, $CellContext`\[CapitalMu]$$]]}, 
           With[{$CellContext`lp$ = ListPlot[
               Transpose[$CellContext`bts], PlotMarkers -> {
                 Graphics[{Blue, 
                   Circle[{0, 0}, 1]}], 0.05}]}, 
            Module[{$CellContext`showlist$ = {$CellContext`lp$, 
                Plot[
                 Sin[2. Pi $CellContext`x$], {$CellContext`x$, 0., 1.}, 
                 PlotStyle -> {Thick, Green}]}}, If[$CellContext`mleQ$$, 
               AppendTo[$CellContext`showlist$, 
                
                Plot[$CellContext`mleFn$, {$CellContext`x$, 0, 1}, 
                 PlotStyle -> {Orange}]]]; If[$CellContext`kalQ$$, 
               AppendTo[$CellContext`showlist$, 
                
                Plot[{$CellContext`kalFn$, $CellContext`kalFn$ + 
                  Sqrt[$CellContext`bs2$], $CellContext`kalFn$ - 
                  Sqrt[$CellContext`bs2$]}, {$CellContext`x$, 0, 1}, 
                 PlotStyle -> {Cyan, {Thin, {
                    Opacity[0], Cyan}}, {Thin, {
                    Opacity[0], Cyan}}}, Filling -> {1 -> {2}, 1 -> {3}}]]]; 
             If[$CellContext`mapQ$$, 
               AppendTo[$CellContext`showlist$, 
                
                Plot[{$CellContext`mapFn$, $CellContext`mapFn$ + 
                  Sqrt[$CellContext`bs2$], $CellContext`mapFn$ - 
                  Sqrt[$CellContext`bs2$]}, {$CellContext`x$, 0, 1}, 
                 PlotStyle -> {Magenta, {Thin, {
                    Opacity[0], Magenta}}, {Thin, {
                    Opacity[0], Magenta}}}, 
                 Filling -> {1 -> {2}, 1 -> {3}}]]]; Quiet[
               
               Show[$CellContext`showlist$, Frame -> True, 
                FrameLabel -> {"x", "t"}]]]]]]]], 
      "Specifications" :> {{{$CellContext`kalQ$$, True, "KAL"}, {True, False},
          ControlPlacement -> 1}, {{$CellContext`mleQ$$, False, "MLE"}, {
         True, False}, ControlPlacement -> 
         2}, {{$CellContext`mapQ$$, True, "MAP"}, {True, False}, 
         ControlPlacement -> 
         3}, {{$CellContext`\[CapitalMu]$$, 9, "order \[CapitalMu]"}, 0, 16, 
         1, Appearance -> {"Labeled"}, ControlPlacement -> 
         4}, {{$CellContext`log\[Sigma]\[Xi]$$, 0.5228787452803376, 
          "log \[Sigma]\[Xi] (KAL)"}, -3, 5, Appearance -> "Labeled", 
         ControlPlacement -> 
         5}, {{$CellContext`log\[Sigma]\[Zeta]$$, -1.1505149978319906`, 
          "log \[Sigma]\[Zeta] (KAL)"}, -5, 3, Appearance -> "Labeled", 
         ControlPlacement -> 6}, 
        Grid[{{
           Grid[{{
              Button[
              "RESET", ($CellContext`\[CapitalMu]$$ = 
                9; $CellContext`log\[Sigma]\[Xi]$$ = Log10[
                  Sqrt[1/0.09]]; $CellContext`log\[Sigma]\[Zeta]$$ = Log10[
                  Sqrt[0.005]])& ], 
              Manipulate`Place[1], 
              Manipulate`Place[2], 
              Manipulate`Place[3]}}]}, {
           Manipulate`Place[4]}, {
           Manipulate`Place[5]}, {
           Manipulate`Place[6]}}]}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{505., {244., 251.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.729192135929804*^9, 3.7291922278453083`*^9, {3.729193547075082*^9, 
   3.72919357029303*^9}, 3.7291936494538317`*^9, 3.729193835844892*^9, {
   3.7291938917022667`*^9, 3.729193913601519*^9}, 3.7291939518583193`*^9, 
   3.729194031604315*^9, 3.729194077471689*^9, 3.7291957523055468`*^9, {
   3.729196352157159*^9, 3.7291963729616833`*^9}, 3.729196414663275*^9, 
   3.729255939509426*^9, 3.729552302952733*^9, 3.729557877054325*^9, 
   3.72962983964937*^9, 3.729642874169162*^9, 3.7296429101726303`*^9, 
   3.729643940550147*^9, 3.729647187004492*^9, 3.729711729117857*^9, 
   3.729711766418165*^9, 3.7297782664869204`*^9, 3.729779235817174*^9, 
   3.7297793102436247`*^9, 3.729792075793706*^9, 3.729894701595381*^9, 
   3.729896007432908*^9, 3.7298961543952217`*^9, 3.729897297071055*^9, 
   3.730140356712283*^9, 3.730240273471672*^9, 3.730380092501981*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"9c59042b-efed-41d7-96d8-13c15b0cfdec"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Appendix: Particle Filter", "Chapter",
 CellChangeTimes->{{3.730309566049403*^9, 
  3.730309571418981*^9}},ExpressionUUID->"3169a658-391d-4481-8853-\
308bc394f7b2"],

Cell[TextData[{
 "Each particle ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Xi]", "i"], ",", 
    RowBox[{"i", "\[Element]", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"1", ".."}], 
       SubscriptBox["N", "s"]}], "]"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e490040c-7e31-4b6a-b5d5-a8c18b448239"],
 ", is an ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"\[CapitalMu]", "+", "1"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "4f718f3a-944c-4fc5-a8f2-d4bd89aa5091"],
 "-vector guess at the state, i.e., the column vector of coefficients. There \
are ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "s"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "b871d66d-3b0e-4c80-bc8e-542f40e4645f"],
 " of them for each time tick in the simulation. "
}], "Text",
 CellChangeTimes->{{3.7303106632251043`*^9, 3.730310803482277*^9}, {
  3.730310867446988*^9, 3.7303108703318567`*^9}, {3.730311282159844*^9, 
  3.730311285160948*^9}, {3.730311333616426*^9, 3.730311356500394*^9}, {
  3.730313144881275*^9, 
  3.730313157480541*^9}},ExpressionUUID->"e3567f63-cdb0-49f5-871e-\
418d0b9d962b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "\[Sigma]0", ",", "P", ",", "P0", ",", "\[Xi]0", ",", "\[Xi]0s", ",", 
    "importanceFunction"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "Ns", ",", "\[Sigma]0", ",", "\[Sigma]", ",", "\[Xi]", ",", 
     "importanceFunctions", ",", "\[Xi]s", ",", "\[CapitalMu]", ",", "ws"}], 
    "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ns", "=", "1000"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalMu]", "=", "9"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]0", "=", 
   SuperscriptBox["10.", "6"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Sigma]", "[", "0", "]"}], "=", 
    RowBox[{"List", "/@", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"\[Sigma]0", ",", 
       RowBox[{"\[CapitalMu]", "+", "1"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Xi]", "[", "0", "]"}], "=", 
    RowBox[{"List", "/@", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0.", ",", 
       RowBox[{"\[CapitalMu]", "+", "1"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"importanceFunctions", "[", "t_", "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Xi]", "[", "t", "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{
         RowBox[{"\[Sigma]", "[", "t", "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"\[CapitalMu]", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Xi]s", "[", "0", "]"}], "=", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Xi]", "[", "0", "]"}], "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"importanceFunctions", "[", "0", "]"}], 
         "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"\[CapitalMu]", "+", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "Ns"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<\[Sigma]\>\"", "\[Rule]", "\[Sigma]"}], ",", 
      RowBox[{"\"\<Dimensions[\[Xi]s[0]]\>\"", "\[Rule]", 
       RowBox[{"Dimensions", "[", 
        RowBox[{"\[Xi]s", "[", "0", "]"}], "]"}]}]}], "|>"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ws", "[", "0", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{
     RowBox[{"1.", "/", "Ns"}], ",", "Ns"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plus", "@@", 
  RowBox[{"ws", "[", "0", "]"}]}]}], "Input",
 CellChangeTimes->{{3.730309581049458*^9, 3.730309615913123*^9}, {
   3.730309695551532*^9, 3.730309794625188*^9}, {3.730309986287401*^9, 
   3.730310031081099*^9}, {3.7303100843211937`*^9, 3.7303100878137608`*^9}, {
   3.730310148990505*^9, 3.7303101892066717`*^9}, {3.730310237600898*^9, 
   3.730310291926539*^9}, {3.730310335701906*^9, 3.7303103840752783`*^9}, {
   3.730310571768824*^9, 3.730310576192645*^9}, {3.7303111681986427`*^9, 
   3.7303112740923223`*^9}, {3.73031144784251*^9, 3.730311468679291*^9}, {
   3.7303114989372272`*^9, 3.730311545273479*^9}, 3.730311578090163*^9, {
   3.730311625478706*^9, 3.730311927538033*^9}, {3.7303119723211718`*^9, 
   3.730311991597039*^9}, {3.7303120282791862`*^9, 3.730312051017926*^9}, {
   3.730312620887988*^9, 3.730312630038189*^9}, {3.73031324418159*^9, 
   3.730313251336158*^9}, {3.730317358979414*^9, 3.73031739373138*^9}, {
   3.73031886584109*^9, 3.730318882420773*^9}, {3.73031897850744*^9, 
   3.730319022674303*^9}, {3.730322928985365*^9, 3.7303229582217913`*^9}, {
   3.730322992183887*^9, 3.730322992256905*^9}, {3.730323247202938*^9, 
   3.7303232680725927`*^9}, {3.730323319605565*^9, 3.730323319825152*^9}, {
   3.730324015972673*^9, 3.7303240301319723`*^9}, {3.7303801111815033`*^9, 
   3.730380112027327*^9}, {3.7303812672502203`*^9, 3.730381271550727*^9}, {
   3.730381556792259*^9, 3.730381558018606*^9}},
 CellLabel->
  "In[302]:=",ExpressionUUID->"a73eccfc-7ced-433f-9ec3-1933b88a7b7c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"\[Sigma]\"\>", "\[Rule]", "\[Sigma]"}], ",", 
   RowBox[{"\<\"Dimensions[\[Xi]s[0]]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"10", ",", "1000"}], "}"}]}]}], "\[RightAssociation]"}]], "Print",\

 CellChangeTimes->{
  3.730312051488349*^9, {3.7303126239657373`*^9, 3.730312631363284*^9}, 
   3.730313252081458*^9, 3.730317394487925*^9, 3.730318987546782*^9, 
   3.730319023757545*^9, {3.7303229375642138`*^9, 3.7303229600517607`*^9}, 
   3.730322993235654*^9, {3.7303232583973913`*^9, 3.730323273754943*^9}, 
   3.7303233207392187`*^9, {3.730380069957816*^9, 3.730380113394902*^9}, 
   3.7303812723781977`*^9, 3.730381415560006*^9, {3.730381559190649*^9, 
   3.730381584112602*^9}},
 CellLabel->
  "During evaluation of \
In[302]:=",ExpressionUUID->"cc1ef242-26cd-4ec2-a7ce-a6f701aec2c6"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{
  3.730381272387334*^9, 3.730381415572866*^9, {3.730381559204625*^9, 
   3.730381584124818*^9}},
 CellLabel->
  "Out[313]=",ExpressionUUID->"dcc54060-02f3-4f93-9fb8-b190f32604f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check Covariance", "Subsection",
 CellChangeTimes->{{3.730322890573641*^9, 
  3.730322894133196*^9}},ExpressionUUID->"edfbc71e-e1ba-427b-a171-\
be70e151d2b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]", "=", 
     RowBox[{"Mean", "/@", 
      RowBox[{"\[Xi]s", "[", "0", "]"}]}]}], "}"}], ",", "\[Mu]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.730322219052698*^9, 3.7303222256071367`*^9}, {
  3.73032228706205*^9, 3.730322311681993*^9}, {3.7303223590666723`*^9, 
  3.730322587049919*^9}, {3.7303226414574757`*^9, 3.730322685809826*^9}, {
  3.730322733258218*^9, 3.730322737159099*^9}, {3.730322842741798*^9, 
  3.730322845388371*^9}, {3.730323022499826*^9, 3.730323045196677*^9}},
 CellLabel->
  "In[314]:=",ExpressionUUID->"88892e91-bf4a-4dde-b1c3-1a61a775069e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "14021.943295780715`"}], ",", "17014.239014571835`", ",", 
   RowBox[{"-", "18064.16532379207`"}], ",", 
   RowBox[{"-", "6978.019609429303`"}], ",", "2656.865142735538`", ",", 
   "30785.723293162555`", ",", "27080.187895582494`", ",", 
   RowBox[{"-", "16418.050321311515`"}], ",", "22805.714989977463`", ",", 
   RowBox[{"-", "19119.819250472876`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.730323025818746*^9, 3.73032304584706*^9}, 
   3.730323294473716*^9, 3.730323329043951*^9, {3.730380092828538*^9, 
   3.7303801217582817`*^9}, 3.7303812865664883`*^9, 3.730381418624381*^9, 
   3.7303815841984997`*^9},
 CellLabel->
  "Out[314]=",ExpressionUUID->"e78e0c16-c01a-4d55-b54c-f12dc8680abb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]", "=", 
     RowBox[{"Mean", "/@", 
      RowBox[{"\[Xi]s", "[", "0", "]"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Xi]s", "[", "0", "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "All"}], "\[RightDoubleBracket]"}], "-", 
        "\[Mu]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"Diagonal", "[", 
        RowBox[{"r", ".", 
         RowBox[{"r", "\[Transpose]"}]}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"Ns", "-", "1"}], ")"}]}], "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.730322219052698*^9, 3.7303222256071367`*^9}, {
  3.73032228706205*^9, 3.730322311681993*^9}, {3.7303223590666723`*^9, 
  3.730322587049919*^9}, {3.7303226414574757`*^9, 3.730322685809826*^9}, {
  3.730322733258218*^9, 3.730322737159099*^9}, {3.730322842741798*^9, 
  3.730322845388371*^9}, {3.730323061249672*^9, 3.7303230642876873`*^9}, {
  3.730323340074586*^9, 3.7303233426937313`*^9}, {3.7303234016610117`*^9, 
  3.730323401918603*^9}, {3.7303235701161947`*^9, 3.730323573200016*^9}},
 CellLabel->
  "In[315]:=",ExpressionUUID->"8da7ec55-a034-45c5-830d-39821bac6afa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.0311189295152953`*^6", ",", "962364.9165534123`", ",", 
   "1.0019677824994328`*^6", ",", "997723.1120597036`", ",", 
   "1.0062401477874772`*^6", ",", "961099.6449553885`", ",", 
   "1.0048259910756815`*^6", ",", "973222.4323447314`", ",", 
   "1.0032168979427925`*^6", ",", "1.022979061217054`*^6"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.730323066536668*^9, 3.730323303742634*^9, 3.7303233437627277`*^9, 
   3.730323404650215*^9, {3.730323573589549*^9, 3.730323599124888*^9}, 
   3.730380092901782*^9, 3.7303801242543573`*^9, 3.7303812881625137`*^9, 
   3.730381420154091*^9, 3.730381584227551*^9},
 CellLabel->
  "Out[315]=",ExpressionUUID->"cbfb778d-546e-4d71-8d00-b660bd7b4f76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardDeviation", "/@", 
  RowBox[{"\[Xi]s", "[", "0", "]"}]}]], "Input",
 CellChangeTimes->{{3.730323363440913*^9, 3.73032338725931*^9}},
 CellLabel->
  "In[316]:=",ExpressionUUID->"7b1fd37c-df4e-4400-9613-a0e5a97501d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.0311189295152952`*^6", ",", "962364.9165534122`", ",", 
   "1.0019677824994328`*^6", ",", "997723.1120597034`", ",", 
   "1.0062401477874774`*^6", ",", "961099.6449553885`", ",", 
   "1.0048259910756815`*^6", ",", "973222.4323447315`", ",", 
   "1.0032168979427926`*^6", ",", "1.0229790612170539`*^6"}], "}"}]], "Output",\

 CellChangeTimes->{{3.7303233880520573`*^9, 3.730323407328034*^9}, 
   3.730323582765842*^9, 3.730380092967248*^9, 3.7303801285090637`*^9, 
   3.7303812888401127`*^9, 3.73038142207648*^9, 3.730381584282048*^9},
 CellLabel->
  "Out[316]=",ExpressionUUID->"20ae4f33-a69f-4214-9053-0da6191839f7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2D Point Clouds", "Subsection",
 CellChangeTimes->{{3.730318754235407*^9, 
  3.730318767139998*^9}},ExpressionUUID->"6a1b50f1-e698-41e4-8153-\
6575330f3060"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"j", "=", "2"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Xi]s", "[", "0", "]"}], "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "All"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{
           RowBox[{"\[Xi]s", "[", "0", "]"}], "\[LeftDoubleBracket]", 
           RowBox[{"j", ",", "All"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "\[Transpose]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"3", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "\[Sigma]0"}], ",", "\[Sigma]0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "\[Sigma]0"}], ",", "\[Sigma]0"}], "}"}]}], 
          "}"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<Dimension \>\"", "<>", 
             RowBox[{"ToString", "[", "j", "]"}]}], ",", "\"\<\>\""}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<Dimension \>\"", "<>", 
             RowBox[{"ToString", "[", "i", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            "\"\<Particle cloud, two dimensions at a time\>\""}], "}"}]}], 
         "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<i\>\"", ",", 
          RowBox[{"SetterBar", "[", 
           RowBox[{
            RowBox[{"Dynamic", "[", "i", "]"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"\[CapitalMu]", "+", "1"}], "]"}]}], "]"}]}], "}"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"\"\<j\>\"", ",", 
          RowBox[{"SetterBar", "[", 
           RowBox[{
            RowBox[{"Dynamic", "[", "j", "]"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"\[CapitalMu]", "+", "1"}], "]"}]}], "]"}]}], "}"}]}], 
       "}"}], "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7303176073971786`*^9, 3.730318181654797*^9}, {
  3.730318836707231*^9, 3.7303188469934397`*^9}, {3.7303188933649397`*^9, 
  3.730318904530044*^9}, {3.730319031201191*^9, 3.730319073776593*^9}},
 CellLabel->
  "In[317]:=",ExpressionUUID->"de96b957-262a-4995-85f0-c5058cc48c4c"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`i$$ = 1, $CellContext`j$$ = 2}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
       Hold[
        Grid[{{"i", 
           SetterBar[
            Dynamic[$CellContext`i$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
          "j", 
           SetterBar[
            Dynamic[$CellContext`j$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}}]], 
       Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
     450., {207., 214.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {}, "ControllerVariables" :> {}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> ListPlot[
         Transpose[{
           Part[
            $CellContext`\[Xi]s[0], $CellContext`i$$, All], 
           Part[
            $CellContext`\[Xi]s[0], $CellContext`j$$, All]}], PlotRange -> 
         3 {{-$CellContext`\[Sigma]0, $CellContext`\[Sigma]0}, \
{-$CellContext`\[Sigma]0, $CellContext`\[Sigma]0}}, AspectRatio -> 1, Frame -> 
         True, FrameLabel -> {{
            StringJoin["Dimension ", 
             ToString[$CellContext`j$$]], ""}, {
            StringJoin["Dimension ", 
             ToString[$CellContext`i$$]], 
            "Particle cloud, two dimensions at a time"}}], "Specifications" :> {
         Grid[{{"i", 
            SetterBar[
             Dynamic[$CellContext`i$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
           "j", 
            SetterBar[
             Dynamic[$CellContext`j$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}}]}, 
       "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{505., {277., 284.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.7303179968474283`*^9, 3.730318037698*^9}, 
   3.730318086265369*^9, {3.730318165103191*^9, 3.730318182795532*^9}, {
   3.730318937742281*^9, 3.7303189658467627`*^9}, {3.730319037769539*^9, 
   3.7303190743793907`*^9}, {3.730322946660742*^9, 3.730322965196702*^9}, 
   3.7303230045664263`*^9, 3.730380093032268*^9, 3.730380137465108*^9, 
   3.730381293346299*^9, 3.7303814255888042`*^9, 3.730381584347505*^9},
 CellLabel->
  "Out[317]=",ExpressionUUID->"14f20901-9550-4beb-8d89-f036ca0e37d9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3D Point Clouds", "Subsection",
 CellChangeTimes->{{3.730318774385722*^9, 
  3.730318778402279*^9}},ExpressionUUID->"14c0c48c-552b-46da-9a8e-\
0142fdbfe345"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "threeDPointClouds", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"threeDPointClouds", "[", 
    RowBox[{"\[Xi]s_", ",", "\[Sigma]_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"j", "=", "2"}], ",", 
       RowBox[{"k", "=", "3"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"Graphics3D", "[", 
        RowBox[{
         RowBox[{"Point", "/@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Xi]s", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "All"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"\[Xi]s", "\[LeftDoubleBracket]", 
               RowBox[{"j", ",", "All"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"\[Xi]s", "\[LeftDoubleBracket]", 
               RowBox[{"k", ",", "All"}], "\[RightDoubleBracket]"}]}], "}"}], 
            "\[Transpose]"}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Axes", "\[Rule]", "True"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<i: \>\"", "<>", 
             RowBox[{"ToString", "[", "i", "]"}]}], ",", 
            RowBox[{"\"\<j: \>\"", "<>", 
             RowBox[{"ToString", "[", "j", "]"}]}], ",", 
            RowBox[{"\"\<k: \>\"", "<>", 
             RowBox[{"ToString", "[", "k", "]"}]}]}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"3", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "\[Sigma]"}], ",", "\[Sigma]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "\[Sigma]"}], ",", "\[Sigma]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "\[Sigma]"}], ",", "\[Sigma]"}], "}"}]}], 
            "}"}]}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Grid", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<i\>\"", ",", 
            RowBox[{"SetterBar", "[", 
             RowBox[{
              RowBox[{"Dynamic", "[", "i", "]"}], ",", 
              RowBox[{"Range", "[", 
               RowBox[{"\[CapitalMu]", "+", "1"}], "]"}]}], "]"}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<j\>\"", ",", 
            RowBox[{"SetterBar", "[", 
             RowBox[{
              RowBox[{"Dynamic", "[", "j", "]"}], ",", 
              RowBox[{"Range", "[", 
               RowBox[{"\[CapitalMu]", "+", "1"}], "]"}]}], "]"}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<k\>\"", ",", 
            RowBox[{"SetterBar", "[", 
             RowBox[{
              RowBox[{"Dynamic", "[", "k", "]"}], ",", 
              RowBox[{"Range", "[", 
               RowBox[{"\[CapitalMu]", "+", "1"}], "]"}]}], "]"}]}], "}"}]}], 
         "}"}], "]"}]}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"threeDPointClouds", "[", 
  RowBox[{
   RowBox[{"\[Xi]s", "[", "0", "]"}], ",", "\[Sigma]0"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7303176073971786`*^9, 3.730318181654797*^9}, {
  3.730318236094146*^9, 3.730318246175606*^9}, {3.7303182774444103`*^9, 
  3.7303184472761*^9}, {3.730318484396112*^9, 3.730318603519816*^9}, {
  3.730318636419531*^9, 3.730318741660398*^9}, {3.7303187885194893`*^9, 
  3.730318793417272*^9}, {3.7303189277505217`*^9, 3.7303189323693247`*^9}, {
  3.7303190832539988`*^9, 3.73031910778214*^9}, {3.730381021068585*^9, 
  3.7303811221641083`*^9}},
 CellLabel->
  "In[318]:=",ExpressionUUID->"246b9295-d5de-4e9c-b619-c977f1992771"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`i$$ = 1, $CellContext`j$$ = 
  2, $CellContext`k$$ = 3}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
       Hold[
        Grid[{{"i", 
           SetterBar[
            Dynamic[$CellContext`i$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
          "j", 
           SetterBar[
            Dynamic[$CellContext`j$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
          "k", 
           SetterBar[
            Dynamic[$CellContext`k$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}}]], 
       Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
     450., {210., 216.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {}, "ControllerVariables" :> {}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Graphics3D[
         Map[Point, 
          Transpose[{
            Part[CompressedData["
1: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
cNj9nI6ahRZ2OgvO3isaIN78nftZLrHBCy8bnINIsrDn6TK75lESMPn86kmb
AyDE3r9ZKN4EH+/ZZH3ZqwR9M511283YcH9JtmuqmiQY/wlIZanhx8rJq6v+
IQYbdbu+HCPLj7kSuknDdX+JQHdSGcMnBSzvO+PQVSuKLOy1qwNfdGCvMYfE
5EVp1OK+2/loLy9kWjpZno2jg5JvT7Zz3zXEVV3DgeUjAqg43iZ/Y54KnI3n
q05W6sJ+7qvdI63G+PtrhO7hVH0sk1Ouft0ujos+IYnfNNVRyTx3oSBJFw/L
JRzrlQZgI2jWw4t/iO+/ZRMrdypB0tK4V0YvOyw5d77dwyCNP3UzlNcclLE7
mJ6JJUgdsqqWmJY+iqDWCVZZfxl+vO7+Y8dmWQp81i8fmkj4R6urZ7qoXb4J
lDqPJRSR1SGHryNcw3aM8HUM6lyJFoBXGs+t9QaF0fzKcwUG13XaTgHrqpV2
SXj4WyLEqVQFT2ide7PjKx0qya6ULnBTwbWDnr1JRwynbQp+jd3RgGdbvy/e
ntIA24sRh64Ya6PnbZcRHzl5kIv+9Fv+EwmK0iKymI3N4fVsjiWTOBVuvfMP
zx9jgvRt38Ckkh1pt3oZZTzMgcLWlx5E/5NIVFjNHObXh8/Nsd+3gzrMMdwt
dS00xIiKhjIGtxkieGtPc/+CKqRZ+sbWPpmjRR3m9rtvLA6J9/UfBg6bwpf9
BYvJ/8wxpZY0PcfGD9tbrmfpb6dg2unCazfitSD6Ef9xszuiOHn3Zo2LiArY
zDrk5e/XRq75Tz5z1kpwrsRF/ILaX8KrudiGOKgBRiedfLjZTBHPmiWLD/GD
yMjutQw1VWBh3EQUPKPH+K/mS/xNdLhHSris+TAL1gW7yr65aInnZFSt6Mym
iPGpvPVPLNMEZ5etYoAwBSs+iez9wrXhIfUTLrOWMnD1NqPLB0tV+PNle03Q
NlMQcrB48rTYHCRN63yTZoVRJJvxQiS7HFiszq+1MohCtc+ODq9YC9CxUeif
XJYCUzrXArYiOeydj+jIrFCGxE3fnrIWawC16NCk1/tO4sp8o3xzhCnMUEsj
OgbUoXGXPJmfj4DGZQe5it8/Cf9Dh8m1KhoQPTJwcSabin8VI4SWqxkhcfak
xDcZUXj786yK/HM9vP5BqPprsC7+uF4VcG3Dj167NEn6sI/T/kQY0DeuaGH8
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
j3Qug+c1rjKjqErDZLCmOXiN0fwmbylA3qXcMza7ddC5eWKGP4kKl15W1XGV
y+HFZunSpctG//+P2rTLc5aIL95h/dSnj/YwLvXk4+h1wrT7KqZ+4Ed++nW7
emFj5OlTW1fUNYGSQTurkvkwWq5EToWkAQlr3OhUedLFQejj+bWT5jroYXeD
7RuvOWQt6NtfkdaA//4QinFXSGAztbTT20gFth2SmDneLA7jP+3ejSmrwtnZ
KJtrKmwb67eTz2GmwFlLyTuZafxw1VzKr33OFMbCDZg3O6jg8LaVDPdHasDC
Ef3ofrkSlA1E7H6Qpw/Do7mzr63kgLPDoqfksT580spi1Lw3TYviTLY+U0nF
ar7X/VnSOug3GrT7IYc2ThlcMzl0mgqXK1UuXmOQwLbCSv7O+3Lofigz/MFn
KkZkhDYMJ1sga2PnQYakRwRjMcs20pQqBJxh/5xaYAryud9fR8tT4G/XW+tm
TgMwJQc7WLqzQLCes8xBRyPcTMk3WkwRx33Bfqf2+5Lh9NKx650BinjFrKJA
M1oO4sLoioMrmTE/XThN7SY/JMRe+rUeKoRvFNtcDrU30hy+Nd5T+qkLIWmP
NDQ2eKijvCuSl6oGorPXyZ+NtNGDVfllh704ykx7r9paERBtvFakK6IA5k92
7PKfEAMfthPvfw/poonvotZkhSB4a5d2N0iJYNq9TYLkF7J4by2t1cBcB6Jl
bmZPdapinJ1V4N41I7BeYkj//lkH1EXf0N2KZQaRizs+rb+Uw6L1kxYhx3Sh
Nv3FmS1/RCDJgSOJpKKLw9mSjR3r4sA/W99AcdECJ/83Aer7SLDQdMcKJZXA
7+XZrfHpFJAUW7jMOQm4h86d3QgUocXLmaPAmwRn5EIpH+6T4b+qa7+G842B
7mmywZh4B+FyeNXE4cA/Gt+riGbd7Fmi7aRTcFeTDoScfpItekAbDRav8RXv
WiXC+4bTDoUSKL7rfC1rNkCcxuPTRvzaOCQebXb/AAV93M+VTFX10k5N5Kay
pmrh6rnKPv0YFXxr+GTZTlUA09J3u9zJN0XSbKfM+zPCqLk/+2jBUw1oouNb
IlNMgbyY2muZb4DXt9AkGJ6IYav6qtl6txFeZn95ZVhDFdcYI2SokvzgvsVr
YAsHDyw/Ulc8MsoCb9fEORtuaGLXZRlHWpAODv5kyZ3bbQNBh8eUKNc0Mcki
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
Syfhfg4T28lLEjA2EaV0eVAHjnIUpjVbGEMAJ1dR4XE5nJPm7L6mQsOOXeVS
vmK60KTicfh0kBC4mv2pd/9KQ5696c3cX0zgX8Ru9dfshkhXO2PzK04fimyj
lr0OaULOwS27537q4nSXzsIGsEPuP4YLD8uskf7NQe6AODt8rEq53GOngK5B
+lv5MsTQ9eOX/gduxujd9+nnzlMaaFYl48LKN8OHIseatnGrgejtwMep27lg
9Mny352EMg64fs1aXOHEc4Lamq7sIiCjkvj2CH2GkK/fL/WGNcrq85f69kfE
EFxleFWatpKwROx9VqqXPoTznkiK7zQBtq35kT4bJXCjxuzBtX10ePeuVEmk
Wh3k1nMIblkyAK/yY1IyrnwwutwQsigtgTWHbMKrnvUSpk90eG+3GuOhqnVR
6w/SsEi4WED+xRLh+DHYQ29kgbDh/Xpph7wc2lofOT/oO8+ydppzyvmlgsu/
r+q3ryJD/cVHJa/9ZljDv7m9VT1VoUo74KSlqQksC/xrL7CnI+dJyy1ydlb4
++WXdO6fNJgyxInW1hkizvF44uXMaZbKC8dRzU2G4LNfueFjoiD88m5q2SFA
wWtDMcp/Y2j4y8xQSfwTHe8UuuaKlGtgvco0Bk0aAY2fO84+UBdjnKbURbxt
sWBAc4UhdUFQj39kgW4O9oV8udxcC8THId6kKJYAGKnHyFCOfmad1abVLYQI
wgG17KUmJ1VYl7otn1trjFibFF45RJpn8XeST1DkBZHvrpz/un4L5NmTclxd
QQvqDr9w0oiggsXtbO5EZzW8HLG2VSJQEmTi0ytp0lQ0erOqtPgaFVSMbPhK
BsTxv1W5d8l+Kz4cqd1UyK4Dex1d59JLzTGQ75yXcSAf7PvmUTETI46f7W5M
wx4TUIn+vebN7EtCWZN4WPxMG932dbR/TJCHmaH7z8yCxcGkiOJOkVrhPa+o
5ohXTJioO/p11ckFYsavkawdaoRZtDfX0f4zawM9rXfCBLBkAD5xLlFga3KU
JznXBJ8+j5OLNlbFdYw3SyozNCj6syvIrGKJ2J1CObb/ihlSVRKfre8jw9KN
xobmc5SVHHuZ8e26IvofeRKef3+EZVVzxOZwuia0kWZXp6w3xyD2nk1JHmLA
ZFAtLpxSQPaHE4tzfXJYe6qxndeBDle27yjLe2cKY8XrDE8mmOGlK2ZRm6IJ
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
P/PFyys=
             "], $CellContext`i$$, All], 
            Part[CompressedData["
1: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
cNj9nI6ahRZ2OgvO3isaIN78nftZLrHBCy8bnINIsrDn6TK75lESMPn86kmb
AyDE3r9ZKN4EH+/ZZH3ZqwR9M511283YcH9JtmuqmiQY/wlIZanhx8rJq6v+
IQYbdbu+HCPLj7kSuknDdX+JQHdSGcMnBSzvO+PQVSuKLOy1qwNfdGCvMYfE
5EVp1OK+2/loLy9kWjpZno2jg5JvT7Zz3zXEVV3DgeUjAqg43iZ/Y54KnI3n
q05W6sJ+7qvdI63G+PtrhO7hVH0sk1Ouft0ujos+IYnfNNVRyTx3oSBJFw/L
JRzrlQZgI2jWw4t/iO+/ZRMrdypB0tK4V0YvOyw5d77dwyCNP3UzlNcclLE7
mJ6JJUgdsqqWmJY+iqDWCVZZfxl+vO7+Y8dmWQp81i8fmkj4R6urZ7qoXb4J
lDqPJRSR1SGHryNcw3aM8HUM6lyJFoBXGs+t9QaF0fzKcwUG13XaTgHrqpV2
SXj4WyLEqVQFT2ide7PjKx0qya6ULnBTwbWDnr1JRwynbQp+jd3RgGdbvy/e
ntIA24sRh64Ya6PnbZcRHzl5kIv+9Fv+EwmK0iKymI3N4fVsjiWTOBVuvfMP
zx9jgvRt38Ckkh1pt3oZZTzMgcLWlx5E/5NIVFjNHObXh8/Nsd+3gzrMMdwt
dS00xIiKhjIGtxkieGtPc/+CKqRZ+sbWPpmjRR3m9rtvLA6J9/UfBg6bwpf9
BYvJ/8wxpZY0PcfGD9tbrmfpb6dg2unCazfitSD6Ef9xszuiOHn3Zo2LiArY
zDrk5e/XRq75Tz5z1kpwrsRF/ILaX8KrudiGOKgBRiedfLjZTBHPmiWLD/GD
yMjutQw1VWBh3EQUPKPH+K/mS/xNdLhHSris+TAL1gW7yr65aInnZFSt6Mym
iPGpvPVPLNMEZ5etYoAwBSs+iez9wrXhIfUTLrOWMnD1NqPLB0tV+PNle03Q
NlMQcrB48rTYHCRN63yTZoVRJJvxQiS7HFiszq+1MohCtc+ODq9YC9CxUeif
XJYCUzrXArYiOeydj+jIrFCGxE3fnrIWawC16NCk1/tO4sp8o3xzhCnMUEsj
OgbUoXGXPJmfj4DGZQe5it8/Cf9Dh8m1KhoQPTJwcSabin8VI4SWqxkhcfak
xDcZUXj786yK/HM9vP5BqPprsC7+uF4VcG3Dj167NEn6sI/T/kQY0DeuaGH8
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
j3Qug+c1rjKjqErDZLCmOXiN0fwmbylA3qXcMza7ddC5eWKGP4kKl15W1XGV
y+HFZunSpctG//+P2rTLc5aIL95h/dSnj/YwLvXk4+h1wrT7KqZ+4Ed++nW7
emFj5OlTW1fUNYGSQTurkvkwWq5EToWkAQlr3OhUedLFQejj+bWT5jroYXeD
7RuvOWQt6NtfkdaA//4QinFXSGAztbTT20gFth2SmDneLA7jP+3ejSmrwtnZ
KJtrKmwb67eTz2GmwFlLyTuZafxw1VzKr33OFMbCDZg3O6jg8LaVDPdHasDC
Ef3ofrkSlA1E7H6Qpw/Do7mzr63kgLPDoqfksT580spi1Lw3TYviTLY+U0nF
ar7X/VnSOug3GrT7IYc2ThlcMzl0mgqXK1UuXmOQwLbCSv7O+3Lofigz/MFn
KkZkhDYMJ1sga2PnQYakRwRjMcs20pQqBJxh/5xaYAryud9fR8tT4G/XW+tm
TgMwJQc7WLqzQLCes8xBRyPcTMk3WkwRx33Bfqf2+5Lh9NKx650BinjFrKJA
M1oO4sLoioMrmTE/XThN7SY/JMRe+rUeKoRvFNtcDrU30hy+Nd5T+qkLIWmP
NDQ2eKijvCuSl6oGorPXyZ+NtNGDVfllh704ykx7r9paERBtvFakK6IA5k92
7PKfEAMfthPvfw/poonvotZkhSB4a5d2N0iJYNq9TYLkF7J4by2t1cBcB6Jl
bmZPdapinJ1V4N41I7BeYkj//lkH1EXf0N2KZQaRizs+rb+Uw6L1kxYhx3Sh
Nv3FmS1/RCDJgSOJpKKLw9mSjR3r4sA/W99AcdECJ/83Aer7SLDQdMcKJZXA
7+XZrfHpFJAUW7jMOQm4h86d3QgUocXLmaPAmwRn5EIpH+6T4b+qa7+G842B
7mmywZh4B+FyeNXE4cA/Gt+riGbd7Fmi7aRTcFeTDoScfpItekAbDRav8RXv
WiXC+4bTDoUSKL7rfC1rNkCcxuPTRvzaOCQebXb/AAV93M+VTFX10k5N5Kay
pmrh6rnKPv0YFXxr+GTZTlUA09J3u9zJN0XSbKfM+zPCqLk/+2jBUw1oouNb
IlNMgbyY2muZb4DXt9AkGJ6IYav6qtl6txFeZn95ZVhDFdcYI2SokvzgvsVr
YAsHDyw/Ulc8MsoCb9fEORtuaGLXZRlHWpAODv5kyZ3bbQNBh8eUKNc0Mcki
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
Syfhfg4T28lLEjA2EaV0eVAHjnIUpjVbGEMAJ1dR4XE5nJPm7L6mQsOOXeVS
vmK60KTicfh0kBC4mv2pd/9KQ5696c3cX0zgX8Ru9dfshkhXO2PzK04fimyj
lr0OaULOwS27537q4nSXzsIGsEPuP4YLD8uskf7NQe6AODt8rEq53GOngK5B
+lv5MsTQ9eOX/gduxujd9+nnzlMaaFYl48LKN8OHIseatnGrgejtwMep27lg
9Mny352EMg64fs1aXOHEc4Lamq7sIiCjkvj2CH2GkK/fL/WGNcrq85f69kfE
EFxleFWatpKwROx9VqqXPoTznkiK7zQBtq35kT4bJXCjxuzBtX10ePeuVEmk
Wh3k1nMIblkyAK/yY1IyrnwwutwQsigtgTWHbMKrnvUSpk90eG+3GuOhqnVR
6w/SsEi4WED+xRLh+DHYQ29kgbDh/Xpph7wc2lofOT/oO8+ydppzyvmlgsu/
r+q3ryJD/cVHJa/9ZljDv7m9VT1VoUo74KSlqQksC/xrL7CnI+dJyy1ydlb4
++WXdO6fNJgyxInW1hkizvF44uXMaZbKC8dRzU2G4LNfueFjoiD88m5q2SFA
wWtDMcp/Y2j4y8xQSfwTHe8UuuaKlGtgvco0Bk0aAY2fO84+UBdjnKbURbxt
sWBAc4UhdUFQj39kgW4O9oV8udxcC8THId6kKJYAGKnHyFCOfmad1abVLYQI
wgG17KUmJ1VYl7otn1trjFibFF45RJpn8XeST1DkBZHvrpz/un4L5NmTclxd
QQvqDr9w0oiggsXtbO5EZzW8HLG2VSJQEmTi0ytp0lQ0erOqtPgaFVSMbPhK
BsTxv1W5d8l+Kz4cqd1UyK4Dex1d59JLzTGQ75yXcSAf7PvmUTETI46f7W5M
wx4TUIn+vebN7EtCWZN4WPxMG932dbR/TJCHmaH7z8yCxcGkiOJOkVrhPa+o
5ohXTJioO/p11ckFYsavkawdaoRZtDfX0f4zawM9rXfCBLBkAD5xLlFga3KU
JznXBJ8+j5OLNlbFdYw3SyozNCj6syvIrGKJ2J1CObb/ihlSVRKfre8jw9KN
xobmc5SVHHuZ8e26IvofeRKef3+EZVVzxOZwuia0kWZXp6w3xyD2nk1JHmLA
ZFAtLpxSQPaHE4tzfXJYe6qxndeBDle27yjLe2cKY8XrDE8mmOGlK2ZRm6IJ
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
P/PFyys=
             "], $CellContext`j$$, All], 
            Part[CompressedData["
1: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
cNj9nI6ahRZ2OgvO3isaIN78nftZLrHBCy8bnINIsrDn6TK75lESMPn86kmb
AyDE3r9ZKN4EH+/ZZH3ZqwR9M511283YcH9JtmuqmiQY/wlIZanhx8rJq6v+
IQYbdbu+HCPLj7kSuknDdX+JQHdSGcMnBSzvO+PQVSuKLOy1qwNfdGCvMYfE
5EVp1OK+2/loLy9kWjpZno2jg5JvT7Zz3zXEVV3DgeUjAqg43iZ/Y54KnI3n
q05W6sJ+7qvdI63G+PtrhO7hVH0sk1Ouft0ujos+IYnfNNVRyTx3oSBJFw/L
JRzrlQZgI2jWw4t/iO+/ZRMrdypB0tK4V0YvOyw5d77dwyCNP3UzlNcclLE7
mJ6JJUgdsqqWmJY+iqDWCVZZfxl+vO7+Y8dmWQp81i8fmkj4R6urZ7qoXb4J
lDqPJRSR1SGHryNcw3aM8HUM6lyJFoBXGs+t9QaF0fzKcwUG13XaTgHrqpV2
SXj4WyLEqVQFT2ide7PjKx0qya6ULnBTwbWDnr1JRwynbQp+jd3RgGdbvy/e
ntIA24sRh64Ya6PnbZcRHzl5kIv+9Fv+EwmK0iKymI3N4fVsjiWTOBVuvfMP
zx9jgvRt38Ckkh1pt3oZZTzMgcLWlx5E/5NIVFjNHObXh8/Nsd+3gzrMMdwt
dS00xIiKhjIGtxkieGtPc/+CKqRZ+sbWPpmjRR3m9rtvLA6J9/UfBg6bwpf9
BYvJ/8wxpZY0PcfGD9tbrmfpb6dg2unCazfitSD6Ef9xszuiOHn3Zo2LiArY
zDrk5e/XRq75Tz5z1kpwrsRF/ILaX8KrudiGOKgBRiedfLjZTBHPmiWLD/GD
yMjutQw1VWBh3EQUPKPH+K/mS/xNdLhHSris+TAL1gW7yr65aInnZFSt6Mym
iPGpvPVPLNMEZ5etYoAwBSs+iez9wrXhIfUTLrOWMnD1NqPLB0tV+PNle03Q
NlMQcrB48rTYHCRN63yTZoVRJJvxQiS7HFiszq+1MohCtc+ODq9YC9CxUeif
XJYCUzrXArYiOeydj+jIrFCGxE3fnrIWawC16NCk1/tO4sp8o3xzhCnMUEsj
OgbUoXGXPJmfj4DGZQe5it8/Cf9Dh8m1KhoQPTJwcSabin8VI4SWqxkhcfak
xDcZUXj786yK/HM9vP5BqPprsC7+uF4VcG3Dj167NEn6sI/T/kQY0DeuaGH8
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
j3Qug+c1rjKjqErDZLCmOXiN0fwmbylA3qXcMza7ddC5eWKGP4kKl15W1XGV
y+HFZunSpctG//+P2rTLc5aIL95h/dSnj/YwLvXk4+h1wrT7KqZ+4Ed++nW7
emFj5OlTW1fUNYGSQTurkvkwWq5EToWkAQlr3OhUedLFQejj+bWT5jroYXeD
7RuvOWQt6NtfkdaA//4QinFXSGAztbTT20gFth2SmDneLA7jP+3ejSmrwtnZ
KJtrKmwb67eTz2GmwFlLyTuZafxw1VzKr33OFMbCDZg3O6jg8LaVDPdHasDC
Ef3ofrkSlA1E7H6Qpw/Do7mzr63kgLPDoqfksT580spi1Lw3TYviTLY+U0nF
ar7X/VnSOug3GrT7IYc2ThlcMzl0mgqXK1UuXmOQwLbCSv7O+3Lofigz/MFn
KkZkhDYMJ1sga2PnQYakRwRjMcs20pQqBJxh/5xaYAryud9fR8tT4G/XW+tm
TgMwJQc7WLqzQLCes8xBRyPcTMk3WkwRx33Bfqf2+5Lh9NKx650BinjFrKJA
M1oO4sLoioMrmTE/XThN7SY/JMRe+rUeKoRvFNtcDrU30hy+Nd5T+qkLIWmP
NDQ2eKijvCuSl6oGorPXyZ+NtNGDVfllh704ykx7r9paERBtvFakK6IA5k92
7PKfEAMfthPvfw/poonvotZkhSB4a5d2N0iJYNq9TYLkF7J4by2t1cBcB6Jl
bmZPdapinJ1V4N41I7BeYkj//lkH1EXf0N2KZQaRizs+rb+Uw6L1kxYhx3Sh
Nv3FmS1/RCDJgSOJpKKLw9mSjR3r4sA/W99AcdECJ/83Aer7SLDQdMcKJZXA
7+XZrfHpFJAUW7jMOQm4h86d3QgUocXLmaPAmwRn5EIpH+6T4b+qa7+G842B
7mmywZh4B+FyeNXE4cA/Gt+riGbd7Fmi7aRTcFeTDoScfpItekAbDRav8RXv
WiXC+4bTDoUSKL7rfC1rNkCcxuPTRvzaOCQebXb/AAV93M+VTFX10k5N5Kay
pmrh6rnKPv0YFXxr+GTZTlUA09J3u9zJN0XSbKfM+zPCqLk/+2jBUw1oouNb
IlNMgbyY2muZb4DXt9AkGJ6IYav6qtl6txFeZn95ZVhDFdcYI2SokvzgvsVr
YAsHDyw/Ulc8MsoCb9fEORtuaGLXZRlHWpAODv5kyZ3bbQNBh8eUKNc0Mcki
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
Syfhfg4T28lLEjA2EaV0eVAHjnIUpjVbGEMAJ1dR4XE5nJPm7L6mQsOOXeVS
vmK60KTicfh0kBC4mv2pd/9KQ5696c3cX0zgX8Ru9dfshkhXO2PzK04fimyj
lr0OaULOwS27537q4nSXzsIGsEPuP4YLD8uskf7NQe6AODt8rEq53GOngK5B
+lv5MsTQ9eOX/gduxujd9+nnzlMaaFYl48LKN8OHIseatnGrgejtwMep27lg
9Mny352EMg64fs1aXOHEc4Lamq7sIiCjkvj2CH2GkK/fL/WGNcrq85f69kfE
EFxleFWatpKwROx9VqqXPoTznkiK7zQBtq35kT4bJXCjxuzBtX10ePeuVEmk
Wh3k1nMIblkyAK/yY1IyrnwwutwQsigtgTWHbMKrnvUSpk90eG+3GuOhqnVR
6w/SsEi4WED+xRLh+DHYQ29kgbDh/Xpph7wc2lofOT/oO8+ydppzyvmlgsu/
r+q3ryJD/cVHJa/9ZljDv7m9VT1VoUo74KSlqQksC/xrL7CnI+dJyy1ydlb4
++WXdO6fNJgyxInW1hkizvF44uXMaZbKC8dRzU2G4LNfueFjoiD88m5q2SFA
wWtDMcp/Y2j4y8xQSfwTHe8UuuaKlGtgvco0Bk0aAY2fO84+UBdjnKbURbxt
sWBAc4UhdUFQj39kgW4O9oV8udxcC8THId6kKJYAGKnHyFCOfmad1abVLYQI
wgG17KUmJ1VYl7otn1trjFibFF45RJpn8XeST1DkBZHvrpz/un4L5NmTclxd
QQvqDr9w0oiggsXtbO5EZzW8HLG2VSJQEmTi0ytp0lQ0erOqtPgaFVSMbPhK
BsTxv1W5d8l+Kz4cqd1UyK4Dex1d59JLzTGQ75yXcSAf7PvmUTETI46f7W5M
wx4TUIn+vebN7EtCWZN4WPxMG932dbR/TJCHmaH7z8yCxcGkiOJOkVrhPa+o
5ohXTJioO/p11ckFYsavkawdaoRZtDfX0f4zawM9rXfCBLBkAD5xLlFga3KU
JznXBJ8+j5OLNlbFdYw3SyozNCj6syvIrGKJ2J1CObb/ihlSVRKfre8jw9KN
xobmc5SVHHuZ8e26IvofeRKef3+EZVVzxOZwuia0kWZXp6w3xyD2nk1JHmLA
ZFAtLpxSQPaHE4tzfXJYe6qxndeBDle27yjLe2cKY8XrDE8mmOGlK2ZRm6IJ
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
P/PFyys=
             "], $CellContext`k$$, All]}]], Axes -> True, 
         AspectRatio -> 1, AxesLabel -> {
           StringJoin["i: ", 
            ToString[$CellContext`i$$]], 
           StringJoin["j: ", 
            ToString[$CellContext`j$$]], 
           StringJoin["k: ", 
            ToString[$CellContext`k$$]]}, PlotRange -> 
         3 {{-1.*^6, 1.*^6}, {-1.*^6, 1.*^6}, {-1.*^6, 1.*^6}}], 
       "Specifications" :> {
         Grid[{{"i", 
            SetterBar[
             Dynamic[$CellContext`i$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
           "j", 
            SetterBar[
             Dynamic[$CellContext`j$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
           "k", 
            SetterBar[
             Dynamic[$CellContext`k$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}}]}, 
       "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{505., {295., 302.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.730381126235525*^9, 3.7303812964286537`*^9, 
  3.7303814277320747`*^9, 3.7303815844882298`*^9},
 CellLabel->
  "Out[320]=",ExpressionUUID->"6ff85017-e1e6-43df-bcbf-d0cd56ac7a8e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Inspect the Initial Particles", "Subsection",
 CellChangeTimes->{{3.730381321102253*^9, 
  3.730381343446248*^9}},ExpressionUUID->"c614e1cd-5ba6-4a38-9baf-\
484ccee08549"],

Cell[TextData[{
 "Get a columns of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Xi]s", "[", "0", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "8aece158-c094-4cbc-8099-1b64f98fb100"],
 ": "
}], "Text",
 CellChangeTimes->{{3.730315881330007*^9, 
  3.7303159093820133`*^9}},ExpressionUUID->"06f27e96-df14-45aa-938f-\
b961eb587335"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\[Xi]col", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Xi]col", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"n_", "/;", 
      RowBox[{"(", 
       RowBox[{"1", "\[LessEqual]", "n", "\[LessEqual]", "Ns"}], ")"}]}]}], 
    "]"}], ":=", 
   RowBox[{"List", "/@", 
    RowBox[{
     RowBox[{"\[Xi]s", "[", "t", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "n"}], "\[RightDoubleBracket]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Xi]col", "[", 
   RowBox[{"0", ",", "41"}], "]"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.73031578739823*^9, 3.730315859651759*^9}, {
  3.73031592312326*^9, 3.7303160169997587`*^9}, {3.730316301961196*^9, 
  3.730316303501944*^9}, {3.7303192450584917`*^9, 3.730319252583686*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"1a0178b0-6036-484b-91b9-6475a82c76e2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.25012827876349`*^6"},
     {
      RowBox[{"-", "627606.7097855875`"}]},
     {
      RowBox[{"-", "513136.3454803021`"}]},
     {"703039.9570935491`"},
     {"1.064246834442055`*^6"},
     {"588727.9794480408`"},
     {"2.073717370253557`*^6"},
     {
      RowBox[{"-", "615100.5595537463`"}]},
     {"608979.3161320147`"},
     {
      RowBox[{"-", "618246.1763962223`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.730315851118787*^9, 3.7303158603742657`*^9}, 
   3.7303159117120533`*^9, {3.730315978172*^9, 3.730315987097087*^9}, 
   3.7303160175706043`*^9, 3.730316304023273*^9, {3.7303192472999277`*^9, 
   3.730319253964961*^9}, 3.7303800935696373`*^9, 3.7303801696912403`*^9, 
   3.730381447160857*^9, 3.730381584651071*^9},
 CellLabel->
  "Out[323]//MatrixForm=",ExpressionUUID->"198f5e0f-6058-4a4b-8c0f-\
f90a21440402"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"partialsFn", "[", 
     RowBox[{"m", ",", 
      RowBox[{"bts", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
      "]"}], "//", "MatrixForm"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "1"}], "}"}], ",", "0", ",", 
     RowBox[{"\[CapitalMu]", "+", "1"}], ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Open\>\"", ",", "\"\<Labeled\>\""}], "}"}]}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.730316122444306*^9, 3.7303162799477158`*^9}},
 CellLabel->
  "In[324]:=",ExpressionUUID->"6fcc3160-1040-4ffc-899d-a85d2c57a3a4"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`m$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`m$$], 1}, 0, 10, 1}}, Typeset`size$$ = {
    137., {102.91754150390625`, 110.08245849609375`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`m$25443$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`m$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`m$$, $CellContext`m$25443$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> MatrixForm[
        $CellContext`partialsFn[$CellContext`m$$, 
         Part[$CellContext`bts, 1]]], 
      "Specifications" :> {{{$CellContext`m$$, 1}, 0, 10, 1, 
         Appearance -> {"Open", "Labeled"}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{361., {174., 181.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.730316146347814*^9, 3.730316224883396*^9}, 
   3.730316280387918*^9, 3.7303800936335783`*^9, 3.730380179886977*^9, 
   3.730381448885002*^9, 3.730381584717258*^9},
 CellLabel->
  "Out[324]=",ExpressionUUID->"abad7b01-f88a-4347-9c92-d6002f2be18b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"partialsFn", "[", 
   RowBox[{"\[CapitalMu]", ",", 
    RowBox[{"bts", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
   "]"}], ".", 
  RowBox[{"\[Xi]col", "[", 
   RowBox[{"0", ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.730316316187313*^9, 3.730316348549077*^9}},
 CellLabel->
  "In[325]:=",ExpressionUUID->"2ac7211d-fbe2-4a0c-a19b-ac53f0f41926"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "119629.04800485715`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "25863.129985317068`"}], "}"}], ",", 
   RowBox[{"{", "69443.25970680085`", "}"}], ",", 
   RowBox[{"{", "175702.2056748848`", "}"}], ",", 
   RowBox[{"{", "299957.7577843878`", "}"}], ",", 
   RowBox[{"{", "441984.76427719573`", "}"}], ",", 
   RowBox[{"{", "585736.3492220659`", "}"}], ",", 
   RowBox[{"{", "684654.2306420815`", "}"}], ",", 
   RowBox[{"{", "637613.1719972359`", "}"}], ",", 
   RowBox[{"{", "251571.15336583578`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.730316349721109*^9, 3.7303800937354927`*^9, 
  3.730380190196931*^9, 3.7303814505451736`*^9, 3.7303815848175707`*^9},
 CellLabel->
  "Out[325]=",ExpressionUUID->"84b30e27-d89d-409a-a6f1-86054d1059ee"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Observations and Residuals", "Subsection",
 CellChangeTimes->{{3.730381357604554*^9, 3.7303813590875483`*^9}, {
  3.730381480909913*^9, 
  3.7303814836403103`*^9}},ExpressionUUID->"c7b51503-6a6c-4887-be83-\
112940424c06"],

Cell["\<\
Observations are constant with time, but we include a time parameter just for \
fun. The particle cloud changes with time.\
\>", "Text",
 CellChangeTimes->{{3.730316823411021*^9, 3.730316838355496*^9}, {
  3.7303168699607697`*^9, 3.73031687723841*^9}, {3.7303173238587303`*^9, 
  3.730317339509391*^9}, {3.730380197491593*^9, 
  3.730380198774478*^9}},ExpressionUUID->"0d77ad90-153b-46ec-9e7c-\
2c7c6c185e85"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\[Zeta]col", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Zeta]col", "[", "t_", "]"}], ":=", 
  RowBox[{"List", "/@", 
   RowBox[{
   "bts", "\[LeftDoubleBracket]", "2", 
    "\[RightDoubleBracket]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7303167103329144`*^9, 3.730316767788656*^9}},
 CellLabel->
  "In[326]:=",ExpressionUUID->"ab4afc85-cda5-4ccb-9d8d-a5841e90b722"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "residuals", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"residuals", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"n_", "/;", 
      RowBox[{"1", "\[LessEqual]", "n", "\[LessEqual]", "Ns"}]}]}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"partialsFn", "[", 
      RowBox[{"\[CapitalMu]", ",", 
       RowBox[{
       "bts", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "]"}],
      ".", 
     RowBox[{"\[Xi]col", "[", 
      RowBox[{"t", ",", "n"}], "]"}]}], "-", 
    RowBox[{"\[Zeta]col", "[", "t", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.73031679314316*^9, 3.730316799479423*^9}, {
  3.7303168946352987`*^9, 3.7303169552598886`*^9}},
 CellLabel->
  "In[328]:=",ExpressionUUID->"c70268c1-e8b2-4e50-92a5-18f9f14fd1e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sum of Squared Residuals (SSR)", "Subsection",
 CellChangeTimes->{{3.730317194789525*^9, 3.7303171997993803`*^9}, {
  3.73031973934348*^9, 
  3.7303197410221453`*^9}},ExpressionUUID->"c05ae3ce-3535-4067-8ab0-\
8cde7ddcbdb8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "ssr", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ssr", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"n_", "/;", 
      RowBox[{"1", "\[LessEqual]", "n", "\[LessEqual]", "Ns"}]}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"residuals", "[", 
        RowBox[{"t", ",", "n"}], "]"}], "\[Transpose]"}], ".", 
      RowBox[{"residuals", "[", 
       RowBox[{"t", ",", "n"}], "]"}]}], ")"}], "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.730316963293236*^9, 3.73031704753382*^9}, 
   3.730381497670987*^9},
 CellLabel->
  "In[332]:=",ExpressionUUID->"468e60c3-02da-4454-9009-2fe528627c54"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "ssrs", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"ssrs", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"ssr", "[", 
       RowBox[{"0", ",", "#"}], "]"}], "&"}], "/@", 
     RowBox[{"Range", "[", "Ns", "]"}]}]}], ")"}], "//", "Short"}]}], "Input",\

 CellChangeTimes->{{3.7303191875671253`*^9, 3.730319200307765*^9}, {
  3.730319409387887*^9, 3.7303194535208473`*^9}, {3.730319493559132*^9, 
  3.7303195064380817`*^9}, {3.7303802338887253`*^9, 3.730380239316378*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"6c7d905f-17f7-47be-9c25-962a24382f25"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"1.6176800966436084`*^12", ",", "1.9424080718020062`*^13", ",", 
    RowBox[{"\[LeftSkeleton]", "997", "\[RightSkeleton]"}], ",", 
    "7.891495159410053`*^13"}], "}"}],
  Short]], "Output",
 CellChangeTimes->{
  3.730319201047407*^9, {3.730319401500107*^9, 3.730319454522135*^9}, 
   3.7303195070347967`*^9, 3.730380095714797*^9, {3.730380226628932*^9, 
   3.730380240265792*^9}, 3.730381505461239*^9, 3.730381597195113*^9},
 CellLabel->
  "Out[335]//Short=",ExpressionUUID->"263fd696-60bf-47b1-b21d-6b10fbfc0e8f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["New Weights", "Subsection",
 CellChangeTimes->{{3.730380271464697*^9, 
  3.730380273487821*^9}},ExpressionUUID->"ec31f146-8931-460a-9179-\
6321edf47a75"],

Cell["\<\
Larger SSR means further from the observations. Let weights be inversely \
proportional to SSR, with divide-by-zero intentionally faulting because a \
zero SSR would signal an extremely improbable situation, most likely a bug \
somewhere else in the software.\
\>", "Text",
 CellChangeTimes->{{3.7303195764850483`*^9, 3.7303195807271347`*^9}, {
  3.7303196690961723`*^9, 3.730319691300754*^9}, {3.730380281450466*^9, 
  3.730380361864835*^9}},ExpressionUUID->"e4b89aac-4a68-43c6-87b0-\
63e96c7f4a10"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"ws", "[", "1", "]"}], "=", " ", 
    RowBox[{
     FractionBox["1", "ssrs"], "/", 
     RowBox[{"Plus", "@@", 
      FractionBox["1", "ssrs"]}]}]}], ")"}], "//", "Short"}]], "Input",
 CellChangeTimes->{{3.730319516451455*^9, 3.7303195599192657`*^9}, {
  3.730380373923058*^9, 3.7303804040219393`*^9}},
 CellLabel->
  "In[336]:=",ExpressionUUID->"3452abe2-a755-4fcb-9a96-a2b58f83b933"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"0.003093110242691679`", ",", "0.00025760101334859175`", ",", 
    RowBox[{"\[LeftSkeleton]", "997", "\[RightSkeleton]"}], ",", 
    "0.00006340576500715828`"}], "}"}],
  Short]], "Output",
 CellChangeTimes->{{3.730319520452462*^9, 3.730319560653799*^9}, 
   3.730380098835906*^9, 3.7303802481364603`*^9, {3.7303803996269007`*^9, 
   3.730380405441545*^9}, 3.730381508718525*^9, 3.730381600382276*^9},
 CellLabel->
  "Out[336]//Short=",ExpressionUUID->"736293ab-9645-4318-8dd3-6ff4c19b7231"]
}, Open  ]],

Cell["Check:", "Text",
 CellChangeTimes->{{3.730380449470887*^9, 
  3.730380451339777*^9}},ExpressionUUID->"b3c35773-e0dc-49c8-beb9-\
9a567dedff82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plus", "@@", 
  RowBox[{"ws", "[", "1", "]"}]}]], "Input",
 CellChangeTimes->{{3.7303804265864363`*^9, 3.730380444082206*^9}},
 CellLabel->
  "In[337]:=",ExpressionUUID->"e39a6e62-ad25-4aad-a1eb-341e8c2fea69"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{3.730380444545471*^9, 3.730381512201549*^9, 
  3.73038160239725*^9},
 CellLabel->
  "Out[337]=",ExpressionUUID->"3125d85a-efa0-44c4-9303-990e9d487279"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"ws", "[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.730319606365589*^9, 3.730319620202126*^9}},
 CellLabel->
  "In[338]:=",ExpressionUUID->"3659a9e3-93f2-42da-88ea-69a146dd6b56"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
      
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1000.}, {0, 0.0025048720154191087`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.730319614065364*^9, 3.73031962095732*^9}, 
   3.730380101797727*^9, 3.7303804180255013`*^9, 3.730380465950617*^9, 
   3.7303816035753307`*^9},
 CellLabel->
  "Out[338]=",ExpressionUUID->"e32a0c05-da94-426e-9be8-393e214f6c97"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cull the Particles", "Subsection",
 CellChangeTimes->{{3.730381376705008*^9, 
  3.7303813803694572`*^9}},ExpressionUUID->"f4e6571f-c400-4851-b8d4-\
c95c41505bd0"],

Cell["\<\
Keep only the particles that \[OpenCurlyDoubleQuote]do well\
\[CloseCurlyDoubleQuote] for the next time step, by some criterion driven by \
hyperparameters.\
\>", "Text",
 CellChangeTimes->{{3.730320000210891*^9, 3.7303200566684647`*^9}, {
  3.730380470751771*^9, 
  3.7303805003656673`*^9}},ExpressionUUID->"518ab8b7-5d71-4353-a3ce-\
7966b98966ab"],

Cell["Pair each particle with its index:", "Text",
 CellChangeTimes->{{3.730320059170012*^9, 
  3.730320082569851*^9}},ExpressionUUID->"906f09d0-7826-4047-8444-\
2381da0e96a6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "indexedWeights", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"indexedWeights", "=", 
    RowBox[{"MapThread", "[", 
     RowBox[{"List", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Range", "[", "Ns", "]"}], ",", 
        RowBox[{"ws", "[", "1", "]"}]}], "}"}]}], "]"}]}], ")"}], "//", 
  "Short"}]}], "Input",
 CellChangeTimes->{{3.730320085598336*^9, 3.730320155944872*^9}, {
  3.7303805240316753`*^9, 3.730380524780716*^9}},
 CellLabel->
  "In[339]:=",ExpressionUUID->"66070f2c-5dda-47e5-8835-b555adb4833e"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0.003093110242691679`"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "998", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"1000", ",", "0.00006340576500715828`"}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{{3.730320132893977*^9, 3.730320156291453*^9}, 
   3.730380104885646*^9, {3.7303805118427067`*^9, 3.730380525529358*^9}, 
   3.7303814032601757`*^9, 3.730381608030278*^9},
 CellLabel->
  "Out[340]//Short=",ExpressionUUID->"616d0024-ac5e-4e26-91b1-ade0ee90b04b"]
}, Open  ]],

Cell[TextData[{
 "Keep the top ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"p", "=", "25"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a5e1813e-890c-4681-b52f-5c7ddf0ee09d"],
 "%. In general, ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ca9b3176-553a-4b98-a75d-87e10d6cdb54"],
 " should be the reciprocal of an integer that divides ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "s"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "eb312803-0e27-404b-abdc-6f6067203301"],
 " because we are going to copy each survivor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", "p"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d5439d05-4671-4610-8ff0-bc3fe599d62d"],
 " times to make a new sample of size ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "s"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "5ea66099-a1ec-46a3-9e4a-efa82fe8ae66"],
 "."
}], "Text",
 CellChangeTimes->{{3.730320176109355*^9, 3.730320222108515*^9}, {
  3.730382473282424*^9, 
  3.730382541686295*^9}},ExpressionUUID->"3235eeca-a7d5-4d46-b0c6-\
7a4ceb38073a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "p", ",", "sortedIndexedWeights", ",", "topPWeights", ",", 
    "topPIndexedWeights", ",", "topPIndices", ",", "topPParticles"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<|", 
  RowBox[{
   RowBox[{"\"\<sortedIndexedWeights\>\"", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"sortedIndexedWeights", "=", 
        RowBox[{"Reverse", "@", 
         RowBox[{"SortBy", "[", 
          RowBox[{"indexedWeights", ",", "Last"}], "]"}]}]}], ")"}], "//", 
      "Short"}], ")"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<topPIndexedWeights\>\"", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"topPIndexedWeights", "=", 
        RowBox[{"sortedIndexedWeights", "\[LeftDoubleBracket]", 
         RowBox[{";;", 
          RowBox[{"Floor", "[", 
           RowBox[{"p", " ", "Ns"}], "]"}]}], "\[RightDoubleBracket]"}]}], 
       ")"}], "//", "Short"}], ")"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<topPWeights\>\"", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"topPWeights", "=", 
        RowBox[{"Last", "/@", "topPIndexedWeights"}]}], ")"}], "//", 
      "Short"}], ")"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<topPIndices\>\"", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"topPIndices", "=", 
        RowBox[{"First", "/@", "topPIndexedWeights"}]}], ")"}], "//", 
      "Short"}], ")"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<topPParticles//Dims\>\"", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"topPParticles", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Xi]s", "[", "0", "]"}], "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "#"}], "\[RightDoubleBracket]"}], "&"}], "/@",
            "topPIndices"}], ")"}], "\[Transpose]"}]}], ")"}], "//", 
      "Dimensions"}], ")"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<top 3 Particles\>\"", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"topPParticles", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "3"}]}], "\[RightDoubleBracket]"}], "//", 
      "MatrixForm"}], ")"}]}]}], "|>"}]}], "Input",
 CellChangeTimes->{{3.730320225768507*^9, 3.730320244162834*^9}, {
  3.730320346901327*^9, 3.7303204345008593`*^9}, {3.730320491684826*^9, 
  3.730320584172364*^9}, {3.730320718953677*^9, 3.7303207421003017`*^9}, {
  3.730320824024774*^9, 3.7303208248114634`*^9}, {3.730320940813198*^9, 
  3.7303209473494997`*^9}, {3.73032100996704*^9, 3.7303210381014843`*^9}, {
  3.730321095899629*^9, 3.7303211173687887`*^9}, {3.7303211647920523`*^9, 
  3.7303212841624727`*^9}, {3.730321358055728*^9, 3.730321557388921*^9}, {
  3.730321605933663*^9, 3.7303217028134413`*^9}, {3.730321790572888*^9, 
  3.730321917877838*^9}, {3.730321962455139*^9, 3.730321963662384*^9}, {
  3.730322028609877*^9, 3.7303220386414957`*^9}, {3.730322163794339*^9, 
  3.7303222017733603`*^9}, {3.730322327923113*^9, 3.7303223344411097`*^9}, {
  3.7303805477178307`*^9, 3.730380819532074*^9}, {3.730380875318795*^9, 
  3.730380913534286*^9}},
 CellLabel->
  "In[341]:=",ExpressionUUID->"5924a2a7-9b19-4683-8ab2-4daa41e1a542"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"sortedIndexedWeights\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"842", ",", "0.043378519481988335`"}], "}"}], ",", 
       RowBox[{"\[LeftSkeleton]", "998", "\[RightSkeleton]"}], ",", 
       RowBox[{"{", 
        RowBox[{"165", ",", "0.00001617032654227011`"}], "}"}]}], "}"}],
     Short]}], ",", 
   RowBox[{"\<\"topPIndexedWeights\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"842", ",", "0.043378519481988335`"}], "}"}], ",", 
       RowBox[{"\[LeftSkeleton]", "248", "\[RightSkeleton]"}], ",", 
       RowBox[{"{", 
        RowBox[{"977", ",", "0.000749295466134805`"}], "}"}]}], "}"}],
     Short]}], ",", 
   RowBox[{"\<\"topPWeights\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"{", 
      RowBox[{"0.043378519481988335`", ",", "0.03334066478805282`", ",", 
       RowBox[{"\[LeftSkeleton]", "247", "\[RightSkeleton]"}], ",", 
       "0.000749295466134805`"}], "}"}],
     Short]}], ",", 
   RowBox[{"\<\"topPIndices\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"{", 
      RowBox[{
      "842", ",", "151", ",", "369", ",", "10", ",", "880", ",", "311", ",", 
       "409", ",", "866", ",", "548", ",", "683", ",", 
       RowBox[{"\[LeftSkeleton]", "230", "\[RightSkeleton]"}], ",", "263", 
       ",", "473", ",", "613", ",", "797", ",", "271", ",", "195", ",", "982",
        ",", "111", ",", "250", ",", "977"}], "}"}],
     Short]}], ",", 
   RowBox[{"\<\"topPParticles//Dims\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"10", ",", "250"}], "}"}]}], ",", 
   RowBox[{"\<\"top 3 Particles\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"134190.1251423596`", "47502.10845467309`", "219276.2483550756`"},
        {
         RowBox[{"-", "365231.2582987271`"}], 
         RowBox[{"-", "134587.7633084175`"}], 
         RowBox[{"-", "1.2818106447890685`*^6"}]},
        {"303294.96332292864`", 
         RowBox[{"-", "313693.12345599063`"}], "1.2385929352057248`*^6"},
        {
         RowBox[{"-", "678021.8926454849`"}], "1.195825212006231`*^6", 
         "156513.6151478283`"},
        {"2.7731131203058395`*^6", "36189.70475327583`", "728029.5317739943`"},
        {
         RowBox[{"-", "1.071928289868992`*^6"}], 
         RowBox[{"-", "1.302604382972513`*^6"}], 
         RowBox[{"-", "159213.4627245105`"}]},
        {
         RowBox[{"-", "895600.9120520665`"}], 
         RowBox[{"-", "138746.04197506187`"}], 
         RowBox[{"-", "629399.5319303445`"}]},
        {
         RowBox[{"-", "420478.7783353996`"}], "1.0965827626943751`*^6", 
         RowBox[{"-", "228260.2877097821`"}]},
        {
         RowBox[{"-", "23471.33119499228`"}], 
         RowBox[{"-", "251128.1558333222`"}], "381431.87748085184`"},
        {"128797.01571159778`", 
         RowBox[{"-", "607523.9056125674`"}], 
         RowBox[{"-", "223407.58735540384`"}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.730380766603587*^9, 3.730380820424242*^9, {3.7303808911611347`*^9, 
   3.730380914648041*^9}, 3.730381611194687*^9},
 CellLabel->
  "Out[343]=",ExpressionUUID->"79bfa171-5a01-41f3-8439-02bd66e42acb"]
}, Open  ]],

Cell["Structure emerges after culling.", "Text",
 CellChangeTimes->{{3.7303811968954887`*^9, 3.730381222920342*^9}, {
  3.7303816182931623`*^9, 
  3.7303816354093447`*^9}},ExpressionUUID->"d6e3a490-0e2b-4544-a435-\
08be90edac02"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"threeDPointClouds", "[", 
  RowBox[{"topPParticles", ",", "\[Sigma]0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7303811509298573`*^9, 3.7303811755922813`*^9}},
 CellLabel->
  "In[345]:=",ExpressionUUID->"e1ac0146-439c-44f6-8e50-91cbbc7503e2"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`i$$ = 1, $CellContext`j$$ = 
  2, $CellContext`k$$ = 3}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
       Hold[
        Grid[{{"i", 
           SetterBar[
            Dynamic[$CellContext`i$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
          "j", 
           SetterBar[
            Dynamic[$CellContext`j$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
          "k", 
           SetterBar[
            Dynamic[$CellContext`k$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}}]], 
       Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
     450., {210., 216.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {}, "ControllerVariables" :> {}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Graphics3D[
         Map[Point, 
          Transpose[{
            Part[CompressedData["
1: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
aWwvDSxlnZncHSSAOSvBy6xDuvA/NB5PgQ==
             "], $CellContext`i$$, All], 
            
            Part[CompressedData["
1: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
aWwvDSxlnZncHSSAOSvBy6xDuvA/NB5PgQ==
             "], $CellContext`j$$, All], 
            
            Part[CompressedData["
1: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
aWwvDSxlnZncHSSAOSvBy6xDuvA/NB5PgQ==
             "], $CellContext`k$$, 
             All]}]], Axes -> True, AspectRatio -> 1, AxesLabel -> {
           StringJoin["i: ", 
            ToString[$CellContext`i$$]], 
           StringJoin["j: ", 
            ToString[$CellContext`j$$]], 
           StringJoin["k: ", 
            ToString[$CellContext`k$$]]}, PlotRange -> 
         3 {{-1.*^6, 1.*^6}, {-1.*^6, 1.*^6}, {-1.*^6, 1.*^6}}], 
       "Specifications" :> {
         Grid[{{"i", 
            SetterBar[
             Dynamic[$CellContext`i$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
           "j", 
            SetterBar[
             Dynamic[$CellContext`j$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
           "k", 
            SetterBar[
             Dynamic[$CellContext`k$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}}]}, 
       "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{505., {295., 302.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.7303811769165277`*^9, {3.730381614508522*^9, 3.730381638095634*^9}},
 CellLabel->
  "Out[345]=",ExpressionUUID->"75d4c3f7-647f-42c2-b710-803e4c308388"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Means of Top ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ad90976b-7d0c-4279-9ea4-3f2e932b8e02"],
 " Particles"
}], "Subsection",
 CellChangeTimes->{{3.730323878625125*^9, 
  3.7303238898131237`*^9}},ExpressionUUID->"5e0711c4-924a-458c-b3ce-\
33e9085fe1f1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"\[Mu]\[Sigma]", ",", "\[Mu]\[Xi]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]\[Xi]", "[", "1", "]"}], "=", 
  RowBox[{"Mean", "/@", "topPParticles"}]}]}], "Input",
 CellChangeTimes->{{3.730323902433716*^9, 3.730323961890944*^9}, {
  3.7303809762845917`*^9, 3.730380982744611*^9}},
 CellLabel->
  "In[346]:=",ExpressionUUID->"fe51d88c-4b5b-4b1f-9d04-9c267c58e0a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"15024.886723975245`", ",", 
   RowBox[{"-", "23391.318394400783`"}], ",", "23971.16041878072`", ",", 
   RowBox[{"-", "92318.90713036546`"}], ",", "13723.995603192167`", ",", 
   RowBox[{"-", "65019.519948511675`"}], ",", "59742.72554254711`", ",", 
   "8210.523843652425`", ",", "41970.642683630875`", ",", 
   "41953.911344929205`"}], "}"}]], "Output",
 CellChangeTimes->{3.7303239079246683`*^9, 3.730323963070541*^9, 
  3.730380105087784*^9, 3.730380929623701*^9, 3.730380983848637*^9, 
  3.7303816453727694`*^9},
 CellLabel->
  "Out[347]=",ExpressionUUID->"cab64ae6-c934-4f62-8663-0042aae75adf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Standard Deviations of Top ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "193b669e-5281-46fd-a614-348f12bf1909"],
 " Particles"
}], "Subsection",
 CellChangeTimes->{{3.730322243751857*^9, 3.730322253704605*^9}, {
   3.730323660665772*^9, 3.73032366512368*^9}, 
   3.730323894476655*^9},ExpressionUUID->"bb382692-3328-41de-956b-\
ff1f5a361472"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\[Sigma]\[Xi]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]\[Xi]", "[", "1", "]"}], "=", 
  RowBox[{"StandardDeviation", "/@", "topPParticles"}]}]}], "Input",
 CellChangeTimes->{{3.730323634846899*^9, 3.7303236425478277`*^9}, {
  3.7303239671346807`*^9, 3.730323987088757*^9}},
 CellLabel->
  "In[348]:=",ExpressionUUID->"a2b33a60-16ef-481e-b201-c903e1c2bb81"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "490552.6405476095`", ",", "749259.7092935579`", ",", "911201.936555243`", 
   ",", "931564.7721031238`", ",", "964103.8204294784`", ",", 
   "929875.6846302424`", ",", "925944.6537118163`", ",", "972763.0216979223`",
    ",", "956935.3884112283`", ",", "954751.2774550079`"}], "}"}]], "Output",
 CellChangeTimes->{3.730323643359034*^9, 3.7303239875104237`*^9, 
  3.730380105170742*^9, 3.73038093453181*^9, 3.7303816480687723`*^9},
 CellLabel->
  "Out[349]=",ExpressionUUID->"0d7dca58-b4ac-4a6e-a52e-77c4c620604f"]
}, Open  ]],

Cell[TextData[{
 "Replace each particle with four (",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", "p"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "1958363c-bee5-4088-8389-2b6dbc69605f"],
 ") copies, each perturbed by this new ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sigma]", "1"], "."}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d5e5c9ee-87ae-4caf-96da-c43468e7588a"],
 " There are other ways to compute an importance sample of the top ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c4441f20-0568-48b0-9c93-6d92a5a957f4"],
 " particles. One way, possibly biased, is to keep the original survivor and \
add three perturbed copies. We first perform this latter sample (original \
joined to three copies) to check matrix dimensions, but proceed with the \
former sample (four copies)."
}], "Text",
 CellChangeTimes->{{3.730320839259514*^9, 3.730320914539872*^9}, {
   3.730323712122744*^9, 3.730323774906492*^9}, {3.730382450158559*^9, 
   3.730382463078106*^9}, 3.730382972133883*^9, {3.730383236254312*^9, 
   3.7303832852976313`*^9}, {3.730383361170046*^9, 
   3.73038339161796*^9}},ExpressionUUID->"ccf8f245-133c-415a-a38c-\
e7ef630de126"],

Cell[CellGroupData[{

Cell["Check Matrix Dimensions", "Subsubsection",
 CellChangeTimes->{{3.730383320126973*^9, 
  3.730383328075759*^9}},ExpressionUUID->"6fc39140-533b-469c-8bf2-\
a5a014b90f82"],

Cell["Exhibit an example:", "Text",
 CellChangeTimes->{{3.730383409352274*^9, 
  3.730383416077334*^9}},ExpressionUUID->"09b8fb5a-b4ed-40cd-8f18-\
677999cea3bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"topPParticles", "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "41"}], "\[RightDoubleBracket]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.730383013356051*^9, 3.73038301538297*^9}},
 CellLabel->
  "In[378]:=",ExpressionUUID->"e8ba52b7-f774-4c3b-af84-a5bfb0b1ffcb"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"-", "269514.3238657229`"}]},
      {"520496.4027680697`"},
      {"1.3061203256319966`*^6"},
      {
       RowBox[{"-", "1.7513327305430882`*^6"}]},
      {
       RowBox[{"-", "302433.1823492717`"}]},
      {"105182.58549267302`"},
      {
       RowBox[{"-", "630146.0569393926`"}]},
      {"308931.17516738543`"},
      {"672240.2684795515`"},
      {"964305.9362265338`"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.730383007404861*^9, 3.730383016054151*^9}},
 CellLabel->
  "Out[378]//MatrixForm=",ExpressionUUID->"da0184da-cfb1-4df8-af5f-\
efdefd226042"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "conjColumns", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"conjColumns", "[", 
    RowBox[{"m1_", ",", "m2_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m1", "\[Transpose]"}], ")"}], "~", "Join", "~", 
      RowBox[{"(", 
       RowBox[{"m2", "\[Transpose]"}], ")"}]}], ")"}], "\[Transpose]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.730383060407649*^9, 3.730383120917873*^9}, {
  3.730383209695719*^9, 3.730383216764379*^9}, {3.73038344887706*^9, 
  3.730383530842847*^9}},
 CellLabel->
  "In[411]:=",ExpressionUUID->"dfaf568e-30ef-436f-affe-78618d51d348"],

Cell["Check that the original appears in the first column.", "Text",
 CellChangeTimes->{{3.7303834242088423`*^9, 
  3.730383433048386*^9}},ExpressionUUID->"96ce34de-e7c9-4134-81e7-\
6e70a5023717"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "make1OverP", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"make1OverP", "[", 
    RowBox[{"\[Xi]_", ",", "\[Sigma]\[Xi]_", ",", "p_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", "=", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{"1", "/", "p"}], "]"}], "-", "1"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"conjColumns", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"List", "/@", "\[Xi]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{
             RowBox[{
             "\[Xi]", "\[LeftDoubleBracket]", "m", "\[RightDoubleBracket]"}], 
             ",", 
             RowBox[{
             "\[Sigma]\[Xi]", "\[LeftDoubleBracket]", "m", 
              "\[RightDoubleBracket]"}]}], "]"}], ",", "n"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"m", ",", 
           RowBox[{"\[CapitalMu]", "+", "1"}]}], "}"}]}], "]"}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"make1OverP", "[", 
   RowBox[{
    RowBox[{"topPParticles", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "41"}], "\[RightDoubleBracket]"}], ",", 
    RowBox[{"\[Sigma]\[Xi]", "[", "1", "]"}], ",", "p"}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.730382434451152*^9, 3.7303824459180193`*^9}, {
  3.730382557290863*^9, 3.730382876372209*^9}, {3.730382909360773*^9, 
  3.73038291081068*^9}, {3.730382947883396*^9, 3.730382948848579*^9}, {
  3.7303830409041452`*^9, 3.730383040991829*^9}, {3.730383128893631*^9, 
  3.730383195735268*^9}, {3.7303834947353077`*^9, 3.7303835190365067`*^9}},
 CellLabel->
  "In[413]:=",ExpressionUUID->"ec1e2672-5646-4519-ab39-09b8c81c1892"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "269514.3238657229`"}], 
      RowBox[{"-", "336345.03147574264`"}], 
      RowBox[{"-", "881083.638438252`"}], "107212.20257159189`"},
     {"520496.4027680697`", 
      RowBox[{"-", "394890.27823043166`"}], "969036.7298408799`", 
      "668569.0890651563`"},
     {"1.3061203256319966`*^6", "686644.8530664215`", "470692.6274500537`", 
      "793276.4426662727`"},
     {
      RowBox[{"-", "1.7513327305430882`*^6"}], "226693.48991412856`", 
      RowBox[{"-", "718328.7425329845`"}], 
      RowBox[{"-", "1.9215302498101294`*^6"}]},
     {
      RowBox[{"-", "302433.1823492717`"}], "1.1723589077722495`*^6", 
      RowBox[{"-", "331396.05040810024`"}], "634567.7823912639`"},
     {"105182.58549267302`", "471102.56754274026`", "425119.4553897486`", 
      RowBox[{"-", "647397.0974395284`"}]},
     {
      RowBox[{"-", "630146.0569393926`"}], 
      RowBox[{"-", "1.814628427721247`*^6"}], "363710.9509605131`", 
      RowBox[{"-", "1.7571563601426093`*^6"}]},
     {"308931.17516738543`", 
      RowBox[{"-", "294024.62194853515`"}], 
      RowBox[{"-", "901259.7268848103`"}], "829348.2878774161`"},
     {"672240.2684795515`", "495973.70873410965`", "1.6441549710340132`*^6", 
      "1.1942280780074587`*^6"},
     {"964305.9362265338`", 
      RowBox[{"-", "35884.52760769962`"}], "25588.492415660643`", 
      RowBox[{"-", "78417.35244601639`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7303830433078823`*^9, {3.73038315866811*^9, 3.730383219470324*^9}, {
   3.7303834963300056`*^9, 3.730383533953497*^9}},
 CellLabel->
  "Out[415]//MatrixForm=",ExpressionUUID->"e34cfba3-36ce-4f8a-9e48-\
4c18ba723644"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unbiased? Importance Sample", "Subsubsection",
 CellChangeTimes->{{3.7303833353642473`*^9, 3.730383343150861*^9}, 
   3.730383552510256*^9},ExpressionUUID->"1071a97b-9de3-4dd8-91b1-\
585e6733971b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "make1OverP", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"make1OverP", "[", 
    RowBox[{"\[Xi]_", ",", "\[Sigma]\[Xi]_", ",", "p_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{"1", "/", "p"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{
           "\[Xi]", "\[LeftDoubleBracket]", "m", "\[RightDoubleBracket]"}], 
           ",", 
           RowBox[{
           "\[Sigma]\[Xi]", "\[LeftDoubleBracket]", "m", 
            "\[RightDoubleBracket]"}]}], "]"}], ",", "n"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"m", ",", 
         RowBox[{"\[CapitalMu]", "+", "1"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"make1OverP", "[", 
   RowBox[{
    RowBox[{"topPParticles", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "41"}], "\[RightDoubleBracket]"}], ",", 
    RowBox[{"\[Sigma]\[Xi]", "[", "1", "]"}], ",", "p"}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.730382434451152*^9, 3.7303824459180193`*^9}, {
  3.730382557290863*^9, 3.730382876372209*^9}, {3.730382909360773*^9, 
  3.73038291081068*^9}, {3.730382947883396*^9, 3.730382948848579*^9}},
 CellLabel->
  "In[416]:=",ExpressionUUID->"1898fa7b-8dcf-4e0e-aab0-0e629781e321"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "41914.86904579078`"}], 
      RowBox[{"-", "981092.1858765797`"}], 
      RowBox[{"-", "483579.4718050654`"}], "71741.91845199902`"},
     {"1.6966055028898139`*^6", "25355.472870921425`", 
      "1.1372903651712108`*^6", "1.5750661965466093`*^6"},
     {"344560.3778765256`", 
      RowBox[{"-", "358665.5597536536`"}], "2.626297521069372`*^6", 
      "1.1202136494142474`*^6"},
     {
      RowBox[{"-", "223828.02009417163`"}], 
      RowBox[{"-", "1.5670152020552899`*^6"}], 
      RowBox[{"-", "1.4767158614705426`*^6"}], 
      RowBox[{"-", "2.220462294160014`*^6"}]},
     {
      RowBox[{"-", "584784.3029020852`"}], 
      RowBox[{"-", "893831.6158886959`"}], 
      RowBox[{"-", "3.1115125827515237`*^6"}], 
      RowBox[{"-", "1.258765484488492`*^6"}]},
     {
      RowBox[{"-", "90366.84415310867`"}], 
      RowBox[{"-", "397813.9260694337`"}], "452374.117269081`", 
      RowBox[{"-", "222681.34755511885`"}]},
     {
      RowBox[{"-", "1.9556820943108997`*^6"}], 
      RowBox[{"-", "2.132144423411224`*^6"}], 
      RowBox[{"-", "567738.9193219703`"}], 
      RowBox[{"-", "2.197102947847882`*^6"}]},
     {
      RowBox[{"-", "87977.75955927721`"}], "1.2340060506300204`*^6", 
      RowBox[{"-", "411787.34469503845`"}], 
      RowBox[{"-", "315499.03460157005`"}]},
     {
      RowBox[{"-", "1.6507015142368237`*^6"}], "1.5743604151967345`*^6", 
      RowBox[{"-", "45547.779977846774`"}], 
      RowBox[{"-", "256743.4880515983`"}]},
     {"3.3881904736149237`*^6", "687666.2352884447`", "2.907373023876837`*^6",
       "2.723558421958533`*^6"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.730382800571287*^9, 3.730382877345191*^9}, 
   3.730382911745121*^9, 3.730382949966806*^9, 3.7303835549143457`*^9},
 CellLabel->
  "Out[418]//MatrixForm=",ExpressionUUID->"497a423c-729c-4e87-bd5a-\
1ec07bc4cc51"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["A New Particle Cloud", "Subsection",
 CellChangeTimes->{{3.73038357758184*^9, 
  3.730383584912326*^9}},ExpressionUUID->"d74d286b-7b01-4745-b903-\
b61a103503b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"topPParticles", "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.730383712981835*^9, 3.7303837179242563`*^9}},
 CellLabel->
  "In[421]:=",ExpressionUUID->"3b15fa89-b72f-4d3f-ab5a-974e7c28b2b7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "250"}], "}"}]], "Output",
 CellChangeTimes->{3.730383718767002*^9},
 CellLabel->
  "Out[421]=",ExpressionUUID->"267e0244-28b7-44e3-840d-a4844df03a21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[Xi]s", "[", "1", "]"}], "=", 
    RowBox[{"Fold", "[", 
     RowBox[{"conjColumns", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"make1OverP", "[", 
         RowBox[{"#", ",", 
          RowBox[{"\[Sigma]\[Xi]", "[", "1", "]"}], ",", "p"}], "]"}], "&"}], 
       "/@", 
       RowBox[{"(", 
        RowBox[{"topPParticles", "\[Transpose]"}], ")"}]}]}], "]"}]}], ")"}], 
  "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.730383603738851*^9, 3.730383700612975*^9}, {
  3.730383751206147*^9, 3.730383786660882*^9}},
 CellLabel->
  "In[423]:=",ExpressionUUID->"1e6028f6-c334-4c5e-9c10-7808a3ae30b1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "1000"}], "}"}]], "Output",
 CellChangeTimes->{{3.7303836860614767`*^9, 3.7303837016429567`*^9}, 
   3.7303837574223213`*^9, 3.73038378758365*^9},
 CellLabel->
  "Out[423]=",ExpressionUUID->"0aede85b-e5a9-46e8-bbca-6c97e604a6f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"threeDPointClouds", "[", 
  RowBox[{
   RowBox[{"\[Xi]s", "[", "1", "]"}], ",", "\[Sigma]0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7303837902430973`*^9, 3.7303838179937887`*^9}},
 CellLabel->
  "In[425]:=",ExpressionUUID->"5bd0e76b-5c66-488b-b734-b4caf94d7ee0"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`i$$ = 1, $CellContext`j$$ = 
  2, $CellContext`k$$ = 3}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
       Hold[
        Grid[{{"i", 
           SetterBar[
            Dynamic[$CellContext`i$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
          "j", 
           SetterBar[
            Dynamic[$CellContext`j$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
          "k", 
           SetterBar[
            Dynamic[$CellContext`k$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}}]], 
       Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
     431., {238., 244.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {}, "ControllerVariables" :> {}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Graphics3D[
         Map[Point, 
          Transpose[{
            Part[CompressedData["
1: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
q1hhnMsuz9zrRcD/AMk//5M=
             "], $CellContext`i$$, All], 
            Part[CompressedData["
1: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
q1hhnMsuz9zrRcD/AMk//5M=
             "], $CellContext`j$$, All], 
            Part[CompressedData["
1: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
q1hhnMsuz9zrRcD/AMk//5M=
             "], $CellContext`k$$, All]}]], Axes -> 
         True, AspectRatio -> 1, AxesLabel -> {
           StringJoin["i: ", 
            ToString[$CellContext`i$$]], 
           StringJoin["j: ", 
            ToString[$CellContext`j$$]], 
           StringJoin["k: ", 
            ToString[$CellContext`k$$]]}, PlotRange -> 
         3 {{-1.*^6, 1.*^6}, {-1.*^6, 1.*^6}, {-1.*^6, 1.*^6}}], 
       "Specifications" :> {
         Grid[{{"i", 
            SetterBar[
             Dynamic[$CellContext`i$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
           "j", 
            SetterBar[
             Dynamic[$CellContext`j$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
           "k", 
            SetterBar[
             Dynamic[$CellContext`k$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}}]}, 
       "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{486., {323., 330.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.730383799620371*^9, 3.7303838191682*^9}},
 CellLabel->
  "Out[425]=",ExpressionUUID->"ebfcadc1-d2fa-4b24-bda6-934f3b43ed73"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Package and Iterate", "Subsection",
 CellChangeTimes->{{3.730383838307354*^9, 
  3.730383842988851*^9}},ExpressionUUID->"fc683233-576e-4724-ab66-\
31393a1b7498"],

Cell["Abstract the procedure witnessed above and iterate.", "Text",
 CellChangeTimes->{{3.7303838530938997`*^9, 
  3.7303838673566637`*^9}},ExpressionUUID->"c65431d1-e4da-4ad3-bd68-\
fdbfad6fe355"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusion", "Chapter",
 CellChangeTimes->{{3.729196441150124*^9, 3.7291964428392887`*^9}, {
  3.730320907248749*^9, 
  3.730320908356058*^9}},ExpressionUUID->"056c496c-e956-4271-a13b-\
65ea1a7d373d"],

Cell["\<\
We have shown that Kalman folding (KAL) produces the same results as \
renormalized recurrent least squares (RLS) and maximum a-posteriori (MAP) for \
appropriate choices of covariances, i.e., regularization hyperparameters. We \
have further shown (numerically) that MAP produces the same results when its \
hyperparameters are swapped and inverted. 

KAL and RLS offer significant advantages in space-time efficiency by avoiding \
storage and multiplication of large matrices. In all cases, we avoid matrix \
inverses by solving linear systems internally.\
\>", "Text",
 CellChangeTimes->{{3.7291964484304113`*^9, 3.729196613945616*^9}, 
   3.7292030970835457`*^9, {3.72968771341329*^9, 3.729687716858973*^9}, {
   3.729711791511696*^9, 3.72971179468015*^9}, {3.729799002121397*^9, 
   3.729799077001767*^9}},ExpressionUUID->"b87c5758-b88d-4767-9ee6-\
94476ab03370"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1203, 851},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingStartingPageNumber->1,
PrintingPageRange->{1, Automatic},
TaggingRules->{
 "PaginationCache" -> {{2018, 2, 20, 19, 46, 39.675061`8.351092581673305}, {1,
     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
     4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 6, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 
    9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 11, 12, 12, 12, 12, 13, 14, 14, 
    15, 15, 17, 17, 19, 19, 19, 20}, Automatic}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{$RootDirectory, "Users", "bbeckman"}, 
  "DefaultStyles.nb", CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "c:1"->{
  Cell[580, 22, 491, 6, 117, "Title",ExpressionUUID->"46e72bbd-9d98-4fc3-a048-c627688b2d9e",
   CellTags->"c:1"]},
 "c:10"->{
  Cell[64107, 1439, 256, 3, 317, "Subchapter",ExpressionUUID->"eb9ecf3c-cbf2-4418-a417-8f947ee7be76",
   CellTags->"c:10"]},
 "c:13"->{
  Cell[76516, 1744, 461, 6, 70, "Chapter",ExpressionUUID->"f57cb083-2e13-4a5b-8884-c47c716b6798",
   CellTags->"c:13"]},
 "c:14"->{
  Cell[230166, 5113, 181, 2, 85, "Chapter",ExpressionUUID->"0a62acb1-49c7-40e7-8ca4-b6c8f3a93974",
   CellTags->"c:14"]},
 "c:15"->{
  Cell[232119, 5165, 241, 3, 80, "Subchapter",ExpressionUUID->"08896713-5645-41eb-8d53-64e0ec086c76",
   CellTags->"c:15"]},
 "c:9"->{
  Cell[5115, 115, 218, 3, 70, "Chapter",ExpressionUUID->"5ca12084-879f-4910-924b-31070b62bbff",
   CellTags->"c:9"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"c:1", 1146360, 21589},
 {"c:10", 1146486, 21592},
 {"c:13", 1146622, 21595},
 {"c:14", 1146754, 21598},
 {"c:15", 1146887, 21601},
 {"c:9", 1147022, 21604}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 491, 6, 117, "Title",ExpressionUUID->"46e72bbd-9d98-4fc3-a048-c627688b2d9e",
 CellTags->"c:1"],
Cell[1074, 30, 444, 10, 86, "Text",ExpressionUUID->"0ef69e3e-2e07-4f1e-b61f-a0ae41c8374c"],
Cell[CellGroupData[{
Cell[1543, 44, 206, 4, 85, "Chapter",ExpressionUUID->"7b33e853-10e8-4eca-8119-0a1902f7cb69"],
Cell[1752, 50, 1492, 29, 189, "Text",ExpressionUUID->"c320baf2-7cc2-420c-8595-6c07171d2c4f"],
Cell[3247, 81, 1831, 29, 472, "Text",ExpressionUUID->"515689e5-24c9-4f03-a68b-2166895245cd"]
}, Closed]],
Cell[CellGroupData[{
Cell[5115, 115, 218, 3, 70, "Chapter",ExpressionUUID->"5ca12084-879f-4910-924b-31070b62bbff",
 CellTags->"c:9"],
Cell[5336, 120, 938, 21, 61, "Text",ExpressionUUID->"d8064256-ea88-4413-9e76-c45a89df3e2c"],
Cell[6277, 143, 1096, 28, 61, "DisplayFormulaNumbered",ExpressionUUID->"b41450de-8c92-4abf-a6d8-d24839b3c1b9"],
Cell[7376, 173, 1281, 18, 60, "Text",ExpressionUUID->"b69e6191-6f6f-479e-9f67-c7f4911cd65f"],
Cell[CellGroupData[{
Cell[8682, 195, 1552, 26, 53, "Item",ExpressionUUID->"a79a1b73-f840-4373-9de5-4f3d510e4877"],
Cell[10237, 223, 1782, 34, 53, "Item",ExpressionUUID->"25c14485-f621-49c2-815a-0138e9bcfafe"],
Cell[12022, 259, 1608, 29, 53, "Item",ExpressionUUID->"b287db3f-854c-4605-9ef7-c238056ab28a"]
}, Closed]],
Cell[CellGroupData[{
Cell[13667, 293, 167, 3, 41, "Subsection",ExpressionUUID->"2e3a9bc5-72f8-4480-9a80-6f3b0bf6d7a4"],
Cell[13837, 298, 1571, 23, 60, "Text",ExpressionUUID->"b476c8cc-7dd2-4347-bad7-323d48c72da2"],
Cell[15411, 323, 1961, 36, 37, "DisplayFormulaNumbered",ExpressionUUID->"7d3a92e3-5494-448b-b4f2-9dabf9fef7b7"],
Cell[17375, 361, 1603, 22, 60, "Text",ExpressionUUID->"fd432c05-60e5-45d9-a0d4-e9815082cb3a"],
Cell[18981, 385, 1799, 31, 33, "DisplayFormulaNumbered",ExpressionUUID->"cb5ec10e-ef83-45dc-a95d-b26bb7cc2387"],
Cell[20783, 418, 1646, 29, 60, "Text",ExpressionUUID->"0fc7f18d-76fb-476f-9557-b54be5d9d15c"],
Cell[22432, 449, 2712, 57, 33, "DisplayFormulaNumbered",ExpressionUUID->"c9484120-6938-4df2-8e1a-776c32bc4669"],
Cell[25147, 508, 4540, 99, 220, "Text",ExpressionUUID->"d23a3057-56ef-41ce-84aa-fdc26a29db70"]
}, Closed]],
Cell[CellGroupData[{
Cell[29724, 612, 173, 3, 41, "Subsection",ExpressionUUID->"be95aebf-ae56-4456-8c29-d08dcb53f0e5"],
Cell[29900, 617, 2305, 51, 60, "Text",ExpressionUUID->"649161c4-6177-4aec-b03d-15d263642f9d"],
Cell[CellGroupData[{
Cell[32230, 672, 3876, 88, 326, "Input",ExpressionUUID->"1ca2d39a-8b84-45ae-9746-a7660d91ebc7"],
Cell[36109, 762, 429, 10, 70, "Message",ExpressionUUID->"f27539ff-1d5d-4cc6-b8bc-f2f26c80610a"],
Cell[36541, 774, 5725, 135, 70, "Output",ExpressionUUID->"d2ed527b-5846-45d3-95e2-09082c6dc189"]
}, Open  ]],
Cell[42281, 912, 1320, 30, 340, "Text",ExpressionUUID->"f4fe2489-d9cf-4ac7-b0c5-50fd8c858a33"]
}, Closed]],
Cell[CellGroupData[{
Cell[43638, 947, 164, 3, 165, "Subsection",ExpressionUUID->"3967f398-3eab-437f-8b80-7de90dfe491f"],
Cell[43805, 952, 1037, 19, 442, "Text",ExpressionUUID->"5fa63877-d682-4369-8865-5a95b2249de3"]
}, Closed]],
Cell[CellGroupData[{
Cell[44879, 976, 176, 3, 165, "Subsection",ExpressionUUID->"a6c792dc-4c21-42d8-8ec5-fc669690e7b7"],
Cell[45058, 981, 1972, 48, 550, "Text",ExpressionUUID->"a05115c7-2503-49e9-af12-5669084b3ab2"]
}, Closed]],
Cell[CellGroupData[{
Cell[47067, 1034, 166, 3, 165, "Subsection",ExpressionUUID->"53320727-4bae-4b2a-ab1b-1c7c66ac6a3c"],
Cell[47236, 1039, 1666, 42, 85, "Text",ExpressionUUID->"5198a235-6d3a-495f-8224-3bb457689565"],
Cell[CellGroupData[{
Cell[48927, 1085, 322, 6, 64, "Input",ExpressionUUID->"6b2f5eca-fa77-41bf-9283-038226cefa9a"],
Cell[49252, 1093, 2033, 32, 70, "Output",ExpressionUUID->"aa8ff779-4287-4c62-b9b0-339ef935bb2c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[51334, 1131, 176, 3, 165, "Subsection",ExpressionUUID->"a15882b3-57ab-4fa8-83b6-c550109aac89"],
Cell[51513, 1136, 3063, 76, 193, "Text",ExpressionUUID->"b4d63894-59ca-4552-83f4-70d2c2128d07"],
Cell[CellGroupData[{
Cell[54601, 1216, 932, 21, 111, "Input",ExpressionUUID->"8c430208-3b71-40e8-8a72-abb8cd90ffa4"],
Cell[55536, 1239, 4943, 115, 70, "Output",ExpressionUUID->"bb1e3808-a54e-4e6d-8ea3-fb8fa82bc6f7"]
}, Open  ]],
Cell[60494, 1357, 596, 13, 59, "Text",ExpressionUUID->"0cca00d6-0a9f-40fb-b637-dfc3132a2c2f"],
Cell[CellGroupData[{
Cell[61115, 1374, 459, 11, 64, "Input",ExpressionUUID->"c6115b7b-08e5-4411-90de-4f0f132f5782"],
Cell[61577, 1387, 470, 11, 70, "Message",ExpressionUUID->"7b765e2f-75e2-4019-85b3-309d3a31b694"],
Cell[62050, 1400, 2008, 33, 70, "Output",ExpressionUUID->"8c582613-29df-4999-b4a5-c59d355fb5ec"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[64107, 1439, 256, 3, 317, "Subchapter",ExpressionUUID->"eb9ecf3c-cbf2-4418-a417-8f947ee7be76",
 CellTags->"c:10"],
Cell[64366, 1444, 2004, 51, 136, "Text",ExpressionUUID->"0885edbe-95e4-4385-aba5-07fc3ab0dfba"],
Cell[CellGroupData[{
Cell[66395, 1499, 3706, 89, 300, "Input",ExpressionUUID->"bd72fa45-d9c5-4e4e-a429-bee1577a6f0d"],
Cell[70104, 1590, 429, 10, 70, "Message",ExpressionUUID->"0ca2a0f2-172d-4527-ae75-3937847d2492"],
Cell[70536, 1602, 3958, 87, 70, "Output",ExpressionUUID->"3fc5ec58-f166-402c-b7a1-76cc5699f652"]
}, Open  ]],
Cell[74509, 1692, 723, 14, 442, "Text",ExpressionUUID->"2fc132d3-59ce-4f68-b386-27a3e8b36b56"]
}, Closed]],
Cell[CellGroupData[{
Cell[75269, 1711, 167, 3, 317, "Subchapter",ExpressionUUID->"a922b9e1-5f73-4c1d-837a-1b2197bd6c77"],
Cell[75439, 1716, 1028, 22, 652, "Text",ExpressionUUID->"19112acb-50b6-4d0a-be43-d791f28fb3b1"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[76516, 1744, 461, 6, 70, "Chapter",ExpressionUUID->"f57cb083-2e13-4a5b-8884-c47c716b6798",
 CellTags->"c:13"],
Cell[76980, 1752, 2556, 45, 241, "Text",ExpressionUUID->"15ee4bb0-fc5a-41bc-80d0-20de3b23514a"],
Cell[CellGroupData[{
Cell[79561, 1801, 195, 3, 80, "Subchapter",ExpressionUUID->"8e1858e6-8e6d-4c01-8f2a-0d587b83c92f"],
Cell[CellGroupData[{
Cell[79781, 1808, 188, 3, 41, "Subsection",ExpressionUUID->"fd29c08d-8914-488e-a5e1-16d28815454d"],
Cell[79972, 1813, 959, 25, 88, "Text",ExpressionUUID->"c848505b-800e-4607-83cb-e15f01517729"],
Cell[CellGroupData[{
Cell[80956, 1842, 907, 18, 130, "Input",ExpressionUUID->"3f348c3d-26de-4b25-8ba3-c27ad607574b"],
Cell[81866, 1862, 2816, 58, 70, "Output",ExpressionUUID->"df998cd8-da01-4b99-920a-5a240bf59a22"]
}, Open  ]],
Cell[84697, 1923, 1701, 31, 268, "Text",ExpressionUUID->"bdc6fb65-119a-4175-b9f9-316dfeb6c274"],
Cell[86401, 1956, 1280, 33, 182, "Input",ExpressionUUID->"8ba009d7-6ad6-4e2a-a567-e2fad21156b3"],
Cell[87684, 1991, 1331, 24, 115, "Text",ExpressionUUID->"54827bd6-34f4-4737-a7ba-d3104ca29794"],
Cell[89018, 2017, 1571, 39, 260, "Input",ExpressionUUID->"e8dc79db-fc1e-44d9-9d9c-6a0d36e42fb9"],
Cell[90592, 2058, 307, 5, 60, "Text",ExpressionUUID->"c73deac6-6150-44d0-bc24-a6f391e291fd"],
Cell[CellGroupData[{
Cell[90924, 2067, 2483, 55, 260, "Input",ExpressionUUID->"82e02689-45c4-48b3-a720-b61526dcd063"],
Cell[93410, 2124, 16568, 293, 70, "Output",ExpressionUUID->"6d1023cf-bad0-4690-a303-c54478bc805c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[110027, 2423, 195, 3, 40, "Subsection",ExpressionUUID->"3c3da3f6-3bd2-4f62-968d-095193fc57c2"],
Cell[110225, 2428, 555, 12, 87, "Text",ExpressionUUID->"a694d9c7-cace-48fb-8330-ef697ae6c5fd"],
Cell[CellGroupData[{
Cell[110805, 2444, 1422, 36, 200, "Input",ExpressionUUID->"808798b0-cb49-49bf-ba5d-a4435e007b6c"],
Cell[112230, 2482, 2723, 57, 70, "Output",ExpressionUUID->"2abf48fd-0846-44d5-b538-d1d37366ddf8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[115002, 2545, 169, 3, 40, "Subsection",ExpressionUUID->"767759cd-2d96-426e-94ca-643a24c684dd"],
Cell[115174, 2550, 737, 16, 87, "Text",ExpressionUUID->"afc353ba-db82-42f0-85a7-fb076016da5c"],
Cell[115914, 2568, 1012, 33, 66, "DisplayFormula",ExpressionUUID->"b3852931-b403-43be-9dd4-fbf8ad805281"],
Cell[116929, 2603, 2587, 68, 272, "Text",ExpressionUUID->"4caa1d79-69f9-4857-9ca0-f60d221f28a0"],
Cell[119519, 2673, 880, 34, 33, "DisplayFormula",ExpressionUUID->"e9b01368-12da-488b-94ce-2dd50bdf1a8e"],
Cell[120402, 2709, 3005, 77, 245, "Text",ExpressionUUID->"d6d02b47-7699-4863-b420-0e597bfb6fd0"],
Cell[CellGroupData[{
Cell[123432, 2790, 1590, 34, 78, "Item",ExpressionUUID->"d125a78e-ad63-4d0e-b225-af94823bc9f1"],
Cell[125025, 2826, 1825, 40, 79, "Item",ExpressionUUID->"2a13af40-d09a-41f5-8eab-2ae9717435cd"],
Cell[126853, 2868, 1075, 21, 54, "Item",ExpressionUUID->"cce41cf6-4157-476c-984f-2a030a9228a7"]
}, Open  ]],
Cell[127943, 2892, 1890, 41, 219, "Text",ExpressionUUID->"dbc30210-c866-4ae3-bba5-c1d548509902"],
Cell[129836, 2935, 2321, 59, 110, "DisplayFormulaNumbered",ExpressionUUID->"9130f5d5-4502-424e-a97b-08a91c27fc62"],
Cell[132160, 2996, 311, 9, 61, "Text",ExpressionUUID->"83883ae6-d076-441c-8482-06f206529b42"],
Cell[132474, 3007, 2928, 83, 104, "DisplayFormulaNumbered",ExpressionUUID->"ad866a7d-7b82-4932-9f32-38a71895f06a"]
}, Closed]],
Cell[CellGroupData[{
Cell[135439, 3095, 173, 3, 40, "Subsection",ExpressionUUID->"89146e39-831c-451a-ae64-abde3d317434"],
Cell[135615, 3100, 531, 10, 86, "Text",ExpressionUUID->"21dff09f-f36a-421e-aef5-39abef5c2d42"],
Cell[CellGroupData[{
Cell[136171, 3114, 1621, 36, 156, "Input",ExpressionUUID->"4f403321-0dff-4b61-bb6b-e5605b12d11b"],
Cell[137795, 3152, 1794, 27, 70, "Output",ExpressionUUID->"aec167c3-a733-4d1b-a11b-3c2a5886e57e"]
}, Open  ]],
Cell[139604, 3182, 165, 3, 60, "Text",ExpressionUUID->"c8e13496-262a-41b9-b53e-464d80b37aa9"],
Cell[139772, 3187, 696, 17, 104, "Input",ExpressionUUID->"cb926cdf-c463-4b29-91f2-cc9b8c0af79f"],
Cell[140471, 3206, 634, 11, 163, "Text",ExpressionUUID->"4f2cb8a7-4457-4a84-a9ed-c08b68c43d39"],
Cell[CellGroupData[{
Cell[141130, 3221, 984, 23, 156, "Input",ExpressionUUID->"2c30fd53-ff05-4a76-8f5d-4e993e958741"],
Cell[142117, 3246, 2986, 53, 70, "Output",ExpressionUUID->"fdc5a406-afba-4ec4-95b6-d7f7f4961f5a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[145152, 3305, 174, 3, 40, "Subsection",ExpressionUUID->"5d759a27-e118-43f8-b084-2f8ccbc12929"],
Cell[145329, 3310, 1320, 22, 216, "Text",ExpressionUUID->"953a9bfd-0f1e-4b34-806a-12bc491d013a"],
Cell[CellGroupData[{
Cell[146674, 3336, 3844, 86, 320, "Input",ExpressionUUID->"4668cdf5-7903-4f95-83fa-ae16e0957cb5"],
Cell[150521, 3424, 3715, 64, 70, "Output",ExpressionUUID->"461edd9f-b107-45bc-8ee4-0175df10c3e9"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[154285, 3494, 228, 4, 40, "Subsection",ExpressionUUID->"1a256cc5-717d-4f70-98d5-1eccc5dcef4a"],
Cell[154516, 3500, 2713, 63, 296, "Text",ExpressionUUID->"ed0c0833-92da-47c1-8f6d-d072ddce7e84"],
Cell[157232, 3565, 5246, 121, 416, "Input",ExpressionUUID->"3117ef4d-d3f2-49c6-a0e0-edcb55974bac"]
}, Closed]],
Cell[CellGroupData[{
Cell[162515, 3691, 161, 3, 40, "Subsection",ExpressionUUID->"79c27655-ef70-49e0-840d-4cd0f992f88f"],
Cell[162679, 3696, 3434, 80, 562, "Text",ExpressionUUID->"8010689f-309c-4f3e-bf23-5b34674387a4"],
Cell[CellGroupData[{
Cell[166138, 3780, 13830, 296, 1170, "Input",ExpressionUUID->"3870cf8d-74e6-419c-91a8-4f7425e2e6cf"],
Cell[179971, 4078, 7662, 148, 70, "Output",ExpressionUUID->"d27ce4d8-9803-4500-a869-37b203321c88"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[187694, 4233, 262, 4, 59, "Subchapter",ExpressionUUID->"ec2835d0-1e43-4366-9376-c0a251fa559b"],
Cell[187959, 4239, 1843, 32, 191, "Text",ExpressionUUID->"d78bc809-65a9-43d3-b5fa-adc52a5bb0e6"],
Cell[CellGroupData[{
Cell[189827, 4275, 13464, 279, 568, "Input",ExpressionUUID->"c2153b8f-523a-4f44-8102-f58268af8565"],
Cell[203294, 4556, 7218, 140, 527, "Output",ExpressionUUID->"85bb298c-87ec-4146-8158-b03b5e1336a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210549, 4701, 229, 4, 41, "Subsection",ExpressionUUID->"f2ba3712-eb3a-4eb3-848b-e310da76977c"],
Cell[210781, 4707, 2274, 46, 270, "Text",ExpressionUUID->"978149cd-9868-42b3-b719-ecc543111b8b"],
Cell[CellGroupData[{
Cell[213080, 4757, 11003, 229, 763, "Input",ExpressionUUID->"a82fcb89-f589-43a5-9790-852c212a730f"],
Cell[224086, 4988, 4703, 90, 70, "Output",ExpressionUUID->"19b79586-13c5-4f21-ba18-1cb01f35670f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[228838, 5084, 259, 4, 40, "Subsection",ExpressionUUID->"277778b0-dcfe-45cc-9dcb-3222470948a4"],
Cell[229100, 5090, 1005, 16, 163, "Text",ExpressionUUID->"03638b05-1593-4c2c-ad46-68b784ca0a43"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[230166, 5113, 181, 2, 85, "Chapter",ExpressionUUID->"0a62acb1-49c7-40e7-8ca4-b6c8f3a93974",
 CellTags->"c:14"],
Cell[230350, 5117, 1744, 44, 141, "Text",ExpressionUUID->"2267e09b-40d6-4365-bafa-9ee4864f7ea4"],
Cell[CellGroupData[{
Cell[232119, 5165, 241, 3, 80, "Subchapter",ExpressionUUID->"08896713-5645-41eb-8d53-64e0ec086c76",
 CellTags->"c:15"],
Cell[232363, 5170, 1303, 29, 114, "Text",ExpressionUUID->"dd21213d-8d31-4a8d-a140-6b14ed289ff2"],
Cell[233669, 5201, 766, 20, 61, "DisplayFormulaNumbered",ExpressionUUID->"db86a230-5b1e-4fe3-95ba-6e4e94b0201d"],
Cell[234438, 5223, 698, 18, 33, "DisplayFormulaNumbered",ExpressionUUID->"3c09bb1f-eb89-48d7-852a-3ceb5f7869d2"],
Cell[235139, 5243, 907, 25, 61, "DisplayFormulaNumbered",ExpressionUUID->"9a6c9c06-bbdb-4d30-ae15-5a8af458f260"],
Cell[236049, 5270, 294, 7, 60, "Text",ExpressionUUID->"ba8ab0b2-920e-421b-b051-20637ca48939"],
Cell[236346, 5279, 653, 17, 61, "DisplayFormulaNumbered",ExpressionUUID->"fb8823b3-a39b-40d6-bfa4-60cc6197efe8"],
Cell[237002, 5298, 616, 19, 42, "DisplayFormulaNumbered",ExpressionUUID->"a5944e6b-c1e2-4355-bec7-2b12888c8d0e"],
Cell[CellGroupData[{
Cell[237643, 5321, 168, 3, 41, "Subsection",ExpressionUUID->"8872f092-b076-4f1d-8a50-196b896e8cb3"],
Cell[237814, 5326, 3402, 73, 247, "Text",ExpressionUUID->"437f3f51-3f90-4c54-ba24-046eb7577083"],
Cell[CellGroupData[{
Cell[241241, 5403, 1866, 39, 139, "Input",ExpressionUUID->"d142c329-5ece-4948-9cd1-0eafa77f0363"],
Cell[243110, 5444, 8030, 211, 70, "Output",ExpressionUUID->"bd6ba7b9-225d-428b-82a9-c6dd457094a1"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[251189, 5661, 159, 3, 40, "Subsection",ExpressionUUID->"148c0c4e-ef5b-4b4e-8401-4b6d7028be67"],
Cell[251351, 5666, 387, 6, 60, "Text",ExpressionUUID->"464727e5-9688-47e4-9fa8-a4a6e39e29ee"],
Cell[251741, 5674, 1859, 43, 130, "Input",ExpressionUUID->"22e779bc-5922-4e43-8ecc-e696f6ce8c12"]
}, Closed]],
Cell[CellGroupData[{
Cell[253637, 5722, 160, 3, 40, "Subsection",ExpressionUUID->"e34b4a76-5e00-4f52-8590-379e5e10ffc3"],
Cell[253800, 5727, 306, 5, 60, "Text",ExpressionUUID->"a23e953c-2e55-4aa9-96de-83ec96d542c5"],
Cell[254109, 5734, 3903, 70, 208, "Input",ExpressionUUID->"9fc998df-b844-4c4d-8b20-4682c622b1d0"]
}, Closed]],
Cell[CellGroupData[{
Cell[258049, 5809, 339, 5, 40, "Subsection",ExpressionUUID->"0e07c3a2-874e-408d-9286-9356269c9864"],
Cell[258391, 5816, 2781, 71, 358, "Text",ExpressionUUID->"8347131a-ee49-43f7-863e-d937b7676dfd"],
Cell[CellGroupData[{
Cell[261197, 5891, 10463, 174, 407, "Input",ExpressionUUID->"880e6f2e-2c72-44a8-8609-320d22162534"],
Cell[271663, 6067, 3823, 73, 70, "Output",ExpressionUUID->"b07364be-9ea8-4758-a6a7-fe4998b9c776"]
}, Open  ]],
Cell[275501, 6143, 5341, 144, 599, "Text",ExpressionUUID->"5fff4966-096a-44cc-ab3c-82d0767844e1"],
Cell[280845, 6289, 3453, 82, 377, "Input",ExpressionUUID->"88f5a1ae-eef7-4c06-a0db-0ec2d09b17e2"],
Cell[CellGroupData[{
Cell[284323, 6375, 21250, 424, 1701, "Input",ExpressionUUID->"75601b81-22f9-4a0c-a791-9b3d255dc64c"],
Cell[305576, 6801, 10761, 203, 70, "Output",ExpressionUUID->"fc4ec936-39d7-4da2-a076-fbbb6b4e7b9a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[316386, 7010, 170, 2, 40, "Subsection",ExpressionUUID->"a346459e-9fcf-4e77-95ad-ea44400ae082"],
Cell[316559, 7014, 1211, 30, 88, "Text",ExpressionUUID->"fb7c2896-c8c0-43ad-8c12-019a556a3ca8"],
Cell[317773, 7046, 1419, 35, 135, "Input",ExpressionUUID->"71a5a415-83da-4d91-9288-7d6b203dd2ec"],
Cell[319195, 7083, 2945, 74, 274, "Text",ExpressionUUID->"e0445422-d911-42db-a626-0070632dcf10"],
Cell[CellGroupData[{
Cell[322165, 7161, 17774, 370, 1435, "Input",ExpressionUUID->"318d1ea7-8e30-4ddd-8869-27ace3ff74f0"],
Cell[339942, 7533, 8910, 171, 70, "Output",ExpressionUUID->"9c59042b-efed-41d7-96d8-13c15b0cfdec"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[348925, 7712, 170, 3, 70, "Chapter",ExpressionUUID->"3169a658-391d-4481-8853-308bc394f7b2"],
Cell[349098, 7717, 1212, 34, 87, "Text",ExpressionUUID->"e3567f63-cdb0-49f5-871e-418d0b9d962b"],
Cell[CellGroupData[{
Cell[350335, 7755, 5023, 122, 702, "Input",ExpressionUUID->"a73eccfc-7ced-433f-9ec3-1933b88a7b7c"],
Cell[355361, 7879, 867, 18, 29, "Print",ExpressionUUID->"cc1ef242-26cd-4ec2-a7ce-a6f701aec2c6"],
Cell[356231, 7899, 230, 5, 51, "Output",ExpressionUUID->"dcc54060-02f3-4f93-9fb8-b190f32604f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356498, 7909, 164, 3, 41, "Subsection",ExpressionUUID->"edfbc71e-e1ba-427b-a171-be70e151d2b9"],
Cell[CellGroupData[{
Cell[356687, 7916, 649, 14, 51, "Input",ExpressionUUID->"88892e91-bf4a-4dde-b1c3-1a61a775069e"],
Cell[357339, 7932, 751, 14, 51, "Output",ExpressionUUID->"e78e0c16-c01a-4d55-b54c-f12dc8680abb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358127, 7951, 1366, 32, 104, "Input",ExpressionUUID->"8da7ec55-a034-45c5-830d-39821bac6afa"],
Cell[359496, 7985, 735, 15, 84, "Output",ExpressionUUID->"cbfb778d-546e-4d71-8d00-b660bd7b4f76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360268, 8005, 247, 5, 51, "Input",ExpressionUUID->"7b1fd37c-df4e-4400-9613-a0e5a97501d6"],
Cell[360518, 8012, 662, 13, 84, "Output",ExpressionUUID->"20ae4f33-a69f-4214-9053-0da6191839f7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[361229, 8031, 163, 3, 41, "Subsection",ExpressionUUID->"6a1b50f1-e698-41e4-8153-6575330f3060"],
Cell[CellGroupData[{
Cell[361417, 8038, 2924, 72, 338, "Input",ExpressionUUID->"de96b957-262a-4995-85f0-c5058cc48c4c"],
Cell[364344, 8112, 3043, 63, 593, "Output",ExpressionUUID->"14f20901-9550-4beb-8d89-f036ca0e37d9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[367436, 8181, 163, 3, 41, "Subsection",ExpressionUUID->"14c0c48c-552b-46da-9a8e-0142fdbfe345"],
Cell[CellGroupData[{
Cell[367624, 8188, 4046, 95, 338, "Input",ExpressionUUID->"246b9295-d5de-4e9c-b619-c977f1992771"],
Cell[371673, 8285, 316353, 5209, 629, "Output",ExpressionUUID->"6ff85017-e1e6-43df-bcbf-d0cd56ac7a8e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[688075, 13500, 177, 3, 41, "Subsection",ExpressionUUID->"c614e1cd-5ba6-4a38-9baf-484ccee08549"],
Cell[688255, 13505, 358, 11, 61, "Text",ExpressionUUID->"06f27e96-df14-45aa-938f-b961eb587335"],
Cell[CellGroupData[{
Cell[688638, 13520, 919, 23, 104, "Input",ExpressionUUID->"1a0178b0-6036-484b-91b9-6475a82c76e2"],
Cell[689560, 13545, 1371, 37, 272, "Output",ExpressionUUID->"198f5e0f-6058-4a4b-8c0f-f90a21440402"]
}, Open  ]],
Cell[CellGroupData[{
Cell[690968, 13587, 754, 19, 104, "Input",ExpressionUUID->"6fcc3160-1040-4ffc-899d-a85d2c57a3a4"],
Cell[691725, 13608, 1952, 40, 387, "Output",ExpressionUUID->"abad7b01-f88a-4347-9c92-d6002f2be18b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[693714, 13653, 404, 10, 51, "Input",ExpressionUUID->"2ac7211d-fbe2-4a0c-a19b-ac53f0f41926"],
Cell[694121, 13665, 829, 18, 78, "Output",ExpressionUUID->"84b30e27-d89d-409a-a6f1-86054d1059ee"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[694999, 13689, 227, 4, 41, "Subsection",ExpressionUUID->"c7b51503-6a6c-4887-be83-112940424c06"],
Cell[695229, 13695, 419, 8, 60, "Text",ExpressionUUID->"0d77ad90-153b-46ec-9e7c-2c7c6c185e85"],
Cell[695651, 13705, 439, 12, 78, "Input",ExpressionUUID->"ab4afc85-cda5-4ccb-9d8d-a5841e90b722"],
Cell[696093, 13719, 856, 23, 104, "Input",ExpressionUUID->"c70268c1-e8b2-4e50-92a5-18f9f14fd1e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[696986, 13747, 230, 4, 41, "Subsection",ExpressionUUID->"c05ae3ce-3535-4067-8ab0-8cde7ddcbdb8"],
Cell[697219, 13753, 786, 21, 78, "Input",ExpressionUUID->"468e60c3-02da-4454-9009-2fe528627c54"],
Cell[CellGroupData[{
Cell[698030, 13778, 637, 16, 78, "Input",ExpressionUUID->"6c7d905f-17f7-47be-9c25-962a24382f25"],
Cell[698670, 13796, 565, 12, 69, "Output",ExpressionUUID->"263fd696-60bf-47b1-b21d-6b10fbfc0e8f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[699284, 13814, 159, 3, 41, "Subsection",ExpressionUUID->"ec31f146-8931-460a-9179-6321edf47a75"],
Cell[699446, 13819, 510, 9, 86, "Text",ExpressionUUID->"e4b89aac-4a68-43c6-87b0-63e96c7f4a10"],
Cell[CellGroupData[{
Cell[699981, 13832, 449, 12, 71, "Input",ExpressionUUID->"3452abe2-a755-4fcb-9a96-a2b58f83b933"],
Cell[700433, 13846, 541, 11, 65, "Output",ExpressionUUID->"736293ab-9645-4318-8dd3-6ff4c19b7231"]
}, Open  ]],
Cell[700989, 13860, 148, 3, 60, "Text",ExpressionUUID->"b3c35773-e0dc-49c8-beb9-9a567dedff82"],
Cell[CellGroupData[{
Cell[701162, 13867, 233, 5, 51, "Input",ExpressionUUID->"e39a6e62-ad25-4aad-a1eb-341e8c2fea69"],
Cell[701398, 13874, 201, 4, 51, "Output",ExpressionUUID->"3125d85a-efa0-44c4-9303-990e9d487279"]
}, Open  ]],
Cell[CellGroupData[{
Cell[701636, 13883, 239, 5, 51, "Input",ExpressionUUID->"3659a9e3-93f2-42da-88ea-69a146dd6b56"],
Cell[701878, 13890, 15732, 274, 298, "Output",ExpressionUUID->"e32a0c05-da94-426e-9be8-393e214f6c97"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[717659, 14170, 168, 3, 41, "Subsection",ExpressionUUID->"f4e6571f-c400-4851-b8d4-c95c41505bd0"],
Cell[717830, 14175, 359, 8, 60, "Text",ExpressionUUID->"518ab8b7-5d71-4353-a3ce-7966b98966ab"],
Cell[718192, 14185, 176, 3, 60, "Text",ExpressionUUID->"906f09d0-7826-4047-8444-2381da0e96a6"],
Cell[CellGroupData[{
Cell[718393, 14192, 611, 17, 78, "Input",ExpressionUUID->"66070f2c-5dda-47e5-8835-b555adb4833e"],
Cell[719007, 14211, 587, 14, 65, "Output",ExpressionUUID->"616d0024-ac5e-4e26-91b1-ade0ee90b04b"]
}, Open  ]],
Cell[719609, 14228, 1218, 36, 88, "Text",ExpressionUUID->"3235eeca-a7d5-4d46-b0c6-7a4ceb38073a"],
Cell[CellGroupData[{
Cell[720852, 14268, 3426, 79, 234, "Input",ExpressionUUID->"5924a2a7-9b19-4683-8ab2-4daa41e1a542"],
Cell[724281, 14349, 3769, 91, 404, "Output",ExpressionUUID->"79bfa171-5a01-41f3-8439-02bd66e42acb"]
}, Open  ]],
Cell[728065, 14443, 229, 4, 60, "Text",ExpressionUUID->"d6e3a490-0e2b-4544-a435-08be90edac02"],
Cell[CellGroupData[{
Cell[728319, 14451, 266, 5, 51, "Input",ExpressionUUID->"e1ac0146-439c-44f6-8e50-91cbbc7503e2"],
Cell[728588, 14458, 81654, 1362, 629, "Output",ExpressionUUID->"75d4c3f7-647f-42c2-b710-803e4c308388"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[810291, 15826, 334, 10, 41, "Subsection",ExpressionUUID->"5e0711c4-924a-458c-b3ce-33e9085fe1f1"],
Cell[CellGroupData[{
Cell[810650, 15840, 455, 11, 78, "Input",ExpressionUUID->"fe51d88c-4b5b-4b1f-9d04-9c267c58e0a6"],
Cell[811108, 15853, 639, 12, 51, "Output",ExpressionUUID->"cab64ae6-c934-4f62-8663-0042aae75adf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[811796, 15871, 418, 11, 41, "Subsection",ExpressionUUID->"bb382692-3328-41de-956b-ff1f5a361472"],
Cell[CellGroupData[{
Cell[812239, 15886, 440, 10, 78, "Input",ExpressionUUID->"a2b33a60-16ef-481e-b201-c903e1c2bb81"],
Cell[812682, 15898, 556, 10, 51, "Output",ExpressionUUID->"0d7dca58-b4ac-4a6e-a52e-77c4c620604f"]
}, Open  ]],
Cell[813253, 15911, 1280, 29, 114, "Text",ExpressionUUID->"ccf8f245-133c-415a-a38c-e7ef630de126"],
Cell[CellGroupData[{
Cell[814558, 15944, 174, 3, 40, "Subsubsection",ExpressionUUID->"6fc39140-533b-469c-8bf2-a5a014b90f82"],
Cell[814735, 15949, 161, 3, 60, "Text",ExpressionUUID->"09b8fb5a-b4ed-40cd-8f18-677999cea3bf"],
Cell[CellGroupData[{
Cell[814921, 15956, 316, 7, 51, "Input",ExpressionUUID->"e8ba52b7-f774-4c3b-af84-a5bfb0b1ffcb"],
Cell[815240, 15965, 1166, 35, 268, "Output",ExpressionUUID->"da0184da-cfb1-4df8-af5f-efdefd226042"]
}, Open  ]],
Cell[816421, 16003, 695, 19, 78, "Input",ExpressionUUID->"dfaf568e-30ef-436f-affe-78618d51d348"],
Cell[817119, 16024, 196, 3, 60, "Text",ExpressionUUID->"96ce34de-e7c9-4134-81e7-6e70a5023717"],
Cell[CellGroupData[{
Cell[817340, 16031, 2021, 50, 260, "Input",ExpressionUUID->"ec1e2672-5646-4519-ab39-09b8c81c1892"],
Cell[819364, 16083, 2178, 51, 280, "Output",ExpressionUUID->"e34cfba3-36ce-4f8a-9e48-4c18ba723644"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[821591, 16140, 203, 3, 40, "Subsubsection",ExpressionUUID->"1071a97b-9de3-4dd8-91b1-585e6733971b"],
Cell[CellGroupData[{
Cell[821819, 16147, 1651, 43, 208, "Input",ExpressionUUID->"1898fa7b-8dcf-4e0e-aab0-0e629781e321"],
Cell[823473, 16192, 2381, 58, 292, "Output",ExpressionUUID->"497a423c-729c-4e87-bd5a-1ec07bc4cc51"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[825915, 16257, 167, 3, 41, "Subsection",ExpressionUUID->"d74d286b-7b01-4745-b903-b61a103503b6"],
Cell[CellGroupData[{
Cell[826107, 16264, 222, 4, 51, "Input",ExpressionUUID->"3b15fa89-b72f-4d3f-ab5a-974e7c28b2b7"],
Cell[826332, 16270, 201, 5, 51, "Output",ExpressionUUID->"267e0244-28b7-44e3-840d-a4844df03a21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[826570, 16280, 676, 19, 51, "Input",ExpressionUUID->"1e6028f6-c334-4c5e-9c10-7808a3ae30b1"],
Cell[827249, 16301, 279, 6, 51, "Output",ExpressionUUID->"0aede85b-e5a9-46e8-bbca-6c97e604a6f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[827565, 16312, 288, 6, 51, "Input",ExpressionUUID->"5bd0e76b-5c66-488b-b734-b4caf94d7ee0"],
Cell[827856, 16320, 315799, 5199, 685, "Output",ExpressionUUID->"ebfcadc1-d2fa-4b24-bda6-934f3b43ed73"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1143704, 21525, 167, 3, 41, "Subsection",ExpressionUUID->"fc683233-576e-4724-ab66-31393a1b7498"],
Cell[1143874, 21530, 197, 3, 60, "Text",ExpressionUUID->"c65431d1-e4da-4ad3-bd68-fdbfad6fe355"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1144120, 21539, 206, 4, 85, "Chapter",ExpressionUUID->"056c496c-e956-4271-a13b-65ea1a7d373d"],
Cell[1144329, 21545, 878, 15, 189, "Text",ExpressionUUID->"b87c5758-b88d-4767-9ee6-94476ab03370"]
}, Open  ]]
}, Open  ]]
}
]
*)

