(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1181647,      22222]
NotebookOptionsPosition[   1153860,      21756]
NotebookOutlinePosition[   1155991,      21812]
CellTagsIndexPosition[   1155787,      21802]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Kalman Folding versus Particle Filtering", "Title",
 CellChangeTimes->{{3.727038100871808*^9, 3.727038119380846*^9}, {
  3.727471593317396*^9, 3.7274715984595823`*^9}, {3.729120277549485*^9, 
  3.729120279330949*^9}, {3.729164818218039*^9, 3.729164831400428*^9}, {
  3.72917959045429*^9, 3.7291795965711203`*^9}, {3.7291976388841267`*^9, 
  3.729197641402032*^9}, {3.730240310944982*^9, 3.7302403258169117`*^9}},
 CellTags->"c:1",ExpressionUUID->"46e72bbd-9d98-4fc3-a048-c627688b2d9e"],

Cell["\<\
Brian Beckman
16 Mar 2018\
\>", "Text",
 CellChangeTimes->{{3.727471602355763*^9, 3.7274716101393967`*^9}, {
   3.727925773402236*^9, 3.727925775055613*^9}, {3.7291796049113493`*^9, 
   3.729179606176675*^9}, 3.729642307282371*^9, {3.72971195796128*^9, 
   3.729711959054461*^9}, {3.7297934248121*^9, 3.729793424979403*^9}, {
   3.730240347009062*^9, 
   3.73024034835723*^9}},ExpressionUUID->"0ef69e3e-2e07-4f1e-b61f-\
a0ae41c8374c"],

Cell[CellGroupData[{

Cell["Abstract", "Chapter",
 CellChangeTimes->{{3.729196441150124*^9, 3.7291964428392887`*^9}, {
  3.729793427963233*^9, 
  3.7297934299790154`*^9}},ExpressionUUID->"7b33e853-10e8-4eca-8119-\
0a1902f7cb69"],

Cell[TextData[{
 "Kalman Folding is equivalent to Renormalized Recurrent Least Squares, and \
is Bayesian by construction (Beckman, 2018, ",
 ButtonBox["https://goo.gl/CwLYjf",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://goo.gl/CwLYjf"], None},
  ButtonNote->"https://goo.gl/CwLYjf"],
 "). Therefore, it regularizes well. Sticking with concrete, numerical \
examples, we show that particle filtering can reproduce the results of Kalman \
Folding. For a more theoretical analysis, see Fern\[AAcute]ndez-Villaverde \
(",
 ButtonBox["http://www.ssc.upenn.edu/~jesusfv/filters_format.pdf",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.ssc.upenn.edu/~jesusfv/filters_format.pdf"], None},
  ButtonNote->"http://www.ssc.upenn.edu/~jesusfv/filters_format.pdf"],
 ")."
}], "Text",
 CellChangeTimes->{{3.7291964484304113`*^9, 3.729196613945616*^9}, 
   3.7292030970835457`*^9, {3.72968771341329*^9, 3.729687716858973*^9}, {
   3.729711791511696*^9, 3.72971179468015*^9}, {3.729793438706923*^9, 
   3.7297938892411823`*^9}, {3.729793935626384*^9, 3.729793942511643*^9}, {
   3.729793972831012*^9, 3.7297939745590477`*^9}, {3.729794610127033*^9, 
   3.729794682412895*^9}, {3.729794964535297*^9, 3.729795210547194*^9}, {
   3.729795571545514*^9, 3.7297956107276*^9}, {3.729796915642858*^9, 
   3.729796923833707*^9}, 3.729885268229594*^9, {3.730240350695836*^9, 
   3.730240590431933*^9}, 
   3.730309292903762*^9},ExpressionUUID->"c320baf2-7cc2-420c-8595-\
6c07171d2c4f"],

Cell["\<\
We show, by numerical examples, that Kalman folding (KAL) produces the same \
results as recurrent least squares (RLS) and maximum a-posteriori (MAP), for \
appropriate choices of a-priori covariances, i.e., regularization \
hyperparameters. KAL and RLS are more intuitive than MAP for practical \
applications, plus offer space-time efficiency over MAP by avoiding storage \
and multiplication of large matrices. Because RLS and KAL are overt \
recurrences, a-priori data are necessary to bootstrap them, so regularization \
is naturally built-in to the formulation: they are Bayesian by construction. \
Contrast MAP, wherein a-priori belief is introduced as a Bayesian \
modification of traditional, maximum-likelihood (MLE) least-squares through \
the normal equations. 

We exploit the novel fact that MAP is invariant when its hyperparameters are \
both swapped and inverted. After that transformation, the MAP equations \
strongly resemble the equations of Kalman filtering. This resemblance may \
suggest a future, general proof of the invariance, perhaps by conversion of \
MAP from explicit to recurrent form.\
\>", "Text",
 CellChangeTimes->{{3.7291964484304113`*^9, 3.729196613945616*^9}, 
   3.7292030970835457`*^9, {3.72968771341329*^9, 3.729687716858973*^9}, {
   3.729711791511696*^9, 3.72971179468015*^9}, {3.729793438706923*^9, 
   3.7297938892411823`*^9}, {3.729793935626384*^9, 3.729793942511643*^9}, {
   3.729793972831012*^9, 3.7297939745590477`*^9}, {3.729794610127033*^9, 
   3.729794682412895*^9}, {3.729794964535297*^9, 3.729795210547194*^9}, {
   3.729795571545514*^9, 3.7297956107276*^9}, {3.729796915642858*^9, 
   3.729796923833707*^9}, 3.729885268229594*^9, {3.730240350695836*^9, 
   3.730240590431933*^9}, 
   3.730309307675218*^9},ExpressionUUID->"515689e5-24c9-4f03-a68b-\
2166895245cd"]
}, Closed]],

Cell[CellGroupData[{

Cell["Recurrence", "Chapter",
 CellChangeTimes->{{3.7270402093685093`*^9, 3.727040216990353*^9}, {
  3.72744887906024*^9, 3.727448879173937*^9}},
 CellTags->"c:9",ExpressionUUID->"5ca12084-879f-4910-924b-31070b62bbff"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["Fold", TraditionalForm]], "Code",ExpressionUUID->
  "9d09a6fc-b121-455e-a488-8b5ba33270cc"],
 " this recurrence over ",
 Cell[BoxData[
  FormBox["\[CapitalZeta]", TraditionalForm]],ExpressionUUID->
  "604c3712-17a2-49f9-be34-dd3b93db078a"],
 " and ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "cf261e04-8ab6-46fc-8bda-0e7b27452129"],
 ":"
}], "Text",
 CellChangeTimes->{{3.7274333353229113`*^9, 3.727433378179881*^9}, {
  3.7274334464649353`*^9, 3.727433551754867*^9}, {3.727433834133542*^9, 
  3.727433857990193*^9}, {3.7274406408677483`*^9, 3.727440686530654*^9}, {
  3.7274413441593647`*^9, 3.7274413518281183`*^9}, {3.727472397267685*^9, 
  3.727472404763022*^9}, {3.727475498217351*^9, 3.727475507311516*^9}, {
  3.728949021675457*^9, 3.728949025315466*^9}, {3.7296432127240763`*^9, 
  3.729643225187282*^9}},ExpressionUUID->"d8064256-ea88-4413-9e76-\
c45a89df3e2c"],

Cell[BoxData[{
 FormBox[
  RowBox[{"\[Xi]", "\[LeftArrow]", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[CapitalLambda]", "+", 
       RowBox[{
        RowBox[{"a", "\[Transpose]"}], "\[CenterDot]", "a"}]}], ")"}], 
     RowBox[{"-", "1"}]], "\[CenterDot]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"a", "\[Transpose]"}], "\[CenterDot]", "\[Zeta]"}], "+", 
      RowBox[{"\[CapitalLambda]", "\[CenterDot]", "\[Xi]"}]}], ")"}]}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"\[CapitalLambda]", "\[LeftArrow]", 
   RowBox[{"(", 
    RowBox[{"\[CapitalLambda]", "+", 
     RowBox[{
      RowBox[{"a", "\[Transpose]"}], "\[CenterDot]", "a"}]}], ")"}]}], 
  TraditionalForm]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.7274335859903107`*^9, 3.727433717944153*^9}, {
  3.727435926163211*^9, 3.7274359787146387`*^9}, {3.7274435816067543`*^9, 
  3.7274435995641823`*^9}, {3.727443898455867*^9, 3.727443902554981*^9}, {
  3.7289483265782537`*^9, 
  3.728948362573649*^9}},ExpressionUUID->"b41450de-8c92-4abf-a6d8-\
d24839b3c1b9"],

Cell["where", "Text",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.7274743159268417`*^9, 
   3.7274743397668333`*^9}, {3.727475519390863*^9, 3.727475555533572*^9}, {
   3.728948365542074*^9, 3.728948365542119*^9}, 3.728948905148108*^9, {
   3.728948947025461*^9, 3.728948959432898*^9}, {3.729163268464349*^9, 
   3.729163279091194*^9}},ExpressionUUID->"b69e6191-6f6f-479e-9f67-\
c7f4911cd65f"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["\[Xi]", TraditionalForm]],ExpressionUUID->
  "ca15d208-e524-41c0-86fa-973d1991e372"],
 " is the current estimate of ",
 Cell[BoxData[
  FormBox["\[CapitalXi]", TraditionalForm]],ExpressionUUID->
  "7e9f4450-1588-4d24-a011-c32f0e00a6ac"]
}], "Item",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.7274743159268417`*^9, 
   3.7274743397668333`*^9}, {3.727475519390863*^9, 3.727475555533572*^9}, {
   3.728948365542074*^9, 3.728948365542119*^9}, 3.728948905148108*^9, {
   3.728948947025461*^9, 3.728948959432898*^9}, {3.729163268464349*^9, 
   3.7291632861423903`*^9}},ExpressionUUID->"a79a1b73-f840-4373-9de5-\
4f3d510e4877"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "a23b953c-cf49-41f8-8447-fbb397bff922"],
 " and ",
 Cell[BoxData[
  FormBox["\[Zeta]", TraditionalForm]],ExpressionUUID->
  "6d94e1b0-0bbb-42e2-906c-580263360fee"],
 " are matched rows of ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "9a4623dd-e230-41f2-9800-86cd6f5d5c72"],
 " and ",
 Cell[BoxData[
  FormBox["\[CapitalZeta]", TraditionalForm]],ExpressionUUID->
  "eb9de015-f9e0-4d0b-a5ef-5bef8a6f08fe"]
}], "Item",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.7274743159268417`*^9, 
   3.7274743397668333`*^9}, {3.727475519390863*^9, 3.727475555533572*^9}, {
   3.728948365542074*^9, 3.728948365542119*^9}, 3.728948905148108*^9, {
   3.728948947025461*^9, 3.728948959432898*^9}, {3.729163268464349*^9, 
   3.72916328446143*^9}},ExpressionUUID->"25c14485-f621-49c2-815a-\
0138e9bcfafe"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\[CapitalLambda]", TraditionalForm]],ExpressionUUID->
  "40f23918-c675-4b98-8edb-bb01eadd40cd"],
 " accumulates ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", "\[Transpose]"}], "\[CenterDot]", "A"}], TraditionalForm]],
  ExpressionUUID->"dadb94d5-443c-474e-b745-213b7ceefa94"],
 ". "
}], "Item",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.7274743159268417`*^9, 
   3.7274743397668333`*^9}, {3.727475519390863*^9, 3.727475555533572*^9}, {
   3.728948365542074*^9, 3.728948365542119*^9}, 3.728948905148108*^9, {
   3.728948947025461*^9, 3.728948959432898*^9}, {3.729163268464349*^9, 
   3.729163280317943*^9}},ExpressionUUID->"b287db3f-854c-4605-9ef7-\
c238056ab28a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Derivation Sketch", "Subsection",
 CellChangeTimes->{{3.729181602847373*^9, 
  3.7291816059298487`*^9}},ExpressionUUID->"2e3a9bc5-72f8-4480-9a80-\
6f3b0bf6d7a4"],

Cell["\<\
Derive the recurrence as follows: Treat the estimate-so-far, \
\>", "Text",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.7274743159268417`*^9, 
   3.727474381777117*^9}, {3.7274744338469057`*^9, 3.727474441826235*^9}, {
   3.727474630428966*^9, 3.727474631651125*^9}, {3.727474814968113*^9, 
   3.7274748698817673`*^9}, {3.727475577962327*^9, 3.7274756335231857`*^9}, {
   3.7278780344572*^9, 3.727878045059162*^9}, 3.727966016823514*^9, {
   3.7279661542692223`*^9, 3.727966155428653*^9}, {3.727966432921638*^9, 
   3.7279665200041933`*^9}, {3.729163880807461*^9, 3.729163884901907*^9}, 
   3.7291816149796658`*^9},ExpressionUUID->"b476c8cc-7dd2-4347-bad7-\
323d48c72da2"],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Xi]", 
    RowBox[{"so", "-", "far"}]], 
   OverscriptBox["=", "def"], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "\[Transpose]"}], "\[CenterDot]", "A"}], ")"}], 
     RowBox[{"-", "1"}]], "\[CenterDot]", 
    RowBox[{"A", "\[Transpose]"}], "\[CenterDot]", 
    SubscriptBox["\[CapitalZeta]", 
     RowBox[{"so", "-", "far"}]]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.7274743159268417`*^9, 
   3.727474381777117*^9}, {3.7274744338469057`*^9, 3.727474441826235*^9}, {
   3.727474630428966*^9, 3.727474631651125*^9}, {3.727474814968113*^9, 
   3.7274748698817673`*^9}, {3.727475577962327*^9, 3.7274756335231857`*^9}, {
   3.7278780344572*^9, 3.727878045059162*^9}, 3.727966016823514*^9, {
   3.7279661542692223`*^9, 3.727966155428653*^9}, {3.727966432921638*^9, 
   3.727966534440386*^9}, 3.728948369963612*^9, {3.729163903631165*^9, 
   3.7291639050399637`*^9}},ExpressionUUID->"7d3a92e3-5494-448b-b4f2-\
9dabf9fef7b7"],

Cell["as just one more observation with information matrix ", "Text",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.7274743159268417`*^9, 
   3.727474381777117*^9}, {3.7274744338469057`*^9, 3.727474441826235*^9}, {
   3.727474630428966*^9, 3.727474631651125*^9}, {3.727474814968113*^9, 
   3.7274748698817673`*^9}, {3.727475577962327*^9, 3.7274756335231857`*^9}, {
   3.7278780344572*^9, 3.727878045059162*^9}, 3.727966016823514*^9, {
   3.7279661542692223`*^9, 3.727966155428653*^9}, {3.727966432921638*^9, 
   3.7279665258422337`*^9}, {3.728091815451824*^9, 3.728091821154443*^9}, 
   3.729023129658637*^9, {3.729643258643651*^9, 
   3.729643268273799*^9}},ExpressionUUID->"fd432c05-60e5-45d9-a0d4-\
e9815082cb3a"],

Cell[BoxData[
 FormBox[
  RowBox[{"\[CapitalLambda]", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["A", 
      RowBox[{"so", "-", "far"}]], "\[Transpose]"}], "\[CenterDot]", 
    SubscriptBox["A", 
     RowBox[{"so", "-", "far"}]]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.7274743159268417`*^9, 
   3.727474381777117*^9}, {3.7274744338469057`*^9, 3.727474441826235*^9}, {
   3.727474630428966*^9, 3.727474631651125*^9}, {3.727474814968113*^9, 
   3.7274748698817673`*^9}, {3.727475577962327*^9, 3.7274756335231857`*^9}, {
   3.7278780344572*^9, 3.727878045059162*^9}, 3.727966016823514*^9, {
   3.7279661542692223`*^9, 3.727966155428653*^9}, {3.727966432921638*^9, 
   3.7279665258422337`*^9}, {3.728091815451824*^9, 3.728091821154443*^9}, {
   3.729023134641241*^9, 
   3.729023151157517*^9}},ExpressionUUID->"cb5ec10e-ef83-45dc-a95d-\
b26bb7cc2387"],

Cell[TextData[{
 "The scalar ",
 StyleBox["performance",
  FontSlant->"Italic"],
 " or ",
 StyleBox["squared error",
  FontSlant->"Italic"],
 " of the estimate, so far, is"
}], "Text",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.7274743159268417`*^9, 
   3.727474381777117*^9}, {3.7274744338469057`*^9, 3.727474441826235*^9}, {
   3.727474630428966*^9, 3.727474631651125*^9}, {3.727474814968113*^9, 
   3.7274748698817673`*^9}, {3.727475577962327*^9, 3.7274756335231857`*^9}, {
   3.7278780344572*^9, 3.727878045059162*^9}, 3.727966016823514*^9, {
   3.7279661542692223`*^9, 3.727966155428653*^9}, {3.727966432921638*^9, 
   3.7279665258422337`*^9}, {3.728091815451824*^9, 
   3.728091821154443*^9}},ExpressionUUID->"0fc7f18d-76fb-476f-9557-\
b54be5d9d15c"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"J", "(", "\[Xi]", ")"}], "  ", "=", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[CapitalZeta]", 
         RowBox[{"so", "-", "far"}]], "-", 
        RowBox[{
         SubscriptBox["A", 
          RowBox[{"so", "-", "far"}]], "\[CenterDot]", "\[Xi]"}]}], ")"}], 
      "\[Transpose]"}], "\[CenterDot]", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[CapitalZeta]", 
        RowBox[{"so", "-", "far"}]], "-", 
       RowBox[{
        SubscriptBox["A", 
         RowBox[{"so", "-", "far"}]], "\[CenterDot]", "\[Xi]"}]}], ")"}]}], 
    "  ", "=", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Xi]", "-", 
        SubscriptBox["\[Xi]", 
         RowBox[{"so", "-", "far"}]]}], ")"}], "\[Transpose]"}], 
     "\[CenterDot]", "\[CapitalLambda]", "\[CenterDot]", 
     RowBox[{"(", 
      RowBox[{"\[Xi]", "-", 
       SubscriptBox["\[Xi]", 
        RowBox[{"so", "-", "far"}]]}], ")"}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.7274743159268417`*^9, 
   3.727474381777117*^9}, {3.7274744338469057`*^9, 3.727474441826235*^9}, {
   3.727474630428966*^9, 3.727474631651125*^9}, {3.727474814968113*^9, 
   3.7274748698817673`*^9}, {3.727475577962327*^9, 3.7274756335231857`*^9}, {
   3.7278780344572*^9, 3.727878045059162*^9}, {3.727966018203845*^9, 
   3.727966033785829*^9}, {3.727966098475103*^9, 3.7279661060884457`*^9}, {
   3.727966143206888*^9, 3.727966171156918*^9}, {3.7279662043636503`*^9, 
   3.727966213619438*^9}, {3.727966500313883*^9, 3.727966508975876*^9}, {
   3.7289483740986834`*^9, 3.728948376110648*^9}, {3.729023185419231*^9, 
   3.729023197425653*^9}},ExpressionUUID->"c9484120-6938-4df2-8e1a-\
776c32bc4669"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox["\[Xi]", TraditionalForm]],ExpressionUUID->
  "dabda0f9-23ef-422e-9934-9019237efd52"],
 " is the unknown true parameter vector, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalZeta]", 
    RowBox[{"so", "-", "far"}]], TraditionalForm]],ExpressionUUID->
  "684f54e2-bac0-42af-ad38-c1084a76ae15"],
 " is the column vector of all observations so-far, and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalLambda]", "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["A", 
       RowBox[{"so", "-", "far"}]], "\[Transpose]"}], "\[CenterDot]", 
     SubscriptBox["A", 
      RowBox[{"so", "-", "far"}]]}]}], TraditionalForm]],ExpressionUUID->
  "88dc0af1-fc18-4f07-8ec8-6c0cef0ffb99"],
 " . Adding a new observation, ",
 Cell[BoxData[
  FormBox["\[Zeta]", TraditionalForm]],ExpressionUUID->
  "f1276f71-b142-463f-9ad8-441cb4641cde"],
 " and its corresponding partial row covector ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "53497380-bd47-4d43-9f90-bf6637131b87"],
 ", increases the error ",
 Cell[BoxData[
  FormBox[
   RowBox[{"J", "(", "\[Xi]", ")"}], TraditionalForm]],ExpressionUUID->
  "f0d40762-7e96-4647-bdc6-37929527ce7b"],
 " by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Zeta]", "-", 
       RowBox[{"a", "\[CenterDot]", "\[Xi]"}]}], ")"}], "\[Transpose]"}], 
    "\[CenterDot]", 
    RowBox[{"(", 
     RowBox[{"\[Zeta]", "-", 
      RowBox[{"a", "\[CenterDot]", "\[Xi]"}]}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"9ec14d68-822d-4fce-a2c9-85c5fb353fe0"],
 ". Minimize the new total error with respect to ",
 Cell[BoxData[
  FormBox["\[Xi]", TraditionalForm]],ExpressionUUID->
  "96d4bc3a-53e7-428b-90b0-341c7f7145b3"],
 " to find the recurrence (exercise). \[FilledSquare]\n\nWe see that RLS \
perforce introduces an a-priori estimate ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "0"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a3077632-64d2-4dd3-97b2-78d84dfbc138"],
 " and its covariance, which is the inverse of the information matrix ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalLambda]", "0"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "09ea8b7f-b9f9-4c6c-bfbc-41c5d12b2f3e"],
 ". RLS is Bayesian by construction. We show below that, when renormalized \
with an a-priori covariance for the observations ",
 Cell[BoxData[
  FormBox["\[Zeta]", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "27be3aff-c6a3-47ce-bd0d-45ac2c3f778a"],
 ", is theoretically equivalent to KAL and numerically equivalent to MAP. \
Proof of theoretical equivalence to MAP awaits future work."
}], "Text",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.7274743159268417`*^9, 
   3.727474381777117*^9}, {3.7274744338469057`*^9, 3.727474441826235*^9}, {
   3.727474630428966*^9, 3.727474631651125*^9}, {3.727474814968113*^9, 
   3.7274748698817673`*^9}, {3.727475577962327*^9, 3.7274756335231857`*^9}, {
   3.7278780344572*^9, 3.727878045059162*^9}, {3.727966018203845*^9, 
   3.727966022744957*^9}, {3.727966060652214*^9, 3.7279660814388037`*^9}, {
   3.727966122293776*^9, 3.727966131387149*^9}, {3.727966225308963*^9, 
   3.7279663153865147`*^9}, {3.72796657797972*^9, 3.7279665841676197`*^9}, {
   3.7290232013137093`*^9, 3.7290232220612392`*^9}, {3.729023260685502*^9, 
   3.729023282116056*^9}, 3.729119179347542*^9, {3.729163926938323*^9, 
   3.729163937969397*^9}, {3.729796790646969*^9, 3.72979688978856*^9}, {
   3.729796948582293*^9, 
   3.7297970605133133`*^9}},ExpressionUUID->"d23a3057-56ef-41ce-84aa-\
fdc26a29db70"]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical Demonstration", "Subsection",
 CellChangeTimes->{{3.729181632544861*^9, 
  3.7291816365144157`*^9}},ExpressionUUID->"be95aebf-ae56-4456-8c29-\
d08dcb53f0e5"],

Cell[TextData[{
 "Bootstrap the recurrence with ad-hoc, a-priori values ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Xi]", "0"], "=", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {"0", "0"}
       }], ")"}], "\[Transpose]"}]}], TraditionalForm]],ExpressionUUID->
  "95c478f8-14cb-4c33-8055-6e0a24add5df"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[CapitalLambda]", "0"], "=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]], "0"}
        }], ")"}], 
      RowBox[{"(", GridBox[{
         {"0", 
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]]}
        }], ")"}]}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "e79d365d-7771-4fa6-b690-5108edb5e668"],
 ". "
}], "Text",
 CellChangeTimes->{{3.727433690566415*^9, 3.727433691990076*^9}, {
   3.727433722702998*^9, 3.727433752037438*^9}, {3.727433801728943*^9, 
   3.727433813439355*^9}, {3.727435879529455*^9, 3.727435920139254*^9}, {
   3.7274395624863253`*^9, 3.72743960583661*^9}, {3.727439679294853*^9, 
   3.727439942216538*^9}, {3.727440429170088*^9, 3.727440449936098*^9}, {
   3.727440693988052*^9, 3.727440706787099*^9}, {3.727442440538804*^9, 
   3.7274424436438828`*^9}, {3.727443225488162*^9, 3.727443283700737*^9}, {
   3.727443629007498*^9, 3.727443630821762*^9}, {3.727445076605159*^9, 
   3.7274450788697367`*^9}, {3.727454527614051*^9, 3.727454553816103*^9}, {
   3.7274545955114317`*^9, 3.727454595511548*^9}, {3.7274546866285877`*^9, 
   3.727454763133893*^9}, {3.727455239597176*^9, 3.727455255845674*^9}, {
   3.7274553253206472`*^9, 3.727455326184396*^9}, 3.727455653598051*^9, {
   3.727472422563363*^9, 3.7274724518468323`*^9}, {3.727475653063583*^9, 
   3.727475668421556*^9}, {3.727878056292527*^9, 3.7278781337625647`*^9}, {
   3.727966321732579*^9, 3.727966322440028*^9}, {3.727966591137054*^9, 
   3.727966628253271*^9}, {3.727966659401678*^9, 3.7279667699874363`*^9}, {
   3.728091848600717*^9, 3.728091848856659*^9}, {3.7289483786020403`*^9, 
   3.728948380301387*^9}, {3.729163955385151*^9, 3.729163980174839*^9}, {
   3.729643297812354*^9, 3.729643332107801*^9}, {3.7297970766391563`*^9, 
   3.7297970790208406`*^9}},ExpressionUUID->"649161c4-6177-4aec-b03d-\
15d263642f9d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "update", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"update", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Xi]_", ",", "\[CapitalLambda]_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Zeta]_", ",", "a_"}], "}"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalPi]", "=", 
        RowBox[{"(", 
         RowBox[{"\[CapitalLambda]", "+", 
          RowBox[{
           RowBox[{"a", "\[Transpose]"}], ".", "a"}]}], ")"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Inverse", "[", "\[CapitalPi]", "]"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"a", "\[Transpose]"}], ".", "\[Zeta]"}], "+", " ", 
           RowBox[{"\[CapitalLambda]", ".", "\[Xi]"}]}], ")"}]}], ",", 
        "\[CapitalPi]"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"MatrixForm", "/@", "\[IndentingNewLine]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"mBar"},
         {"bBar"}
        }], ")"}], ",", "\[CapitalPi]"}], "}"}], "=", "\[IndentingNewLine]", 
    RowBox[{
     StyleBox["Fold",
      Background->RGBColor[1, 1, 0]], "[", 
     RowBox[{"update", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", GridBox[{
           {"0"},
           {"0"}
          }], ")"}], ",", 
        RowBox[{"(", GridBox[{
           {"1.0*^-6", "0"},
           {"0", "1.0*^-6"}
          }], ")"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"List", "/@", "data"}], ",", 
         RowBox[{"List", "/@", "partials"}]}], "}"}], "\[Transpose]"}]}], 
     "]"}]}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.727054852495049*^9, 3.72705494257406*^9}, {
   3.727055026792467*^9, 3.727055093506559*^9}, {3.7270551930291023`*^9, 
   3.727055263833913*^9}, {3.727055297216107*^9, 3.7270554270906563`*^9}, {
   3.7270560338846903`*^9, 3.72705612788085*^9}, {3.7270561855129213`*^9, 
   3.7270561959544077`*^9}, {3.727056250031129*^9, 3.727056367103942*^9}, {
   3.727056427865035*^9, 3.727056443080068*^9}, {3.727056561323501*^9, 
   3.727056598046468*^9}, {3.727056640141169*^9, 3.727056654582451*^9}, {
   3.727056728700244*^9, 3.7270567914565277`*^9}, {3.727056869366274*^9, 
   3.727056921039433*^9}, 3.72705709924362*^9, {3.727057420502048*^9, 
   3.7270575464285316`*^9}, {3.7270577446377487`*^9, 3.727057775909028*^9}, {
   3.7270578799866133`*^9, 3.727057901007744*^9}, 3.7270581603330593`*^9, {
   3.727058349930079*^9, 3.7270584478842707`*^9}, {3.727058490337566*^9, 
   3.727058577824399*^9}, {3.727058673744141*^9, 3.7270586947547493`*^9}, {
   3.727058788099071*^9, 3.7270588909590683`*^9}, {3.727058934322414*^9, 
   3.7270589393580847`*^9}, {3.72705898616982*^9, 3.7270589868650723`*^9}, {
   3.7270592331231947`*^9, 3.727059237300102*^9}, {3.7274435231168203`*^9, 
   3.727443546500602*^9}, {3.727443876120749*^9, 3.7274438848810577`*^9}, {
   3.727444759010458*^9, 3.727444822403467*^9}, {3.727444904584729*^9, 
   3.727444917600658*^9}, {3.727444951170147*^9, 3.72744495624857*^9}, {
   3.727455276322372*^9, 3.7274553027713842`*^9}, {3.727455828581184*^9, 
   3.727455858661305*^9}, {3.7274561810931997`*^9, 3.727456183162497*^9}, {
   3.727472496770452*^9, 3.727472540592374*^9}, {3.727472571262414*^9, 
   3.7274725926081057`*^9}, {3.727473460371025*^9, 3.727473470385874*^9}, {
   3.727967024755598*^9, 3.7279670373987417`*^9}, 3.727967235445434*^9, {
   3.728948393392125*^9, 3.728948394937408*^9}, {3.729174117188925*^9, 
   3.729174123668703*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"1ca2d39a-8b84-45ae-9746-a7660d91ebc7"],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"data\\\", \\\",\\\", \\\"partials\\\"}], \\\"}\\\"}]\\) cannot be \
transposed.\"",2,3,7,30924607878342175323,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.730380090801103*^9, 3.730385741816516*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"a3629673-03f2-4ce6-85a5-6f6b0566c118"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"0.`", "\[VeryThinSpace]", "+", 
              RowBox[{
               RowBox[{"Transpose", "[", "partials", "]"}], ".", "data"}]}], 
             ")"}], " ", 
            RowBox[{
             RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}]}], 
           RowBox[{"1.`*^-12", "+", 
            RowBox[{"2.`*^-6", " ", 
             RowBox[{
              RowBox[{"Transpose", "[", "partials", "]"}], ".", 
              "partials"}]}]}]]}], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{
              RowBox[{"Transpose", "[", "partials", "]"}], ".", "data"}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1.`*^-6", "+", 
             RowBox[{
              RowBox[{"Transpose", "[", "partials", "]"}], ".", 
              "partials"}]}], ")"}]}], 
          RowBox[{"1.`*^-12", "+", 
           RowBox[{"2.`*^-6", " ", 
            RowBox[{
             RowBox[{"Transpose", "[", "partials", "]"}], ".", 
             "partials"}]}]}]]}]},
       {
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"0.`", "\[VeryThinSpace]", "+", 
              RowBox[{
               RowBox[{"Transpose", "[", "partials", "]"}], ".", "data"}]}], 
             ")"}], " ", 
            RowBox[{
             RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}]}], 
           RowBox[{"1.`*^-12", "+", 
            RowBox[{"2.`*^-6", " ", 
             RowBox[{
              RowBox[{"Transpose", "[", "partials", "]"}], ".", 
              "partials"}]}]}]]}], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{
              RowBox[{"Transpose", "[", "partials", "]"}], ".", "data"}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1.`*^-6", "+", 
             RowBox[{
              RowBox[{"Transpose", "[", "partials", "]"}], ".", 
              "partials"}]}], ")"}]}], 
          RowBox[{"1.`*^-12", "+", 
           RowBox[{"2.`*^-6", " ", 
            RowBox[{
             RowBox[{"Transpose", "[", "partials", "]"}], ".", 
             "partials"}]}]}]]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"1.`*^-6", "+", 
         RowBox[{
          RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}]}], 
        RowBox[{
         RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}]},
       {
        RowBox[{
         RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}], 
        RowBox[{"1.`*^-6", "+", 
         RowBox[{
          RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.727472529149095*^9, 3.727472541371006*^9}, {
   3.727472582072073*^9, 3.727472596728858*^9}, 3.72747347227721*^9, 
   3.727485511156743*^9, 3.727486308620812*^9, 3.727878578245182*^9, 
   3.727880787316627*^9, 3.727881187795374*^9, 3.72788136748368*^9, 
   3.7279153851348257`*^9, 3.727918036577284*^9, 3.7279180943800097`*^9, 
   3.727924197677032*^9, {3.727927706752205*^9, 3.727927731973207*^9}, 
   3.727967810149074*^9, 3.7279687330645437`*^9, 3.727969808085505*^9, 
   3.727969954973427*^9, 3.728044351569767*^9, 3.72804644760787*^9, 
   3.728066469525443*^9, 3.728068120668467*^9, 3.728083783280686*^9, 
   3.728090741272605*^9, 3.728169444994749*^9, 3.728169540556728*^9, 
   3.7281698227111*^9, 3.7281698827372704`*^9, 3.72825295523654*^9, 
   3.728946255665695*^9, 3.72902289982128*^9, {3.729119978255114*^9, 
   3.729119995360593*^9}, 3.7291210718114223`*^9, 3.729121110350542*^9, 
   3.7291723072225113`*^9, 3.729174119552033*^9, 3.729175690243061*^9, 
   3.729175768561432*^9, 3.729183411998878*^9, {3.729183447270482*^9, 
   3.7291834602232447`*^9}, 3.729255936689374*^9, 3.7295523012311068`*^9, 
   3.729557875800249*^9, 3.7296298378048058`*^9, 3.72963463574932*^9, 
   3.729642872038753*^9, 3.729642908638049*^9, 3.729643938027584*^9, 
   3.729647184308378*^9, 3.729683201116581*^9, 3.729778153560226*^9, 
   3.729779231717586*^9, 3.729779279623641*^9, 3.7298946995998697`*^9, 
   3.729896005475109*^9, 3.729896152143077*^9, 3.7298972950331507`*^9, 
   3.730140354438093*^9, 3.7302402706521597`*^9, 3.730380090833795*^9, 
   3.7303857418274603`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"98bf2d20-5a43-4e89-906b-c67f4e5b682d"]
}, Open  ]],

Cell[TextData[{
 "The estimates ",
 Cell[BoxData[
  FormBox["mBar", TraditionalForm]], "Code",ExpressionUUID->
  "ace851a5-9f4d-49ce-a0fa-1ee094af68d5"],
 " and ",
 Cell[BoxData[
  FormBox["bBar", TraditionalForm]], "Code",ExpressionUUID->
  "1f76bfd3-e9db-47db-a0f3-738e5d40384b"],
 " are, numerically, the same as we got from Wolfram\[CloseCurlyQuote]s \
built-in. For this example, the choice of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "0"], TraditionalForm]],ExpressionUUID->
  "7a752cc3-5524-4727-98d1-99e9e3e3c2f9"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalLambda]", "0"], TraditionalForm]],ExpressionUUID->
  "1040a599-038c-43fc-961e-93c029f458cd"],
 " had negligible effect. "
}], "Text",
 CellChangeTimes->{{3.727455669635949*^9, 3.727455714844105*^9}, {
   3.727456293561727*^9, 3.727456338621636*^9}, {3.727456381984915*^9, 
   3.727456493199937*^9}, {3.7274567040936413`*^9, 3.727456704869124*^9}, {
   3.727456739701139*^9, 3.72745677855204*^9}, {3.727472821547103*^9, 
   3.727472872838442*^9}, {3.7279667472572412`*^9, 3.72796679667021*^9}, {
   3.72894839921102*^9, 3.728948399211062*^9}, {3.729181651280912*^9, 
   3.729181667411229*^9}, {3.729643345781581*^9, 3.729643368401565*^9}, 
   3.729797100393939*^9},ExpressionUUID->"f4fe2489-d9cf-4ac7-b0c5-\
50fd8c858a33"]
}, Closed]],

Cell[CellGroupData[{

Cell["Structural Notes", "Subsection",
 CellChangeTimes->{{3.729181678137927*^9, 
  3.729181681293388*^9}},ExpressionUUID->"3967f398-3eab-437f-8b80-\
7de90dfe491f"],

Cell[TextData[{
 "The mappings of ",
 Cell[BoxData[
  FormBox["List", TraditionalForm]], "Code",ExpressionUUID->
  "370d0a8b-9c99-495c-8b0f-e38240d3f06a"],
 " over the data and partials convert them into column vectors. Wolfram \
built-ins and the normal equations, implicitly, treat one-dimensional lists \
as columns or rows as needed, then compute inner (dot) products as if the \
distinction did not matter. Python\[CloseCurlyQuote]s numpy has the same \
dubious feature. "
}], "Text",
 CellChangeTimes->{{3.727473114735071*^9, 3.727473196429072*^9}, 
   3.727475691841303*^9, {3.727879000591062*^9, 3.727879183230468*^9}, {
   3.727966817515026*^9, 3.727966992448154*^9}, {3.728091889609682*^9, 
   3.7280919220828123`*^9}, {3.729023350420405*^9, 3.729023392246647*^9}, {
   3.729119179359543*^9, 3.729119179371344*^9}, {3.7291640123507442`*^9, 
   3.7291640329396763`*^9}, {3.72916408829683*^9, 3.7291641046167603`*^9}, {
   3.729181694426371*^9, 
   3.729181705205323*^9}},ExpressionUUID->"5fa63877-d682-4369-8865-\
5a95b2249de3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Memory and Time Efficiency", "Subsection",
 CellChangeTimes->{{3.729181722918578*^9, 
  3.7291817314071093`*^9}},ExpressionUUID->"a6c792dc-4c21-42d8-8ec5-\
fc669690e7b7"],

Cell[TextData[{
 "The required memory for the recurrence is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", "\[CapitalMu]", ")"}], TraditionalForm]],ExpressionUUID->
  "a43af123-6e23-4747-99f5-4541967c6079"],
 ", where ",
 Cell[BoxData[
  FormBox["\[CapitalMu]", TraditionalForm]],ExpressionUUID->
  "554653cf-ce3e-4f63-b5d1-49baddb2469f"],
 " is the order of the model, the number of parameters to estimate, the \
length of ",
 Cell[BoxData[
  FormBox["\[CapitalXi]", TraditionalForm]],ExpressionUUID->
  "5cad892a-a66c-4479-a419-39792c33e9e0"],
 ", and the length of each row of ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "332e127a-feaa-4be6-a475-985ccedc0886"],
 ". There is no dependency at all on the number ",
 Cell[BoxData[
  FormBox["\[CapitalNu]", TraditionalForm]],ExpressionUUID->
  "70e72b1a-0126-4373-80a0-6d790e7d6cc8"],
 " of data items. Also, the recurrence accumulates data one observation at a \
time, and is thus ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", "\[CapitalNu]", ")"}], TraditionalForm]],ExpressionUUID->
  "efd7941a-b9ef-460b-abc5-d458205967fa"],
 " in time. Contrast with the normal equations, which multiply at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"~", 
    RowBox[{"O", "(", 
     SuperscriptBox["\[CapitalNu]", "3"], ")"}]}], TraditionalForm]],
  ExpressionUUID->"d0c9ea26-5793-4a2e-88e5-b820100f9d13"],
 " and invert at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"~", 
    RowBox[{"O", "(", "\[CapitalMu]", ")"}]}], TraditionalForm]],
  ExpressionUUID->"e1c00670-04cc-4eda-87ab-028f1f89e82a"],
 ", i.e., at much greater time cost."
}], "Text",
 CellChangeTimes->{{3.727878157797224*^9, 3.72787827045693*^9}, {
  3.729023428386662*^9, 3.729023477424836*^9}, {3.729164123699872*^9, 
  3.729164253182089*^9}, {3.729181740696765*^9, 3.729181815543811*^9}, {
  3.72964339464333*^9, 3.729643452303581*^9}, {3.729797162651799*^9, 
  3.7297972726054*^9}},ExpressionUUID->"a05115c7-2503-49e9-af12-5669084b3ab2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Check the A-Priori", "Subsection",
 CellChangeTimes->{{3.729181823844157*^9, 
  3.729181830180563*^9}},ExpressionUUID->"53320727-4bae-4b2a-ab1b-\
1c7c66ac6a3c"],

Cell[TextData[{
 "The final value of ",
 Cell[BoxData[
  FormBox["\[CapitalLambda]", TraditionalForm]],ExpressionUUID->
  "39d494bd-234a-46ce-b910-d7f503d343eb"],
 " (called ",
 Cell[BoxData[
  FormBox["\[CapitalPi]", TraditionalForm]],ExpressionUUID->
  "8c23b7e5-b715-408b-91a1-2fb52b1f7699"],
 " in the code, a returned value), is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["A", "full"], "\[Transpose]"}], "\[CenterDot]", 
     SubscriptBox["A", "full"]}], "+", 
    SubscriptBox["\[CapitalLambda]", "0"]}], TraditionalForm]],
  ExpressionUUID->"1891af79-d866-486f-a629-9b2b77a22d21"],
 ". To check the code, check that the difference between \[CapitalPi] and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["A", "full"], "\[Transpose]"}], "\[CenterDot]", 
    SubscriptBox["A", "full"]}], TraditionalForm]],ExpressionUUID->
  "d79187f3-f0a0-4931-8c09-8a661166ccf3"],
 " is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalLambda]", "0"], TraditionalForm]],ExpressionUUID->
  "c764f547-094a-4d7e-9887-56726f224d1b"],
 ":"
}], "Text",
 CellChangeTimes->{{3.727455669635949*^9, 3.727455714844105*^9}, {
  3.727456293561727*^9, 3.727456338621636*^9}, {3.727456381984915*^9, 
  3.727456493199937*^9}, {3.7274567040936413`*^9, 3.727456704869124*^9}, {
  3.727456739701139*^9, 3.72745677855204*^9}, {3.727472821547103*^9, 
  3.727472866769026*^9}, {3.72747570063941*^9, 3.72747570624365*^9}, {
  3.727486207037271*^9, 3.727486226047611*^9}, {3.727967052949963*^9, 
  3.727967092304611*^9}, {3.72902349359485*^9, 
  3.729023506985579*^9}},ExpressionUUID->"5198a235-6d3a-495f-8224-\
3bb457689565"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalPi]", "-", 
  RowBox[{
   RowBox[{"partials", "\[Transpose]"}], ".", "partials"}]}]], "Input",
 CellChangeTimes->{{3.7274551709419003`*^9, 3.727455208922634*^9}, {
  3.727455747486219*^9, 3.727455758602953*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"6b2f5eca-fa77-41bf-9283-038226cefa9a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`*^-6", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1.`*^-6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.72745518631077*^9, 3.7274552106865807`*^9}, {
   3.7274552828550367`*^9, 3.727455294638937*^9}, 3.727455760140656*^9, {
   3.72745583557261*^9, 3.7274558626374598`*^9}, 3.727455974817852*^9, {
   3.7274561424375877`*^9, 3.7274561865312757`*^9}, 3.727456826962592*^9, 
   3.727457103648644*^9, 3.7274626013231*^9, 3.727472137933955*^9, 
   3.727485511219474*^9, 3.7274863086743803`*^9, 3.727878578292219*^9, 
   3.727880787367092*^9, 3.72788118784524*^9, 3.727881367533016*^9, 
   3.7279153851883383`*^9, 3.7279180366404953`*^9, 3.727918094433138*^9, 
   3.727924197744144*^9, {3.727927706819661*^9, 3.727927732038946*^9}, 
   3.727967810195277*^9, 3.7279687331233892`*^9, 3.7279698081358833`*^9, 
   3.727969955024419*^9, 3.728044351619812*^9, 3.7280464476574707`*^9, 
   3.728066469570793*^9, 3.7280681207187157`*^9, 3.728083783348742*^9, 
   3.728090741322768*^9, 3.728169445060842*^9, 3.728169540624917*^9, 
   3.7281698227788277`*^9, 3.728169882804495*^9, 3.728252955301944*^9, 
   3.728946255715186*^9, 3.729022899869521*^9, {3.729119978321847*^9, 
   3.7291199954270573`*^9}, 3.729121071878161*^9, 3.729121110417275*^9, 
   3.729172307287985*^9, 3.729175690293468*^9, 3.729175772153051*^9, 
   3.729183412064961*^9, {3.72918344733591*^9, 3.729183460290135*^9}, 
   3.7292559367593613`*^9, 3.729552301396994*^9, 3.729557875848024*^9, 
   3.7296298378646383`*^9, 3.7296346358091793`*^9, 3.729642872096381*^9, 
   3.7296429086974907`*^9, 3.729643938076329*^9, 3.7296471843588*^9, 
   3.7296832011663933`*^9, 3.7297781536275663`*^9, 3.7297792317673607`*^9, 
   3.729779279689464*^9, 3.729894699649646*^9, 3.729896005539929*^9, 
   3.729896152204977*^9, 3.729897295103435*^9, 3.730140354488406*^9, 
   3.7302402707235947`*^9, 3.730380090988249*^9, 3.730385742047144*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"cb18d8e8-ebd7-4c34-adcc-09f7f7a021b7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Covariance of the Estimate", "Subsection",
 CellChangeTimes->{{3.7291818416264057`*^9, 
  3.729181847224715*^9}},ExpressionUUID->"a15882b3-57ab-4fa8-83b6-\
c550109aac89"],

Cell[TextData[{
 "The covariance of this estimate ",
 Cell[BoxData[
  FormBox["\[CapitalXi]", TraditionalForm]],ExpressionUUID->
  "05f6e13c-eb2e-49b9-b7d4-f01f499237e6"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     FractionBox[
      RowBox[{"n", "-", "1"}], 
      RowBox[{"n", "-", "2"}]], ")"}], "*", 
    RowBox[{"Variance", "\[ThinSpace]", "[", "\[ThinSpace]", 
     RowBox[{"\[CapitalZeta]", "-", 
      RowBox[{"A", "\[CenterDot]", "\[CapitalXi]"}]}], "\[ThinSpace]", "]"}], 
    "*", 
    SuperscriptBox["\[CapitalLambda]", 
     RowBox[{"-", "1"}]]}], TraditionalForm]],ExpressionUUID->
  "ed6dc5b0-2569-4482-a89f-9e45c1d9c8e7"],
 " except for a small contribution from the a-priori information ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalLambda]", "0"], TraditionalForm]],ExpressionUUID->
  "117837c1-2354-4d76-b779-38f2077da583"],
 ". The correction factor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    FractionBox[
     RowBox[{"n", "-", "1"}], 
     RowBox[{"n", "-", "2"}]], ")"}], TraditionalForm]],ExpressionUUID->
  "b55c017a-1015-4a56-951f-cf8b3a01de97"],
 " is a generalization \.7fof Bessel\[CloseCurlyQuote]s correction. The ",
 Cell[BoxData[
  FormBox["2", TraditionalForm]],ExpressionUUID->
  "b7c81e78-cd2f-451d-8792-9b212764ec84"],
 " in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"n", "-", "2"}], ")"}], TraditionalForm]],ExpressionUUID->
  "d9f330f5-17bd-4ad7-b656-bdd5eb0f57d5"],
 " in the denominator of Bessel\[CloseCurlyQuote]s correction is the number \
of parameters being estimated (see ",
 ButtonBox["VAN DE GEER, Least Squares Estimation, Volume 2, pp. \
1041\[Dash]1045, in Encyclopedia of Statistics in Behavioral Science, Eds. \
Brian S. Everitt & David C. Howell, Wiley, 2005",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://stat.ethz.ch/~geer/bsa199_o.pdf"], None},
  ButtonNote->"https://stat.ethz.ch/~geer/bsa199_o.pdf"],
 "). The denominator of the correction, in general, is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "-", "p"}], TraditionalForm]],ExpressionUUID->
  "5b344576-2589-491a-bed2-c362a3e367e3"],
 ", where ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "ab45ec8c-fdab-4d50-a890-e44870c87fa3"],
 " is the number of data and ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],ExpressionUUID->
  "606cb52c-426a-44c2-baf8-3756d84116c8"],
 " is the number of parameters being estimated."
}], "Text",
 CellChangeTimes->{{3.7274567852393503`*^9, 3.727456791351314*^9}, {
  3.7274626311713448`*^9, 3.727462680678966*^9}, {3.727472647355248*^9, 
  3.727472725986993*^9}, {3.7274728947945757`*^9, 3.727472940968391*^9}, {
  3.727474911778737*^9, 3.727474913439685*^9}, {3.727475723944086*^9, 
  3.727475733135212*^9}, {3.7279249725397797`*^9, 3.727924984997408*^9}, {
  3.727967100099558*^9, 3.7279671039316263`*^9}, {3.7280919485134687`*^9, 
  3.728091949527707*^9}, {3.72916432284585*^9, 3.729164348695956*^9}, {
  3.729797302412488*^9, 
  3.729797317021042*^9}},ExpressionUUID->"b4d63894-59ca-4552-83f4-\
70d2c2128d07"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Inverse", "[", 
    RowBox[{
     RowBox[{"partials", "\[Transpose]"}], ".", "partials"}], "]"}], "*", 
   FractionBox[
    RowBox[{"nData", "-", "1"}], 
    RowBox[{"nData", "-", "2"}]], "*", 
   RowBox[{"Variance", "[", 
    RowBox[{"data", "-", 
     RowBox[{"partials", ".", 
      RowBox[{"{", 
       RowBox[{"mBar", ",", "bBar"}], "}"}]}]}], "]"}]}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7274431897876062`*^9, 3.7274432610082397`*^9}, {
   3.7274547829132023`*^9, 3.7274548281175823`*^9}, {3.727454917043985*^9, 
   3.727454946560256*^9}, {3.727455103776779*^9, 3.727455133855278*^9}, {
   3.727455965944152*^9, 3.727455966694631*^9}, {3.7274560116101933`*^9, 
   3.727456093212741*^9}, 3.72745616117476*^9, {3.727456227849722*^9, 
   3.727456234387219*^9}, 3.727472952057025*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"8c430208-3b71-40e8-8a72-abb8cd90ffa4"],

Cell[BoxData[
 TagBox[
  RowBox[{
   FractionBox["1", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "nData"}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "nData"}], ")"}], " ", 
   RowBox[{"Inverse", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}], "]"}], 
   " ", 
   RowBox[{"Variance", "[", 
    RowBox[{"data", "-", 
     RowBox[{"partials", ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{
                 RowBox[{"Transpose", "[", "partials", "]"}], ".", "data"}]}],
                ")"}], " ", 
              RowBox[{
               RowBox[{"Transpose", "[", "partials", "]"}], ".", 
               "partials"}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"1.`*^-12", "+", 
              RowBox[{"2.`*^-6", " ", 
               RowBox[{
                RowBox[{"Transpose", "[", "partials", "]"}], ".", 
                "partials"}]}]}], ")"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"0.`", "\[VeryThinSpace]", "+", 
              RowBox[{
               RowBox[{"Transpose", "[", "partials", "]"}], ".", "data"}]}], 
             ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1.`*^-6", "+", 
              RowBox[{
               RowBox[{"Transpose", "[", "partials", "]"}], ".", 
               "partials"}]}], ")"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"1.`*^-12", "+", 
            RowBox[{"2.`*^-6", " ", 
             RowBox[{
              RowBox[{"Transpose", "[", "partials", "]"}], ".", 
              "partials"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{
                 RowBox[{"Transpose", "[", "partials", "]"}], ".", "data"}]}],
                ")"}], " ", 
              RowBox[{
               RowBox[{"Transpose", "[", "partials", "]"}], ".", 
               "partials"}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"1.`*^-12", "+", 
              RowBox[{"2.`*^-6", " ", 
               RowBox[{
                RowBox[{"Transpose", "[", "partials", "]"}], ".", 
                "partials"}]}]}], ")"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"0.`", "\[VeryThinSpace]", "+", 
              RowBox[{
               RowBox[{"Transpose", "[", "partials", "]"}], ".", "data"}]}], 
             ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1.`*^-6", "+", 
              RowBox[{
               RowBox[{"Transpose", "[", "partials", "]"}], ".", 
               "partials"}]}], ")"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"1.`*^-12", "+", 
            RowBox[{"2.`*^-6", " ", 
             RowBox[{
              RowBox[{"Transpose", "[", "partials", "]"}], ".", 
              "partials"}]}]}], ")"}]}]}]}], "}"}]}]}], "]"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.727454928111648*^9, 3.72745494746028*^9}, 
   3.727455079366056*^9, {3.727455124455585*^9, 3.72745513496389*^9}, {
   3.727455812047991*^9, 3.727455864570829*^9}, {3.7274559677572517`*^9, 
   3.727455974867505*^9}, {3.727456050499832*^9, 3.727456094070848*^9}, {
   3.7274561424870367`*^9, 3.7274561865735826`*^9}, 3.727456239429667*^9, 
   3.7274568270134773`*^9, 3.727457103698028*^9, 3.7274626013731823`*^9, 
   3.727472137981408*^9, 3.727472954371911*^9, 3.727485511269794*^9, 
   3.7274863087240047`*^9, 3.727878578345954*^9, 3.7278807874127703`*^9, 
   3.7278811878958673`*^9, 3.727881367587798*^9, 3.72791538523671*^9, 
   3.727918036690276*^9, 3.7279180944824457`*^9, 3.727924197810088*^9, {
   3.727927706882574*^9, 3.727927732105157*^9}, 3.727967810245639*^9, 
   3.727968733172824*^9, 3.727969808184746*^9, 3.7279699550719757`*^9, 
   3.728044351669427*^9, 3.728046447707358*^9, 3.728066469624007*^9, 
   3.728068120768632*^9, 3.728083783416733*^9, 3.728090741371833*^9, 
   3.7281694451273947`*^9, 3.7281695406895*^9, 3.728169822844509*^9, 
   3.72816988287199*^9, 3.728252955370139*^9, 3.728946255764901*^9, 
   3.729022899921451*^9, {3.729119978388329*^9, 3.72911999549438*^9}, 
   3.729121071944837*^9, 3.729121110483716*^9, 3.7291723073551702`*^9, 
   3.7291756903603086`*^9, 3.72917577469937*^9, 3.729183412131897*^9, {
   3.729183447403452*^9, 3.729183460358261*^9}, 3.729255936823028*^9, 
   3.729552301456296*^9, 3.729557875898464*^9, 3.729629837913718*^9, 
   3.729634635859951*^9, 3.729642872142787*^9, 3.729642908767935*^9, 
   3.7296439381313267`*^9, 3.729647184407447*^9, 3.729683201217225*^9, 
   3.729778153693164*^9, 3.7297792318163977`*^9, 3.729779279861124*^9, 
   3.729894699701302*^9, 3.729896005604349*^9, 3.729896152277255*^9, 
   3.729897295171204*^9, 3.73014035453795*^9, 3.7302402708348417`*^9, 
   3.730380091057087*^9, 3.7303857420965643`*^9},
 CellLabel->
  "Out[5]//MatrixForm=",ExpressionUUID->"efa18d92-26de-4a6a-8fc5-\
9032c6a726ed"]
}, Open  ]],

Cell[TextData[{
 "Except for the reversed order, this is the same covariance matrix that \
Wolfram\[CloseCurlyQuote]s ",
 Cell[BoxData[
  FormBox["LinearModel", TraditionalForm]], "Code",ExpressionUUID->
  "927b6594-6052-40b2-8ebb-205fa75a1b9c"],
 " reports:"
}], "Text",
 CellChangeTimes->{{3.727454999214408*^9, 3.7274550230616837`*^9}, {
  3.7274550552077837`*^9, 3.727455069630582*^9}, {3.727456815268976*^9, 
  3.72745682043734*^9}, {3.727462715836411*^9, 3.7274627328032312`*^9}, {
  3.7281214802053127`*^9, 
  3.72812148718871*^9}},ExpressionUUID->"0cca00d6-0a9f-40fb-b637-\
dfc3132a2c2f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Reverse", "@", 
   RowBox[{"(", 
    RowBox[{"Reverse", "/@", 
     RowBox[{
      StyleBox["model",
       Background->RGBColor[1, 1, 0]], "[", "\"\<CovarianceMatrix\>\"", 
      "]"}]}], ")"}]}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7274549491384163`*^9, 3.727454976961426*^9}, {
  3.727455029510784*^9, 3.727455047125711*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"c6115b7b-08e5-4411-90de-4f0f132f5782"],

Cell[BoxData[
 TemplateBox[{
  "Reverse","normal",
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Reverse\\\", \
\\\"[\\\", \\\"\\\\\\\"CovarianceMatrix\\\\\\\"\\\", \\\"]\\\"}]\\).\"",2,6,8,
   30924607878342175323,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.73038009112151*^9, 3.7303857421455507`*^9},
 CellLabel->
  "During evaluation of \
In[6]:=",ExpressionUUID->"9ef62602-d98b-4ba0-b7b4-9bcd17e297cc"],

Cell[BoxData[
 TagBox[
  RowBox[{"model", "[", 
   RowBox[{"Reverse", "[", "\<\"CovarianceMatrix\"\>", "]"}], "]"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.727454966848208*^9, 3.727454977604638*^9}, 
   3.727455048234387*^9, 3.7274550794174843`*^9, {3.727455816251672*^9, 
   3.727455842245935*^9}, 3.727455974915807*^9, {3.72745614253647*^9, 
   3.727456186624792*^9}, 3.727456827063628*^9, 3.727457103748019*^9, 
   3.727462601420088*^9, 3.727472138034376*^9, 3.727485511317802*^9, 
   3.7274863087704897`*^9, 3.727878578395075*^9, 3.727880787467642*^9, 
   3.727881187944561*^9, 3.727881367638068*^9, 3.7279153852886133`*^9, 
   3.727918036745358*^9, 3.727918094551241*^9, 3.727924197877178*^9, {
   3.727927706952642*^9, 3.727927732168346*^9}, 3.727967810295855*^9, 
   3.7279687332273684`*^9, 3.72796980823939*^9, 3.72796995512359*^9, 
   3.728044351719689*^9, 3.728046447758238*^9, 3.728066469672233*^9, 
   3.7280681208188887`*^9, 3.728083783480638*^9, 3.7280907414232063`*^9, 
   3.728169445193625*^9, 3.728169540756772*^9, 3.728169822911014*^9, 
   3.728169882937654*^9, 3.728252955435904*^9, 3.728946255816115*^9, 
   3.729022899969944*^9, {3.729119978456131*^9, 3.729119995560389*^9}, 
   3.729121072011354*^9, 3.729121110549224*^9, 3.729172307421925*^9, 
   3.7291756904081097`*^9, 3.729175777027215*^9, 3.729183412197935*^9, {
   3.7291834474691057`*^9, 3.7291834604242697`*^9}, 3.729255936889614*^9, 
   3.729552301510076*^9, 3.729557875948141*^9, 3.729629837964074*^9, 
   3.7296346359095287`*^9, 3.729642872193766*^9, 3.729642908831292*^9, 
   3.729643938195087*^9, 3.7296471844591093`*^9, 3.729683201266974*^9, 
   3.7297781538643713`*^9, 3.729779231867325*^9, 3.729779279921195*^9, 
   3.729894699766657*^9, 3.729896005675802*^9, 3.729896152339327*^9, 
   3.729897295239596*^9, 3.730140354587438*^9, 3.730240270905217*^9, 
   3.730380091130209*^9, 3.730385742158636*^9},
 CellLabel->
  "Out[6]//MatrixForm=",ExpressionUUID->"da3016ec-a7ab-40df-893f-\
68e58198588e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Don\[CloseCurlyQuote]t Invert That Matrix\.7f", "Subchapter",
 CellChangeTimes->{{3.727456856590333*^9, 3.727456866525626*^9}, {
  3.727456903416147*^9, 3.727456929038941*^9}},
 CellTags->"c:10",ExpressionUUID->"eb9ecf3c-cbf2-4418-a417-8f947ee7be76"],

Cell[TextData[{
 "See ",
 ButtonBox["https://www.johndcook.com/blog/2010/01/19/dont-invert-that-matrix/\
",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.johndcook.com/blog/2010/01/19/dont-invert-that-matrix/"],
     None},
  ButtonNote->
   "https://www.johndcook.com/blog/2010/01/19/dont-invert-that-matrix/"],
 " \n\nIn general, replace any occurrence of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["A", 
     RowBox[{"-", "1"}]], "\[CenterDot]", "B"}], TraditionalForm]],
  ExpressionUUID->"32698cd4-2dcc-4b05-9117-50af35fbcccc"],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Inverse", "[", "A", "]"}], ".", "B"}], TraditionalForm]], "Code",
  ExpressionUUID->"0208196a-6c21-4a62-9f05-79b2f4e5fe89"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"LinearSolve", "[", 
    RowBox[{"A", ",", "B"}], "]"}], TraditionalForm]], "Code",ExpressionUUID->
  "4e7fbc22-09d2-4e39-a5b5-b93b7697af49"],
 " for arbitrary square matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "776ee4c1-d1ce-42de-85cc-2ca525876f54"],
 " and arbitrary matrix ",
 Cell[BoxData[
  FormBox["B", TraditionalForm]],ExpressionUUID->
  "493b32c5-9bbd-4079-b87d-0885d8421239"],
 ". Almost all programming languages and toolkits support an efficient and \
robust analogue to Wolfram\[CloseCurlyQuote]s ",
 Cell[BoxData[
  FormBox["LinearSolve", TraditionalForm]], "Code",ExpressionUUID->
  "908053eb-6863-4781-928e-21ed138ed5fc"],
 "."
}], "Text",
 CellChangeTimes->{{3.727377065079856*^9, 3.7273770966536922`*^9}, {
  3.727456910929248*^9, 3.727456922321958*^9}, {3.727967129773798*^9, 
  3.727967138858366*^9}, {3.7279671799345827`*^9, 3.727967207643837*^9}, {
  3.7281215143410273`*^9, 3.728121560473433*^9}, {3.729023567817812*^9, 
  3.729023646362337*^9}, {3.729164385351775*^9, 3.729164386998762*^9}, {
  3.729173657472382*^9, 3.729173717927524*^9}, {3.729643492684564*^9, 
  3.729643541414435*^9}},ExpressionUUID->"0885edbe-95e4-4385-aba5-\
07fc3ab0dfba"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "update", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["update",
      Background->RGBColor[1, 1, 0]], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Xi]_", ",", "\[CapitalLambda]_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Zeta]_", ",", "a_"}], "}"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalPi]", "=", 
        RowBox[{"(", 
         RowBox[{"\[CapitalLambda]", "+", 
          RowBox[{
           RowBox[{"a", "\[Transpose]"}], ".", "a"}]}], ")"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         StyleBox["LinearSolve",
          Background->RGBColor[0.88, 1, 0.88]], "[", 
         RowBox[{"\[CapitalPi]", ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "\[Transpose]"}], ".", "\[Zeta]"}], "+", 
            RowBox[{"\[CapitalLambda]", ".", "\[Xi]"}]}], ")"}]}], "]"}], ",",
         "\[CapitalPi]"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"mBar"},
         {"bBar"}
        }], ")"}], ",", "\[CapitalPi]"}], "}"}], "=", "\[IndentingNewLine]", 
    RowBox[{
     StyleBox["Fold",
      Background->RGBColor[1, 1, 0]], "[", 
     RowBox[{
      StyleBox["update",
       Background->RGBColor[1, 1, 0]], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", GridBox[{
           {"0"},
           {"0"}
          }], ")"}], ",", 
        RowBox[{"(", GridBox[{
           {"1.0*^-6", "0"},
           {"0", "1.0*^-6"}
          }], ")"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"List", "/@", "data"}], ",", 
         RowBox[{"List", "/@", "partials"}]}], "}"}], "\[Transpose]"}]}], 
     "]"}]}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.727054852495049*^9, 3.72705494257406*^9}, {
   3.727055026792467*^9, 3.727055093506559*^9}, {3.7270551930291023`*^9, 
   3.727055263833913*^9}, {3.727055297216107*^9, 3.7270554270906563`*^9}, {
   3.7270560338846903`*^9, 3.72705612788085*^9}, {3.7270561855129213`*^9, 
   3.7270561959544077`*^9}, {3.727056250031129*^9, 3.727056367103942*^9}, {
   3.727056427865035*^9, 3.727056443080068*^9}, {3.727056561323501*^9, 
   3.727056598046468*^9}, {3.727056640141169*^9, 3.727056654582451*^9}, {
   3.727056728700244*^9, 3.7270567914565277`*^9}, {3.727056869366274*^9, 
   3.727056921039433*^9}, 3.72705709924362*^9, {3.727057420502048*^9, 
   3.7270575464285316`*^9}, {3.7270577446377487`*^9, 3.727057775909028*^9}, {
   3.7270578799866133`*^9, 3.727057901007744*^9}, 3.7270581603330593`*^9, {
   3.727058349930079*^9, 3.7270584478842707`*^9}, {3.727058490337566*^9, 
   3.727058577824399*^9}, {3.727058673744141*^9, 3.7270586947547493`*^9}, {
   3.727058788099071*^9, 3.7270588909590683`*^9}, {3.727058934322414*^9, 
   3.7270589393580847`*^9}, {3.72705898616982*^9, 3.7270589868650723`*^9}, {
   3.7270592331231947`*^9, 3.727059237300102*^9}, {3.727370367915408*^9, 
   3.727370398721291*^9}, {3.727457046333558*^9, 3.727457067436592*^9}, {
   3.727473022344759*^9, 3.727473052764071*^9}, {3.727473241324421*^9, 
   3.7274732753376427`*^9}, {3.7274734820130367`*^9, 3.727473491340034*^9}, {
   3.7289484043309593`*^9, 3.728948405468891*^9}, {3.729174099251841*^9, 
   3.7291741039734783`*^9}, 3.7291741376366043`*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"bd72fa45-d9c5-4e4e-a429-bee1577a6f0d"],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"data\\\", \\\",\\\", \\\"partials\\\"}], \\\"}\\\"}]\\) cannot be \
transposed.\"",2,9,9,30924607878342175323,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.730380091205247*^9, 3.730385742213038*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"1700fff3-286d-428d-9489-ed1af607d608"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"0.5`", " ", 
          RowBox[{
           RowBox[{"Transpose", "[", "partials", "]"}], ".", "data"}]}], 
         RowBox[{"5.`*^-7", "+", 
          RowBox[{"1.`", " ", 
           RowBox[{
            RowBox[{"Transpose", "[", "partials", "]"}], ".", 
            "partials"}]}]}]]},
       {
        FractionBox[
         RowBox[{"0.5`", " ", 
          RowBox[{
           RowBox[{"Transpose", "[", "partials", "]"}], ".", "data"}]}], 
         RowBox[{"5.`*^-7", "+", 
          RowBox[{"1.`", " ", 
           RowBox[{
            RowBox[{"Transpose", "[", "partials", "]"}], ".", 
            "partials"}]}]}]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"1.`*^-6", "+", 
         RowBox[{
          RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}]}], 
        RowBox[{
         RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}]},
       {
        RowBox[{
         RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}], 
        RowBox[{"1.`*^-6", "+", 
         RowBox[{
          RowBox[{"Transpose", "[", "partials", "]"}], ".", "partials"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.727473265842018*^9, 3.7274732757004232`*^9}, 
   3.727473492609377*^9, 3.727485511701943*^9, 3.727486309173321*^9, 
   3.727878578445228*^9, 3.7278807875164957`*^9, 3.727881187996175*^9, 
   3.72788136768466*^9, 3.7279153853534393`*^9, 3.727918036812088*^9, 
   3.727918094615041*^9, 3.7279241979432487`*^9, {3.727927707015217*^9, 
   3.72792773222125*^9}, 3.727967810349496*^9, 3.7279687332731037`*^9, 
   3.7279698083019648`*^9, 3.7279699551693897`*^9, 3.728044351771216*^9, 
   3.7280464478070717`*^9, 3.7280664697246733`*^9, 3.728068120868615*^9, 
   3.728083783546753*^9, 3.728090741492902*^9, 3.728169445260518*^9, 
   3.728169540823485*^9, 3.728169822977787*^9, 3.7281698830032377`*^9, 
   3.728252955627798*^9, 3.728946255859652*^9, 3.72894933878874*^9, 
   3.729022900020834*^9, {3.729119978523779*^9, 3.7291199956273623`*^9}, 
   3.729121072078249*^9, 3.7291211106160603`*^9, 3.729172307489259*^9, 
   3.729174106495594*^9, 3.729174141124625*^9, 3.7291756904605827`*^9, 
   3.729175784083406*^9, 3.729183412264688*^9, {3.729183447536147*^9, 
   3.7291834604902687`*^9}, 3.729255936956237*^9, 3.7295523015566072`*^9, 
   3.729557876032403*^9, 3.72962983801383*^9, 3.729634635965757*^9, 
   3.729642872243292*^9, 3.729642908898361*^9, 3.729643938245161*^9, 
   3.7296471845136013`*^9, 3.7296832013162327`*^9, 3.729778153926168*^9, 
   3.72977923191739*^9, 3.729779279992197*^9, 3.729894699833095*^9, 
   3.7298960058062487`*^9, 3.729896152409284*^9, 3.729897295305296*^9, 
   3.730140354639059*^9, 3.7302402709694643`*^9, 3.7303800912149363`*^9, 
   3.730385742226068*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"a97d266f-145b-4594-a55b-16ffac2d1a61"]
}, Open  ]],

Cell[TextData[{
 "Because this example is small, ",
 Cell[BoxData[
  FormBox["Inverse", TraditionalForm]], "Code",ExpressionUUID->
  "1e8b6ec0-9f26-4e41-ac8c-020e2f7853de"],
 " has no obvious numerical issues. It is very easy to produce large, \
ill-conditioned matrices, and one will spend a lot of time and storage \
inverting them, only to get useless results."
}], "Text",
 CellChangeTimes->{{3.727473280120357*^9, 3.7274732832085*^9}, {
   3.7279911307811337`*^9, 3.727991131940103*^9}, {3.728121572695258*^9, 
   3.728121612596923*^9}, {3.729023701182482*^9, 3.729023764199581*^9}, 
   3.7291737430479116`*^9, {3.729181869246784*^9, 
   3.729181869373077*^9}},ExpressionUUID->"2fc132d3-59ce-4f68-b386-\
27a3e8b36b56"]
}, Closed]],

Cell[CellGroupData[{

Cell["Interim Conclusions", "Subchapter",
 CellChangeTimes->{{3.729164407912829*^9, 
  3.729164418350677*^9}},ExpressionUUID->"a922b9e1-5f73-4c1d-837a-\
1b2197bd6c77"],

Cell[TextData[{
 "We have eliminated memory bloat by processing updates one observation at a \
time, each with its paired partial. We reduce computation time and numerical \
risk by solving a linear systems instead of inverting a matrix. We also avoid \
multiplication of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", "\[CapitalNu]", ")"}], TraditionalForm]],ExpressionUUID->
  "f1e31217-fd6e-41e1-90c4-263aba7bf238"],
 " matrices, which is of approximately ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", 
    SuperscriptBox["\[CapitalNu]", "3"], ")"}], TraditionalForm]],
  ExpressionUUID->"816d662d-3cd4-47fe-8656-616095fce9ed"],
 " time."
}], "Text",
 CellChangeTimes->{{3.727475777156247*^9, 3.727475832537896*^9}, {
  3.72748624599329*^9, 3.727486246966188*^9}, {3.729023774567375*^9, 
  3.729023775311418*^9}, {3.7291818849549427`*^9, 3.729182029375617*^9}, {
  3.729644121939213*^9, 3.729644164344136*^9}, {3.729797388940627*^9, 
  3.7297974303556147`*^9}},ExpressionUUID->"19112acb-50b6-4d0a-be43-\
d791f28fb3b1"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Regularization By A-Priori", "Chapter",
 CellChangeTimes->{{3.7278786048568163`*^9, 3.727878609238576*^9}, {
   3.7278835476425943`*^9, 3.727883549040578*^9}, {3.727924834507627*^9, 
   3.727924836977462*^9}, {3.727925756497532*^9, 3.727925760501575*^9}, {
   3.729023822401535*^9, 3.7290238231434097`*^9}, {3.7291828363150797`*^9, 
   3.729182841338913*^9}, 3.729712704361965*^9},
 CellTags->"c:13",ExpressionUUID->"f57cb083-2e13-4a5b-8884-c47c716b6798"],

Cell[TextData[{
 "Chris Bishop\[CloseCurlyQuote]s ",
 StyleBox[ButtonBox["Pattern Recognition and Machine Learning",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.amazon.com/Pattern-Recognition-Learning-Information-\
Statistics/dp/0387310738"], None},
  ButtonNote->
   "https://www.amazon.com/Pattern-Recognition-Learning-Information-\
Statistics/dp/0387310738"],
  FontSlant->"Italic"],
 " has an extended example fitting higher-order polynomials, linear in their \
coefficients, starting in section 1.1. The higher the order of the \
polynomial, the more MLE over-fits. Bishop presents MAP regularization as a \
cure for this over-fitting. RLS and KAL already regularize, by construction. \
In this section, we relate their regularization to MAP\[CloseCurlyQuote]s.\n\n\
RLS and KAL each require an a-priori estimate of the unknown parameters and \
an a-priori uncertainty of that estimate to bootstrap recurrences. RLS takes \
the uncertainty as an ",
 StyleBox["information matrix",
  FontSlant->"Italic"],
 ". KAL takes the uncertainty as a ",
 StyleBox["covariance matrix",
  FontSlant->"Italic"],
 ". KAL additionally requires an estimate of observation noise, which arises \
in real problems and can often be estimated out-of-band. We show that RLS can \
and should be renormalized with observation noise to produce results \
equivalent to KAL and MAP."
}], "Text",
 CellChangeTimes->{{3.727878623850936*^9, 3.727878709219612*^9}, {
   3.727878861523492*^9, 3.7278788615269413`*^9}, {3.727879302741879*^9, 
   3.727879309849668*^9}, 3.727883517024404*^9, {3.727922726553706*^9, 
   3.727922764150456*^9}, 3.727922954590423*^9, {3.727924470079568*^9, 
   3.727924536073629*^9}, {3.7279245945103197`*^9, 3.727924814835289*^9}, {
   3.7279675670922203`*^9, 3.727967666149938*^9}, {3.727971057289061*^9, 
   3.727971066302681*^9}, {3.728121698098153*^9, 3.7281219113362703`*^9}, {
   3.728251250200307*^9, 3.7282512840101357`*^9}, {3.7282513246052217`*^9, 
   3.728251329374619*^9}, {3.729023929197901*^9, 3.7290239300994596`*^9}, {
   3.729164542139102*^9, 3.72916456944278*^9}, {3.729164610806293*^9, 
   3.729164677156509*^9}, {3.729164919918866*^9, 3.729165054532934*^9}, {
   3.729182136434248*^9, 3.729182214000979*^9}, {3.729191528488492*^9, 
   3.729191529399126*^9}, {3.729191562138418*^9, 3.7291916195642443`*^9}, {
   3.729644842368363*^9, 3.729644891045639*^9}, {3.72979744862106*^9, 
   3.7297974664738607`*^9}, {3.7297975040084763`*^9, 
   3.729797584823832*^9}},ExpressionUUID->"15ee4bb0-fc5a-41bc-80d0-\
20de3b23514a"],

Cell[CellGroupData[{

Cell["Reproducing Bishop\[CloseCurlyQuote]s Example", "Subchapter",
 CellChangeTimes->{{3.729165065884509*^9, 
  3.7291650737726173`*^9}},ExpressionUUID->"8e1858e6-8e6d-4c01-8f2a-\
0d587b83c92f"],

Cell[CellGroupData[{

Cell["Bishop\[CloseCurlyQuote]s Training Set", "Subsection",
 CellChangeTimes->{{3.729182234376062*^9, 
  3.7291822398475657`*^9}},ExpressionUUID->"fd29c08d-8914-488e-a5e1-\
16d28815454d"],

Cell[TextData[{
 "First, create a sequence of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalNu]", "=", "10"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6e69dab0-348e-439f-952d-c4bf86dc91a9"],
 " inputs for a ",
 StyleBox["training set",
  FontSlant->"Italic"],
 ", equally spaced in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     RowBox[{"0", ".."}], "1"}], "]"}], TraditionalForm]],ExpressionUUID->
  "29ce8c8d-9344-4003-8aa1-108c7bd407ca"],
 ". "
}], "Text",
 CellChangeTimes->{{3.727903592625655*^9, 3.727903632159232*^9}, {
   3.7279036735048943`*^9, 3.727903706547583*^9}, {3.727905942818769*^9, 
   3.727905962112603*^9}, {3.7280864904938383`*^9, 3.72808650130811*^9}, 
   3.7281253834656553`*^9, {3.7290239585551653`*^9, 3.729023962286766*^9}, {
   3.729797599233794*^9, 3.729797625818816*^9}, {3.729798320229357*^9, 
   3.729798328906424*^9}},ExpressionUUID->"c848505b-800e-4607-83cb-\
e15f01517729"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "bishopTrainingSetX", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bishopTrainingSetX", "[", "\[CapitalNu]_", "]"}], ":=", 
   RowBox[{"Array", "[", 
    RowBox[{"Identity", ",", "\[CapitalNu]", ",", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "1."}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"bishopTrainingSetX", "[", "10", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7278793831155243`*^9, 3.727879483430056*^9}, {
  3.7278795217592373`*^9, 3.7278795713344812`*^9}, {3.727879616737006*^9, 
  3.727879619545887*^9}, {3.727879705352076*^9, 3.7278797261345243`*^9}, {
  3.7278805381565742`*^9, 3.727880538743538*^9}, {3.727922980939206*^9, 
  3.7279229886203623`*^9}, {3.729797634646571*^9, 3.7297976426699123`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"3f348c3d-26de-4b25-8ba3-c27ad607574b"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 0.}, {2., 0.1111111111111111}, {3., 0.2222222222222222}, {
      4., 0.3333333333333333}, {5., 0.4444444444444444}, {6., 
      0.5555555555555556}, {7., 0.6666666666666666}, {8., 
      0.7777777777777777}, {9., 0.8888888888888888}, {10., 
      1.}}]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10.}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7279036576643267`*^9, 3.7279153856605663`*^9, 3.727918037116987*^9, 
   3.7279180948276176`*^9, {3.7279229839121304`*^9, 3.727922989728109*^9}, 
   3.7279241982632713`*^9, {3.727927707284925*^9, 3.727927732385895*^9}, 
   3.727967810497973*^9, 3.72796873344042*^9, 3.727969808476139*^9, 
   3.7279699553203173`*^9, 3.728044351955875*^9, 3.728046448005164*^9, 
   3.728066469870434*^9, 3.728068121014494*^9, 3.728083783783091*^9, 
   3.7280907419079514`*^9, 3.728169445558825*^9, 3.728169541122375*^9, 
   3.7281698232597103`*^9, 3.728169883302211*^9, 3.728252955818722*^9, 
   3.728946256012908*^9, 3.72902290017245*^9, {3.729119978824182*^9, 
   3.729119995825794*^9}, 3.729121072276454*^9, 3.729121110814158*^9, 
   3.729172307690002*^9, 3.729175690740155*^9, 3.7291757911047173`*^9, 
   3.729183412564513*^9, {3.729183447842392*^9, 3.729183460727846*^9}, 
   3.72925593715775*^9, 3.729552301708386*^9, 3.729557876182742*^9, 
   3.729629838166031*^9, 3.729634636127739*^9, 3.729642872393754*^9, 
   3.729642909097967*^9, 3.729643939109083*^9, 3.729647185377458*^9, 
   3.729683202099824*^9, 3.729778155387088*^9, 3.729779233549402*^9, 
   3.729779280671722*^9, 3.729797644246916*^9, 3.729894699983472*^9, 
   3.729896006002866*^9, 3.729896152655624*^9, 3.729897295571372*^9, 
   3.730140354812684*^9, 3.730240271165248*^9, 3.730380091396955*^9, 
   3.7303857111088877`*^9, 3.73038574227789*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"f75b0940-bc41-421e-a9e1-b8a110599ca8"]
}, Open  ]],

Cell[TextData[{
 "Bishop\[CloseCurlyQuote]s ground truth is a single cycle of a sine wave. \
Add noise to a sample taken at the inputs of the training set above. Bishop \
doesn\[CloseCurlyQuote]t state an observation noise, but I guess ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sigma]", "z"], "=", 
    RowBox[{
     SubscriptBox["\[Sigma]", "t"], "=", "0.30"}]}], TraditionalForm]],
  ExpressionUUID->"f7563510-3ca6-49c1-a9be-eaa9281a75a2"],
 " to create a fake data set that resembles Bishop\[CloseCurlyQuote]s \
qualitatively.\n\nWolfram\[CloseCurlyQuote]s built-in ",
 Cell[BoxData[
  FormBox["NormalDistribution", TraditionalForm]], "Code",ExpressionUUID->
  "391719cb-f0ae-47d9-b6f8-cf0a16d1de30"],
 " takes the standard deviation as its second argument, not the variance. \
Mixing up standard deviation and variance is an easy mistake. Bishop\
\[CloseCurlyQuote]s notation for normal distribution takes variance as second \
argument, so beware. "
}], "Text",
 CellChangeTimes->{{3.727925037995728*^9, 3.7279251079034653`*^9}, {
  3.7281672861902847`*^9, 3.728167315662861*^9}, {3.728217520627878*^9, 
  3.7282175317062597`*^9}, {3.728217692277302*^9, 3.728217821974227*^9}, {
  3.72821832687463*^9, 3.7282183503446493`*^9}, {3.728219468837654*^9, 
  3.728219505064865*^9}, {3.728251312926087*^9, 3.728251372591283*^9}, {
  3.729024054019828*^9, 3.729024066384492*^9}, {3.7291650862455063`*^9, 
  3.7291651414164467`*^9}, {3.729165177227763*^9, 3.729165178485721*^9}, {
  3.729182224031723*^9, 3.7291822276320543`*^9}, {3.729797666011817*^9, 
  3.729797705464027*^9}, {3.730312304215117*^9, 
  3.7303123074886293`*^9}},ExpressionUUID->"bdc6fb65-119a-4175-b9f9-\
316dfeb6c274"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"bishopTrainingSetY", ",", "bishopGroundTruthY"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bishopGroundTruthY", "[", "xs_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"2.", "\[Pi]", "#"}], "]"}], "&"}], "/@", "xs"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bishopTrainingSetY", "[", 
    RowBox[{"xs_", ",", "\[Sigma]_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", "=", 
       RowBox[{"Length", "@", "xs"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"bishopGroundTruthY", "[", "xs", "]"}], "\[IndentingNewLine]", 
      "+", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0.", ",", "\[Sigma]"}], "]"}], ",", "n"}], "]"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.727879752743185*^9, 3.7278799854455643`*^9}, {
  3.727880015690054*^9, 3.7278800794720173`*^9}, {3.727880507980577*^9, 
  3.7278805461972027`*^9}, {3.729175578225967*^9, 3.729175578232574*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"8ba009d7-6ad6-4e2a-a567-e2fad21156b3"],

Cell[TextData[{
 "Take a sample of the outputs and assign it the names ",
 Cell[BoxData[
  FormBox["bts", TraditionalForm]], "Code",ExpressionUUID->
  "72d63cd9-b72b-47f5-b59e-8ee44c6dcc64"],
 " for ",
 Cell[BoxData[
  FormBox["bishopTrainingSet", TraditionalForm]], "Code",ExpressionUUID->
  "f9cdc4b8-56b6-4315-84c8-cce498dec61d"],
 ". It isn\[CloseCurlyQuote]t his actual training set, which I didn\
\[CloseCurlyQuote]t find in print, just my simulation."
}], "Text",
 CellChangeTimes->{{3.7278832163983307`*^9, 3.7278832375275517`*^9}, {
  3.727906008140655*^9, 3.727906061879993*^9}, {3.727967692026178*^9, 
  3.727967840843544*^9}, {3.727967872455134*^9, 3.7279678771043777`*^9}, {
  3.727969674731044*^9, 3.727969699819124*^9}, {3.727969774693037*^9, 
  3.727969782528049*^9}, {3.727969836960168*^9, 3.727969942714082*^9}, {
  3.72796998393566*^9, 3.727969992896991*^9}, {3.727970026070797*^9, 
  3.727970373300626*^9}, {3.727970485196838*^9, 3.727970512318493*^9}, {
  3.727970712603229*^9, 3.7279707772612677`*^9}, {3.727971265852014*^9, 
  3.7279713568853807`*^9}, {3.7281671900202827`*^9, 3.7281672837287903`*^9}, {
  3.728167321065092*^9, 3.728167321584338*^9}, {3.729182260744134*^9, 
  3.729182293947283*^9}, {3.7297977262479973`*^9, 
  3.729797728261697*^9}},ExpressionUUID->"54827bd6-34f4-4737-a7ba-\
d3104ca29794"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "bishopTrainingSet", ",", "bts", ",", "bishopFake", ",", 
    "bishopFakeSigma"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bishopFake", "[", 
    RowBox[{"n_", ",", "\[Sigma]_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xs", "=", 
       RowBox[{"bishopTrainingSetX", "[", "n", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ys", "=", 
         RowBox[{"bishopTrainingSetY", "[", 
          RowBox[{"xs", ",", "\[Sigma]"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"xs", ",", "ys"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bishopFakeSigma", "=", "0.30"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bishopTrainingSet", "=", 
   RowBox[{"bts", "=", 
    RowBox[{"bishopFake", "[", 
     RowBox[{"10", ",", "bishopFakeSigma"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.72788015184029*^9, 3.727880231778208*^9}, {
   3.727880385369709*^9, 3.727880413342643*^9}, 3.727880526308257*^9, {
   3.727967805222126*^9, 3.72796780531704*^9}, {3.7279697920516977`*^9, 
   3.72796979498647*^9}, {3.727969950515656*^9, 3.727969950591378*^9}, {
   3.727994080862403*^9, 3.727994108975196*^9}, {3.729175578236166*^9, 
   3.7291756088584633`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"e8dc79db-fc1e-44d9-9d9c-6a0d36e42fb9"],

Cell["Make a plot like Bishop\[CloseCurlyQuote]s figure 1.7 (page 10).", \
"Text",
 CellChangeTimes->{{3.727906073807754*^9, 3.727906077471641*^9}, {
  3.727915536304657*^9, 3.7279155386681232`*^9}, {3.7279713648223457`*^9, 
  3.727971369779395*^9}},ExpressionUUID->"c73deac6-6150-44d0-bc24-\
a6f391e291fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"lp", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"bts", "\[Transpose]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Graphics", "@", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", 
             RowBox[{"Circle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}], "}"}]}], 
          ",", ".05"}], "}"}]}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lp", ",", 
       RowBox[{"(*", " ", 
        RowBox[{"once", " ", "to", " ", "set", " ", "the", " ", "scale"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2.", "\[Pi]", " ", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0.", ",", "1."}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", "Green"}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", "lp"}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{"again", " ", "to", " ", "overdraw", " ", "the", " ", "plot"}],
        " ", "*)"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<t\>\""}], "}"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.727880085493072*^9, 3.72788013972164*^9}, {
   3.7278802437563953`*^9, 3.7278802581076803`*^9}, {3.7278803034902487`*^9, 
   3.727880361169203*^9}, {3.7278804194474173`*^9, 3.727880429435811*^9}, 
   3.7278806446621532`*^9, {3.7278807572759333`*^9, 3.7278807745809507`*^9}, {
   3.727880893504468*^9, 3.7278809867037153`*^9}, {3.7278810338930473`*^9, 
   3.727881110077335*^9}, {3.7278811411219473`*^9, 3.7278813474824867`*^9}, {
   3.727881617681645*^9, 3.727881731860063*^9}, {3.727882548678594*^9, 
   3.72788267853528*^9}, {3.727882716394725*^9, 3.727882813824841*^9}, {
   3.727882846153562*^9, 3.727882924674261*^9}, {3.72788567102006*^9, 
   3.727885671857286*^9}, {3.727923022530311*^9, 3.727923022847533*^9}, 
   3.7291756286936607`*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"82e02689-45c4-48b3-a720-b61526dcd063"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
      AbsoluteThickness[1.6], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0., 0.030659282456956025}, Automatic, 
       Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.1111111111111111, 0.47106156806368604}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.2222222222222222, 1.0284300282817593}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.3333333333333333, 1.2386640374141304}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.4444444444444444, 0.33292567400837664}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.5555555555555556, -0.09012638477493817}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.6666666666666666, -0.500616836227298}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.7777777777777777, -1.0683051246569795}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.8888888888888888, -0.45478488058919203}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {1., 0.12208361778279674}, Automatic, 
       Scaled[{0.05, 0.05}]]}, {}}, {}, {}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 1, 0], Thickness[Large], Opacity[1.], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$3057#1"]& ]}, {}, {}}, {{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
      AbsoluteThickness[1.6], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0., 0.030659282456956025}, Automatic, 
       Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.1111111111111111, 0.47106156806368604}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.2222222222222222, 1.0284300282817593}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.3333333333333333, 1.2386640374141304}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.4444444444444444, 0.33292567400837664}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.5555555555555556, -0.09012638477493817}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.6666666666666666, -0.500616836227298}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.7777777777777777, -1.0683051246569795}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {0.8888888888888888, -0.45478488058919203}, 
       Automatic, Scaled[{0.05, 0.05}]], InsetBox[
       GraphicsBox[
        {RGBColor[0, 0, 1], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         CircleBox[{0, 0}]}], {1., 0.12208361778279674}, Automatic, 
       Scaled[{0.05, 0.05}]]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"t\"", TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {-1.0683051246569795`, 1.2386640374141304`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.727880775294775*^9, 3.727880787730764*^9}, {
   3.727880934685656*^9, 3.7278809872854*^9}, {3.727881034647586*^9, 
   3.72788111070538*^9}, {3.727881149340519*^9, 3.727881273359902*^9}, {
   3.727881331668276*^9, 3.727881367908173*^9}, {3.727881679253851*^9, 
   3.727881732639435*^9}, {3.727882562737458*^9, 3.727882578070189*^9}, {
   3.727882623588429*^9, 3.727882694410623*^9}, {3.727882734556818*^9, 
   3.727882799272423*^9}, {3.727882852380828*^9, 3.727882925334324*^9}, 
   3.7278856759136066`*^9, 3.7278870450627317`*^9, 3.7279153858103523`*^9, 
   3.72791803725655*^9, 3.72791809498518*^9, 3.727923023895686*^9, 
   3.7279241984537888`*^9, 3.727925186689782*^9, {3.7279277074383373`*^9, 
   3.727927732567607*^9}, 3.727967810615572*^9, 3.7279687335582027`*^9, 
   3.727969808589816*^9, 3.7279699554358187`*^9, 3.7280443521874313`*^9, 
   3.728046448171671*^9, 3.7280664700061007`*^9, 3.728068121166772*^9, 
   3.7280837839406548`*^9, 3.728090742104409*^9, 3.728169445708262*^9, 
   3.728169541253911*^9, 3.728169823409259*^9, 3.728169883432933*^9, 
   3.728252955971521*^9, 3.728946256243698*^9, 3.729022900259424*^9, {
   3.729119978973509*^9, 3.729119995969993*^9}, 3.7291210724993067`*^9, 
   3.7291211109977207`*^9, 3.7291723078683023`*^9, 3.7291756908751507`*^9, 
   3.7291757981263313`*^9, 3.729183412685206*^9, {3.72918344796786*^9, 
   3.7291834608971157`*^9}, 3.729255937258317*^9, 3.729552301814382*^9, 
   3.72955787630888*^9, 3.7296298382718487`*^9, 3.729634636236637*^9, 
   3.7296428725154552`*^9, 3.7296429092535467`*^9, 3.7296439391961117`*^9, 
   3.729647185507022*^9, 3.7296832022027597`*^9, 3.729778155560172*^9, 
   3.729779233716967*^9, 3.729779280842063*^9, 3.729894700122344*^9, 
   3.72989600617513*^9, 3.729896152791457*^9, 3.729897295719614*^9, 
   3.730140355095414*^9, 3.730240271278595*^9, 3.730380091486162*^9, 
   3.730385711414447*^9, 3.730385742383823*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"d7771438-11cf-4142-95a4-f6f7bcdc7d83"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Partials: Gradients of the Unknown Parameters", "Subsection",
 CellChangeTimes->{{3.729182306493725*^9, 
  3.7291823233798018`*^9}},ExpressionUUID->"3c3da3f6-3bd2-4f62-968d-\
095193fc57c2"],

Cell[TextData[{
 "Write a function for partials. Quietly map the indeterminate ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["0", "0"], TraditionalForm]],ExpressionUUID->
  "b579cedc-762e-4d8b-9c45-f853e45c0428"],
 " to 1. Test it symbolically."
}], "Text",
 CellChangeTimes->{{3.727925195515706*^9, 3.727925232785982*^9}, {
   3.7279678941263742`*^9, 3.727967900133898*^9}, {3.72797367998691*^9, 
   3.727973685039398*^9}, 3.728086523246662*^9, {3.72816734159263*^9, 
   3.7281673598690157`*^9}},ExpressionUUID->"a694d9c7-cace-48fb-8330-\
ef697ae6c5fd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "partialsFn", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"partialsFn", "[", 
    RowBox[{"order_", ",", "xs_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "@", 
      RowBox[{"Quiet", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["#", 
           RowBox[{"i", "-", "1"}]], "/.", 
          RowBox[{"{", 
           RowBox[{"Indeterminate", "\[Rule]", "1"}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"order", "+", "1"}]}], "}"}]}], "]"}]}]}], "&"}], "@", 
    "xs"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "@", 
  RowBox[{"partialsFn", "[", 
   RowBox[{"6", ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["x", "1"], ",", 
      SubscriptBox["x", "2"], ",", 
      SubscriptBox["x", "\[CapitalMu]"]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.727887092392867*^9, 3.7278870953121367`*^9}, {
  3.7278927196950607`*^9, 3.727893003172378*^9}, {3.727903114052039*^9, 
  3.7279031476650763`*^9}, {3.7279033176045437`*^9, 3.727903339378933*^9}, {
  3.727915570017507*^9, 3.727915600803166*^9}, {3.7279156539215097`*^9, 
  3.727915686797736*^9}, {3.727923101166524*^9, 3.727923181040741*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"808798b0-cb49-49bf-ba5d-a4435e007b6c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      SubscriptBox["x", "1"], 
      SubsuperscriptBox["x", "1", "2"], 
      SubsuperscriptBox["x", "1", "3"], 
      SubsuperscriptBox["x", "1", "4"], 
      SubsuperscriptBox["x", "1", "5"], 
      SubsuperscriptBox["x", "1", "6"]},
     {"1", 
      SubscriptBox["x", "2"], 
      SubsuperscriptBox["x", "2", "2"], 
      SubsuperscriptBox["x", "2", "3"], 
      SubsuperscriptBox["x", "2", "4"], 
      SubsuperscriptBox["x", "2", "5"], 
      SubsuperscriptBox["x", "2", "6"]},
     {"1", 
      SubscriptBox["x", "\[CapitalMu]"], 
      SubsuperscriptBox["x", "\[CapitalMu]", "2"], 
      SubsuperscriptBox["x", "\[CapitalMu]", "3"], 
      SubsuperscriptBox["x", "\[CapitalMu]", "4"], 
      SubsuperscriptBox["x", "\[CapitalMu]", "5"], 
      SubsuperscriptBox["x", "\[CapitalMu]", "6"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7279231186573143`*^9, 3.7279231819525948`*^9}, 
   3.7279241985452023`*^9, {3.727927707499826*^9, 3.727927732638883*^9}, 
   3.7279678106408577`*^9, 3.727968733627557*^9, 3.727969808625535*^9, 
   3.727969955460413*^9, 3.728044352257525*^9, 3.728046448251258*^9, 
   3.728066470133565*^9, 3.728068121219434*^9, 3.728083784014492*^9, 
   3.728090742211894*^9, 3.728169445777561*^9, 3.728169541293954*^9, 
   3.7281698234776993`*^9, 3.728169883478408*^9, 3.728252956051774*^9, 
   3.728946256298505*^9, 3.729022900282452*^9, {3.729119979041417*^9, 
   3.7291199960654287`*^9}, 3.729121072577467*^9, 3.729121111088888*^9, 
   3.729172307938603*^9, 3.729175690912595*^9, 3.729175799963489*^9, 
   3.729183412718895*^9, {3.729183448005946*^9, 3.729183460929661*^9}, 
   3.7292559373083487`*^9, 3.7295523018487167`*^9, 3.729557876329398*^9, 
   3.729629838290058*^9, 3.729634636267157*^9, 3.729642872549694*^9, 
   3.729642909372253*^9, 3.729643939223579*^9, 3.7296471855760403`*^9, 
   3.729683202239718*^9, 3.729778155623721*^9, 3.7297792337834044`*^9, 
   3.729779280904265*^9, 3.729894700189678*^9, 3.729896006236771*^9, 
   3.729896152859838*^9, 3.729897295756055*^9, 3.7301403551832657`*^9, 
   3.7302402713153687`*^9, 3.7303800915212917`*^9, 3.730385711450719*^9, 
   3.730385742418201*^9},
 CellLabel->
  "Out[23]//MatrixForm=",ExpressionUUID->"ca98268a-b946-43c6-aefa-\
5fcd0d0dcf55"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The MAP Equations", "Subsection",
 CellChangeTimes->{{3.7291823695201817`*^9, 
  3.7291823731744957`*^9}},ExpressionUUID->"767759cd-2d96-426e-94ca-\
643a24c684dd"],

Cell[TextData[{
 "Confer Bishop\[CloseCurlyQuote]s equation 3.3, page 138, where he writes \
the parameters to estimate as ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "f93adc3c-853e-4c72-9d86-2aa88377c8d3"],
 " and the observation equation as"
}], "Text",
 CellChangeTimes->{{3.727967934130774*^9, 3.727967994255875*^9}, {
  3.728167384043807*^9, 3.7281673844840384`*^9}, {3.7282203912603188`*^9, 
  3.728220431494154*^9}, {3.7282205477554483`*^9, 3.728220580377705*^9}, {
  3.728220691138853*^9, 3.72822075490273*^9}, {3.728222921609508*^9, 
  3.728222923769473*^9}, {3.72822433008339*^9, 
  3.728224339280476*^9}},ExpressionUUID->"afc353ba-db82-42f0-85a7-\
fb076016da5c"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"y", "(", 
    RowBox[{
     StyleBox["x",
      FontWeight->"Bold"], 
     StyleBox[",",
      FontWeight->"Plain"], 
     StyleBox[" ",
      FontWeight->"Plain"], 
     StyleBox["w",
      FontWeight->"Bold"]}], 
    StyleBox[")",
     FontWeight->"Plain"]}], 
   StyleBox["=",
    FontWeight->"Plain"], 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"j", "=", "0"}], "\[CapitalMu]"], 
    RowBox[{
     SubscriptBox[
      StyleBox["w",
       FontWeight->"Plain"], "j"], 
     RowBox[{
      SubscriptBox["\[Phi]", 
       RowBox[{"\[ThinSpace]", "j"}]], "\[ThinSpace]", "(", 
      StyleBox["x",
       FontWeight->"Bold"], ")"}]}]}]}], TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.7282207613079443`*^9, 3.728220889669578*^9}, {
  3.728221929311122*^9, 3.728221929312549*^9}, {3.7282229942899933`*^9, 
  3.728223000986117*^9}, {3.728251451814763*^9, 
  3.728251478938428*^9}},ExpressionUUID->"b3852931-b403-43be-9dd4-\
fbf8ad805281"],

Cell[TextData[{
 "(",
 StyleBox["bias",
  FontSlant->"Italic"],
 " incorporated as coefficient ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", "0"], TraditionalForm]],ExpressionUUID->
  "47a29354-35e1-4999-8a23-378844599a74"],
 " of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["0", "th"], TraditionalForm]],ExpressionUUID->
  "856ceccb-b337-46f7-acfb-9cde919fa114"],
 " basis function). This is predictive: you give me concrete inputs ",
 Cell[BoxData[
  FormBox[
   StyleBox["x",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "15dedbdc-ea13-4583-be2d-b0f2fd3052c4"],
 ", parameters ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "5c7a5a42-af1e-409a-a658-bfca1a86f03c"],
 ", and I\[CloseCurlyQuote]ll give you a predicted observation ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "6aae751e-38d8-4953-867b-5863b83af9f4"],
 " in terms of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalMu]", "+", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "9695c06c-b4ec-4727-8d09-f402312042ba"],
 " basis functions ",
 Cell[BoxData[
  FormBox["\[Phi]", TraditionalForm]],ExpressionUUID->
  "81dd4bd5-3e34-40e2-8c3d-0e0c557b5c29"],
 " corresponding to the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalMu]", "+", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "43b2d63e-6d89-4612-9554-3a508721c906"],
 " unknown parameters. For polynomial basis functions, the number of \
parameters is one more than the order ",
 Cell[BoxData[
  FormBox["\[CapitalMu]", TraditionalForm]],ExpressionUUID->
  "ab13ff31-c2c7-47c2-8dd5-58fb42fbf222"],
 " of the polynomials. The basis functions can be anything, however: \
wavelets, Fourier components, etc.\n\nBishop (inexplicably) converts ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "2413a212-ea76-40c0-9640-4e8b71d6160d"],
 " into a covector and writes"
}], "Text",
 CellChangeTimes->{{3.728220906295454*^9, 3.728220946192494*^9}, {
   3.7282218953744383`*^9, 3.728221919178042*^9}, {3.728222933472761*^9, 
   3.728222989706678*^9}, {3.728223024410286*^9, 3.728223057641677*^9}, {
   3.72822435625596*^9, 3.728224387983367*^9}, 3.728251485977022*^9, 
   3.729119179755419*^9, {3.72916521124009*^9, 3.729165279052802*^9}, {
   3.7291823881914263`*^9, 3.7291824219583178`*^9}, {3.729644981843032*^9, 
   3.729644984372673*^9}, {3.729797791815206*^9, 
   3.72979787349229*^9}},ExpressionUUID->"4caa1d79-69f9-4857-9ca0-\
f60d221f28a0"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"y", "(", 
    RowBox[{
     StyleBox["x",
      FontWeight->"Bold"], 
     StyleBox[",",
      FontWeight->"Plain"], 
     StyleBox[" ",
      FontWeight->"Plain"], 
     StyleBox["w",
      FontWeight->"Bold"]}], 
    StyleBox[")",
     FontWeight->"Plain"]}], 
   StyleBox["=",
    FontWeight->"Plain"], 
   RowBox[{
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], 
     StyleBox["\[Transpose]",
      FontWeight->"Plain"]}], 
    RowBox[{
     StyleBox["\[Phi]",
      FontWeight->"Bold"], 
     StyleBox["\[ThinSpace]",
      FontWeight->"Plain"], "(", 
     StyleBox["x",
      FontWeight->"Bold"], 
     StyleBox[")",
      FontWeight->"Plain"]}]}]}], TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.7282219448855343`*^9, 
  3.728222027597753*^9}},ExpressionUUID->"e9b01368-12da-488b-94ce-\
2dd50bdf1a8e"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["\[Phi]",
     FontWeight->"Bold"], "\[ThinSpace]", "(", 
    StyleBox["x",
     FontWeight->"Bold"], ")"}], TraditionalForm]],ExpressionUUID->
  "7664d159-29b2-44e2-8792-094becf35ae2"],
 " is an ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"\[CapitalMu]", "+", "1"}], ")"}], TraditionalForm]],
  ExpressionUUID->"2c7292a6-4c65-41e9-b006-06cbefd16de3"],
 "-dimensional column-vector of basis functions, the transpose of one row of \
our partials matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "ed495fe0-6173-47f1-97f1-6ccd7a93693a"],
 ". We claim it\[CloseCurlyQuote]s better always to think of partials or \
gradients as values of differential forms, thus covectors (row vectors or \
covariant vectors, see ",
 ButtonBox["https://goo.gl/DkeVmM",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://goo.gl/DkeVmM"], None},
  ButtonNote->"https://goo.gl/DkeVmM"],
 ", ",
 ButtonBox["https://goo.gl/JgzqLR",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://goo.gl/JgzqLR"], None},
  ButtonNote->"https://goo.gl/JgzqLR"],
 ", and ",
 ButtonBox["https://goo.gl/4TcF4T",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://goo.gl/4TcF4T"], None},
  ButtonNote->"https://goo.gl/4TcF4T"],
 "). \n\nTo find best-fit values for ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "2e0cbb6f-7787-4b3a-9367-89d4bc1761dd"],
 ", rows of the partials matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "4ef83fad-5c97-4ae5-98df-5042206ebc41"],
 " are the covector gradients of ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "c7e242fb-2722-4ae6-9a2b-3e2d84e871a3"],
 " with respect to ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "baff650f-684a-47d3-95c6-278ac2b4a93c"],
 ". We prefer to write"
}], "Text",
 CellChangeTimes->{{3.728222034989254*^9, 3.728222053237129*^9}, {
   3.728222178848859*^9, 3.7282222660799637`*^9}, {3.728222300000989*^9, 
   3.7282223904929523`*^9}, {3.7282228551572657`*^9, 3.728222859737496*^9}, {
   3.728223076788225*^9, 3.728223190463003*^9}, {3.728223230865528*^9, 
   3.728223361801167*^9}, 3.728223984636827*^9, {3.7282240554498873`*^9, 
   3.728224092328535*^9}, {3.728224400399331*^9, 3.728224741229491*^9}, {
   3.728224776796547*^9, 3.728224809363667*^9}, {3.7282517358200502`*^9, 
   3.7282517662896633`*^9}, {3.729091174357189*^9, 3.7290911785502853`*^9}, {
   3.729091212251935*^9, 3.729091219775629*^9}, {3.729091277188416*^9, 
   3.7290913266532917`*^9}, {3.72909268413879*^9, 3.729092706422126*^9}, {
   3.729119179778685*^9, 3.7291191797984324`*^9}, {3.729120346504904*^9, 
   3.7291203520894012`*^9}, {3.729165311843924*^9, 3.729165352537273*^9}, {
   3.7297978998390903`*^9, 
   3.7297979011646757`*^9}},ExpressionUUID->"d6d02b47-7699-4863-b420-\
0e597bfb6fd0"],

Cell[CellGroupData[{

Cell[TextData[{
 "observations as an ",
 Cell[BoxData[
  FormBox["\[CapitalNu]", TraditionalForm]],ExpressionUUID->
  "fcfdbf6a-2e88-4194-8eb9-62448305406d"],
 "-dimensional column-vector ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalZeta]", 
    RowBox[{"\[VeryThinSpace]", "\[CapitalNu]"}]], TraditionalForm]],
  ExpressionUUID->"7f371c41-2439-49ff-a405-bbbac410c97c"],
 " with elements ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Zeta]", 
    RowBox[{"\[VeryThinSpace]", 
     RowBox[{"j", "\[ThinSpace]", "\[Element]", "\[ThinSpace]", 
      RowBox[{"[", "\[ThinSpace]", 
       RowBox[{
        RowBox[{"1", "\[ThinSpace]", ".."}], "\[CapitalNu]"}], "\[ThinSpace]",
        "]"}]}]}]], TraditionalForm]],ExpressionUUID->
  "31127627-edad-47a8-807a-e6bbbe593f86"]
}], "Item",
 CellChangeTimes->{{3.728222034989254*^9, 3.728222053237129*^9}, {
   3.728222178848859*^9, 3.7282222660799637`*^9}, {3.728222300000989*^9, 
   3.7282223904929523`*^9}, {3.7282228551572657`*^9, 3.728222859737496*^9}, {
   3.728223076788225*^9, 3.728223190463003*^9}, {3.728223230865528*^9, 
   3.728223361801167*^9}, 3.728223984636827*^9, {3.7282240554498873`*^9, 
   3.728224092328535*^9}, {3.728224400399331*^9, 3.728224741229491*^9}, {
   3.728224776796547*^9, 3.728224809363667*^9}, {3.7282517358200502`*^9, 
   3.728251740048966*^9}, {3.728251771407675*^9, 3.728251772575143*^9}, {
   3.729029834166656*^9, 3.7290298371502934`*^9}, {3.72912036382929*^9, 
   3.7291203684585857`*^9}, {3.729645042322447*^9, 
   3.7296450425379868`*^9}},ExpressionUUID->"d125a78e-ad63-4d0e-b225-\
af94823bc9f1"],

Cell[TextData[{
 "the model or unknown parameters, an ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"\[CapitalMu]", "+", "1"}], ")"}], TraditionalForm]],
  ExpressionUUID->"34093d14-aa35-4214-a3e2-8b50e8957f15"],
 "-dimensional column-vector ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalXi]", 
    RowBox[{"\[ThinSpace]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalMu]", "+", "1"}], ")"}], "\[Times]", "1"}]}]], 
   TraditionalForm]],ExpressionUUID->"27530d6a-94c4-4ec6-98d8-e68dfb593b21"],
 " with elements ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", 
    RowBox[{"\[ThinSpace]", 
     RowBox[{"i", "\[ThinSpace]", "\[Element]", "\[ThinSpace]", 
      RowBox[{"[", "\[ThinSpace]", 
       RowBox[{
        RowBox[{"0", "\[ThinSpace]", ".."}], "\[CapitalMu]"}], "\[ThinSpace]",
        "]"}]}]}]], TraditionalForm]],ExpressionUUID->
  "18943418-6c16-48be-9e34-aa1a1b321058"]
}], "Item",
 CellChangeTimes->{{3.728222034989254*^9, 3.728222053237129*^9}, {
   3.728222178848859*^9, 3.7282222660799637`*^9}, {3.728222300000989*^9, 
   3.7282223904929523`*^9}, {3.7282228551572657`*^9, 3.728222859737496*^9}, {
   3.728223076788225*^9, 3.728223190463003*^9}, {3.728223230865528*^9, 
   3.728223361801167*^9}, 3.728223984636827*^9, {3.7282240554498873`*^9, 
   3.728224092328535*^9}, {3.728224400399331*^9, 3.728224741229491*^9}, {
   3.728224776796547*^9, 3.728224809363667*^9}, {3.7282517358200502`*^9, 
   3.728251740048966*^9}, {3.728251771407675*^9, 3.7282517814515944`*^9}, {
   3.7282518993121*^9, 3.7282519004727907`*^9}, {3.729029844861236*^9, 
   3.72902984786119*^9}, {3.729120316833633*^9, 3.729120321664834*^9}, {
   3.729645058784465*^9, 3.729645058784536*^9}, {3.729797943877902*^9, 
   3.729797958453072*^9}},ExpressionUUID->"2a13af40-d09a-41f5-8eab-\
2ae9717435cd"],

Cell[TextData[{
 "partials matrix as ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", 
    RowBox[{"N", "\[Times]", 
     RowBox[{"(", 
      RowBox[{"\[CapitalMu]", "+", "1"}], ")"}]}]], TraditionalForm]],
  ExpressionUUID->"d3592327-6324-4fd1-8aca-3364bb7df57a"]
}], "Item",
 CellChangeTimes->{{3.728222034989254*^9, 3.728222053237129*^9}, {
   3.728222178848859*^9, 3.7282222660799637`*^9}, {3.728222300000989*^9, 
   3.7282223904929523`*^9}, {3.7282228551572657`*^9, 3.728222859737496*^9}, {
   3.728223076788225*^9, 3.728223190463003*^9}, {3.728223230865528*^9, 
   3.728223361801167*^9}, 3.728223984636827*^9, {3.7282240554498873`*^9, 
   3.728224092328535*^9}, {3.728224400399331*^9, 3.728224741229491*^9}, {
   3.728224776796547*^9, 3.728224809363667*^9}, {3.7282517358200502`*^9, 
   3.728251740048966*^9}, {3.728251771407675*^9, 3.728251789543252*^9}, {
   3.72825189594316*^9, 3.7282518961283197`*^9}, {3.729029865577499*^9, 
   3.7290298774959583`*^9}, {3.729797981334482*^9, 
   3.7297979898657427`*^9}},ExpressionUUID->"cce41cf6-4157-476c-984f-\
2a030a9228a7"]
}, Open  ]],

Cell[TextData[{
 "Bishop calls our partials matrix the ",
 StyleBox["design matrix",
  FontSlant->"Italic"],
 " in his equation 3.16, page 142, consisting of values of the basis \
functions at the concrete inputs ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["x",
     FontWeight->"Bold"], 
    RowBox[{"n", "\[ThinSpace]", "\[Element]", "\[ThinSpace]", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"1", ".."}], "N"}], "]"}]}]], TraditionalForm]],
  ExpressionUUID->"d2561181-7429-4cc2-999c-7fe2b5f36bac"],
 ". Bishop must (more cumbersomely) work in the dual of our formulation. \n\n\
We prefer to write as follows: the covector rows of the design matrix terms \
as polynomial basis functions evaluated at the input points ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", 
    RowBox[{"n", "\[ThinSpace]", "\[Element]", "\[ThinSpace]", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"1", ".."}], "\[CapitalNu]"}], "]"}]}]], TraditionalForm]],
  ExpressionUUID->"c0cfc668-a741-4199-891b-2bde10b355d7"],
 ":"
}], "Text",
 CellChangeTimes->{{3.728222034989254*^9, 3.728222053237129*^9}, {
   3.728222178848859*^9, 3.7282222660799637`*^9}, {3.728222300000989*^9, 
   3.7282223904929523`*^9}, {3.7282228551572657`*^9, 3.728222859737496*^9}, {
   3.728223076788225*^9, 3.728223190463003*^9}, {3.728223230865528*^9, 
   3.728223361801167*^9}, 3.728223984636827*^9, {3.7282240554498873`*^9, 
   3.728224092328535*^9}, {3.728224400399331*^9, 3.728224741229491*^9}, {
   3.728224776796547*^9, 3.728224809363667*^9}, {3.7282517358200502`*^9, 
   3.728251740048966*^9}, {3.728251771407675*^9, 3.728251888355431*^9}, {
   3.729029892321496*^9, 3.729029983337439*^9}, {3.7291204222110157`*^9, 
   3.729120492782894*^9}, {3.7291653714940968`*^9, 3.729165462908938*^9}, {
   3.729182456005975*^9, 
   3.7291824795949993`*^9}},ExpressionUUID->"dbc30210-c866-4ae3-bba5-\
c1d548509902"],

Cell[BoxData[
 FormBox[
  RowBox[{"Z", "  ", "=", "  ", 
   RowBox[{
    RowBox[{"A", "\[CenterDot]", "\[CapitalXi]"}], "  ", "=", "  ", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         SubscriptBox["\[Zeta]", "0"]},
        {
         SubscriptBox["\[Zeta]", "1"]},
        {"\[VerticalEllipsis]"},
        {
         SubscriptBox["\[Zeta]", "\[CapitalNu]"]}
       }], ")"}], "  ", "=", "   ", 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"(", GridBox[{
           {
            RowBox[{"1", "=", 
             SubsuperscriptBox["x", "1", "0"]}], 
            SubscriptBox["x", "1"], 
            SubsuperscriptBox["x", "1", "2"], "\[CenterEllipsis]", 
            SubsuperscriptBox["x", "1", "M"]},
           {
            RowBox[{"1", "=", 
             SubsuperscriptBox["x", "2", "0"]}], 
            SubscriptBox["x", "2"], 
            SubsuperscriptBox["x", "2", "2"], "\[CenterEllipsis]", 
            SubsuperscriptBox["x", "2", "M"]},
           {"\[VerticalEllipsis]", "\[VerticalEllipsis]", " ", 
            "\[DescendingEllipsis]", "\[VerticalEllipsis]"},
           {
            RowBox[{"1", "=", 
             SubsuperscriptBox["x", "N", "0"]}], 
            SubscriptBox["x", "N"], 
            SubsuperscriptBox["x", "N", "2"], "\[CenterEllipsis]", 
            SubsuperscriptBox["x", "N", "M"]}
          }], ")"}],
        FontWeight->"Plain"], "  ", "\[CenterDot]", "  ", 
       RowBox[{"(", GridBox[{
          {
           SubscriptBox["\[Xi]", "0"]},
          {
           SubscriptBox["\[Xi]", "1"]},
          {"\[VerticalEllipsis]"},
          {
           SubscriptBox["\[Xi]", "\[CapitalMu]"]}
         }], ")"}]}], "  ", "+", "  ", "noise"}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.7282223267202578`*^9, 3.728222330771399*^9}, {
  3.728223414452943*^9, 3.728223474859379*^9}, {3.728223514299732*^9, 
  3.728223975929124*^9}, {3.728224109293193*^9, 3.728224109294752*^9}, {
  3.728224191499645*^9, 3.728224196666141*^9}, {3.728947752192189*^9, 
  3.728947823567884*^9}, {3.728949775673676*^9, 3.728949826088863*^9}, {
  3.729109560005604*^9, 3.72910969334587*^9}, {3.729109729502664*^9, 
  3.729109798273975*^9}, {3.729645085890316*^9, 
  3.729645106992324*^9}},ExpressionUUID->"9130f5d5-4502-424e-a97b-\
08a91c27fc62"],

Cell[TextData[{
 "then packed up into rows of the ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "867233d0-d313-41bb-ac38-e2b5260ac135"],
 " matrix. "
}], "Text",
 CellChangeTimes->{{3.729120500205209*^9, 
  3.729120518926064*^9}},ExpressionUUID->"83883ae6-d076-441c-8482-\
06f206529b42"],

Cell[BoxData[
 FormBox[
  RowBox[{"Z", "  ", "=", "  ", 
   RowBox[{
    RowBox[{"A", "\[CenterDot]", "\[CapitalXi]"}], "  ", "=", "  ", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         SubscriptBox["\[Zeta]", "0"]},
        {
         SubscriptBox["\[Zeta]", "1"]},
        {"\[VerticalEllipsis]"},
        {
         SubscriptBox["\[Zeta]", "\[CapitalNu]"]}
       }], ")"}], "  ", "=", "   ", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        StyleBox[
         RowBox[{"(", GridBox[{
            {
             RowBox[{
              SubscriptBox[
               RowBox[{
                StyleBox["A",
                 FontWeight->"Plain"], 
                StyleBox["\[ThinSpace]",
                 FontWeight->"Bold"]}], 
               RowBox[{"1", "\[Times]", 
                RowBox[{"(", 
                 RowBox[{"\[CapitalMu]", "+", "1"}], ")"}]}]], 
              RowBox[{"(", 
               SubscriptBox["x", "1"], ")"}]}]},
            {
             RowBox[{
              SubscriptBox[
               RowBox[{
                StyleBox["A",
                 FontWeight->"Plain"], 
                StyleBox["\[ThinSpace]",
                 FontWeight->"Bold"]}], 
               RowBox[{"1", "\[Times]", 
                RowBox[{"(", 
                 RowBox[{"\[CapitalMu]", "+", "1"}], ")"}]}]], 
              RowBox[{"(", 
               SubscriptBox["x", "2"], ")"}]}]},
            {"\[VerticalEllipsis]"},
            {
             RowBox[{
              SubscriptBox[
               RowBox[{
                StyleBox["A",
                 FontWeight->"Plain"], 
                StyleBox["\[ThinSpace]",
                 FontWeight->"Bold"]}], 
               RowBox[{"1", "\[Times]", 
                RowBox[{"(", 
                 RowBox[{"\[CapitalMu]", "+", "1"}], ")"}]}]], 
              RowBox[{"(", 
               SubscriptBox["x", "\[CapitalNu]"], ")"}]}]}
           }], ")"}],
         FontWeight->"Plain"], 
        RowBox[{"\[CapitalNu]", "\[Times]", 
         RowBox[{"(", 
          RowBox[{"\[CapitalMu]", "+", "1"}], ")"}]}]], "  ", "\[CenterDot]", 
       "  ", 
       RowBox[{"(", GridBox[{
          {
           SubscriptBox["\[Xi]", "0"]},
          {
           SubscriptBox["\[Xi]", "1"]},
          {"\[VerticalEllipsis]"},
          {
           SubscriptBox["\[Xi]", "\[CapitalMu]"]}
         }], ")"}]}], "  ", "+", "  ", "noise"}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.7282223267202578`*^9, 3.728222330771399*^9}, {
  3.728223414452943*^9, 3.728223474859379*^9}, {3.728223514299732*^9, 
  3.728223975929124*^9}, {3.728224109293193*^9, 3.728224109294752*^9}, {
  3.728224191499645*^9, 3.728224196666141*^9}, {3.728947752192189*^9, 
  3.728947823567884*^9}, {3.728949775673676*^9, 3.728949826088863*^9}, {
  3.7297980290173683`*^9, 
  3.729798052887404*^9}},ExpressionUUID->"ad866a7d-7b82-4932-9f32-\
38a71895f06a"]
}, Closed]],

Cell[CellGroupData[{

Cell["MLE: The Normal Equations", "Subsection",
 CellChangeTimes->{{3.728251929759521*^9, 
  3.728251940262474*^9}},ExpressionUUID->"89146e39-831c-451a-ae64-\
abde3d317434"],

Cell["\<\
Mechanize the normal equations for comparison purposes; we expect them to \
over-fit.\
\>", "Text",
 CellChangeTimes->{{3.7279232272996387`*^9, 3.727923264174778*^9}, {
  3.727925248541918*^9, 3.7279252612235193`*^9}, {3.728219535976645*^9, 
  3.728219544909062*^9}, {3.728251418408484*^9, 3.728251422388431*^9}, {
  3.729024215377202*^9, 3.729024217223057*^9}, {3.729165197628982*^9, 
  3.729165198403118*^9}, {3.7291823464471197`*^9, 
  3.7291823613313932`*^9}},ExpressionUUID->"21dff09f-f36a-421e-aef5-\
39abef5c2d42"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "mleFit", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mleFit", "[", 
    RowBox[{"\[CapitalMu]_", ",", "trainingSet_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"xs", "=", 
        RowBox[{
        "trainingSet", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], ",", 
       RowBox[{"ys", "=", 
        RowBox[{
        "trainingSet", "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{
       RowBox[{"PseudoInverse", "[", 
        RowBox[{"partialsFn", "[", 
         RowBox[{"\[CapitalMu]", ",", "xs"}], "]"}], "]"}], ".", "ys"}],
      Background->RGBColor[1, 1, 0]]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mleFit", "[", 
  RowBox[{"3", ",", "bts"}], "]"}]}], "Input",
 CellChangeTimes->{{3.727885728192296*^9, 3.727885779639097*^9}, {
   3.727885809907544*^9, 3.727885814458734*^9}, {3.727886129093534*^9, 
   3.7278861410970383`*^9}, {3.72788617438813*^9, 3.7278862220128107`*^9}, {
   3.7278865585658693`*^9, 3.727886599363595*^9}, {3.7279031627619*^9, 
   3.727903227220593*^9}, {3.727913081988744*^9, 3.7279130820838013`*^9}, {
   3.727913123878634*^9, 3.727913123932819*^9}, {3.728090725899406*^9, 
   3.7280907259084253`*^9}, {3.728169613067173*^9, 3.728169613076036*^9}, 
   3.729175629972382*^9, {3.7291764342927237`*^9, 3.7291764366839447`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"4f403321-0dff-4b61-bb6b-e5605b12d11b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.1250269110057388`"}], ",", "11.50897890494804`", ",", 
   RowBox[{"-", "32.36198990257288`"}], ",", "21.125385480739865`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7278862229627943`*^9, {3.727886559667815*^9, 3.727886599739743*^9}, {
   3.72790316911255*^9, 3.727903214869055*^9}, 3.7279033439958277`*^9, {
   3.727913077175877*^9, 3.727913082662711*^9}, 3.727913124658298*^9, 
   3.727915385897655*^9, 3.727915689226351*^9, 3.727918037352195*^9, 
   3.727918095083848*^9, 3.7279241986227837`*^9, {3.727927707553419*^9, 
   3.727927732702104*^9}, 3.727967810695971*^9, 3.727968733693976*^9, 
   3.7279698086933317`*^9, 3.727969955502687*^9, 3.728044352304865*^9, 
   3.728046448308305*^9, 3.728066470172489*^9, 3.72806812129386*^9, 
   3.728083784080934*^9, 3.728090742292589*^9, 3.72816944582929*^9, 
   3.728169541357428*^9, 3.728169823527856*^9, 3.728169883537332*^9, 
   3.728252956118902*^9, 3.7289462563501463`*^9, 3.729022900336874*^9, {
   3.729119979107937*^9, 3.729119996139695*^9}, 3.729121072645164*^9, 
   3.7291211111233273`*^9, 3.7291723080042467`*^9, 3.7291756909413757`*^9, 
   3.7291758020892*^9, 3.7291834127551937`*^9, {3.7291834480703287`*^9, 
   3.729183460969283*^9}, 3.729255937373231*^9, 3.729552301877532*^9, 
   3.729557876381481*^9, 3.7296298383478403`*^9, 3.729634636327812*^9, 
   3.729642872576435*^9, 3.7296429094051437`*^9, 3.7296439392773237`*^9, 
   3.729647185633141*^9, 3.7296832022663383`*^9, 3.7297781556886253`*^9, 
   3.729779233854649*^9, 3.7297792809555397`*^9, 3.729894700249802*^9, 
   3.729896006308855*^9, 3.729896152909051*^9, 3.7298972958016872`*^9, 
   3.73014035523915*^9, 3.730240271370902*^9, 3.730380091581353*^9, 
   3.73038571151164*^9, 3.730385742462206*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"c9324158-4414-48a4-ae68-178009d683f9"]
}, Open  ]],

Cell["A convenience function:", "Text",
 CellChangeTimes->{{3.729798126892275*^9, 
  3.729798131955408*^9}},ExpressionUUID->"c8e13496-262a-41b9-b53e-\
464d80b37aa9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "symbolicPowers", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"symbolicPowers", "[", 
    RowBox[{"variable_", ",", "order_"}], "]"}], ":=", "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"partialsFn", "[", 
     RowBox[{"order", ",", 
      RowBox[{"{", "variable", "}"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7279153202694693`*^9, 3.727915371067972*^9}, {
  3.7279237255692472`*^9, 3.727923807685313*^9}, {3.729182514215464*^9, 
  3.729182515145398*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"cb926cdf-c463-4b29-91f2-cc9b8c0af79f"],

Cell["\<\
The normal equations as a symbolic polynomial. Notice we can increase the \
order beyond the number of data, creating an underdetermined system. This is \
not the typical case in real-world data processing. Usually the number of \
data exceed the order and the system is overdetermined. The pseudoinverse is \
agnostic to the distinction.\
\>", "Text",
 CellChangeTimes->{{3.728086616407036*^9, 3.728086644421227*^9}, {
  3.728167395574012*^9, 3.7281673997415857`*^9}, {3.728219572416009*^9, 
  3.728219595133831*^9}, {3.729645137300458*^9, 
  3.729645224959401*^9}},ExpressionUUID->"4f2cb8a7-4457-4a84-a9ed-\
c08b68c43d39"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "x", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"symbolicPowers", "[", 
     RowBox[{"x", ",", "\[CapitalMu]"}], "]"}], ".", 
    RowBox[{"mleFit", "[", 
     RowBox[{"\[CapitalMu]", ",", "bts"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalMu]", ",", "3", ",", 
       "\"\<polynomial order \[CapitalMu]\>\""}], "}"}], ",", "0", ",", "16", 
     ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Labeled\>\"", "}"}]}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7280866505961733`*^9, 3.728086772996965*^9}, 
   3.728086803589117*^9, 3.728090725912261*^9, 3.7281696130841227`*^9, 
   3.7291756311754827`*^9, {3.729175826437456*^9, 3.7291758460147743`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"2c30fd53-ff05-4a76-8f5d-4e993e958741"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[CapitalMu]$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[CapitalMu]$$], 3, "polynomial order \[CapitalMu]"},
       0, 16, 1}}, Typeset`size$$ = {387., {1., 16.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[CapitalMu]$3094$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[CapitalMu]$$ = 3}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[CapitalMu]$$, $CellContext`\[CapitalMu]$3094$$, 
         0]}, "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Dot[
        $CellContext`symbolicPowers[$CellContext`x, \
$CellContext`\[CapitalMu]$$], 
        $CellContext`mleFit[$CellContext`\[CapitalMu]$$, $CellContext`bts]], 
      "Specifications" :> {{{$CellContext`\[CapitalMu]$$, 3, 
          "polynomial order \[CapitalMu]"}, 0, 16, 1, 
         Appearance -> {"Labeled"}}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{452., {60., 67.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.728086773562842*^9, 3.728086804275236*^9, 3.728090742426281*^9, 
   3.7281694459480057`*^9, 3.728169541460916*^9, 3.728169823628757*^9, 
   3.728169883652279*^9, 3.728225863858274*^9, 3.728252956249748*^9, 
   3.728946256894178*^9, 3.729022900437813*^9, {3.729119979237938*^9, 
   3.7291199962606564`*^9}, 3.729121072777959*^9, 3.729121111249694*^9, 
   3.7291723081374826`*^9, 3.729175691045731*^9, {3.729175810410253*^9, 
   3.729175846848763*^9}, 3.729182527081111*^9, 3.729183412855047*^9, {
   3.7291834481917963`*^9, 3.729183461081573*^9}, 3.729255937827094*^9, 
   3.729552301962193*^9, 3.729557876456039*^9, 3.729629838836141*^9, 
   3.7296346365430202`*^9, 3.729642872651252*^9, 3.729642909488571*^9, 
   3.7296439393563423`*^9, 3.729647185741205*^9, 3.729683202341844*^9, 
   3.729778155770583*^9, 3.7297792339418173`*^9, 3.729779281028274*^9, 
   3.7298947003399973`*^9, 3.729896006416829*^9, 3.7298961529887333`*^9, 
   3.729897295878295*^9, 3.730140355324717*^9, 3.7302402720507517`*^9, 
   3.730380091653686*^9, 3.730385711586491*^9, 3.730385742540182*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"ad92f913-98bd-4b47-b114-c1ddccf2185c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["RLS: Recurrent Least Squares", "Subsection",
 CellChangeTimes->{{3.72825197766994*^9, 
  3.72825198556595*^9}},ExpressionUUID->"5d759a27-e118-43f8-b084-\
2f8ccbc12929"],

Cell[TextData[{
 "RLS is regularized by its a-priori estimate of the unknown parameters and \
its a-priori information matrix. Use the slider below to see that once the \
minimum info becomes too large, the \[CapitalLambda] matrix becomes \
ill-conditioned: pink warning message appear from the Wolfram kernel, and the \
solution is numerically suspect. In the rest of this paper, we eliminate \
these error message by applying Wolfram\[CloseCurlyQuote]s ",
 Cell[BoxData[
  FormBox["Quiet", TraditionalForm]], "Code",ExpressionUUID->
  "9b505f9f-26c0-4b35-9fff-cb61a0fb8312"],
 " because we notice, numerically, that ill-conditioning of the information \
matrix does not seem to be harmful."
}], "Text",
 CellChangeTimes->{{3.72792327800198*^9, 3.7279233078789587`*^9}, {
  3.7279713983804617`*^9, 3.72797140314161*^9}, {3.7280360936971283`*^9, 
  3.728036119472001*^9}, {3.728036163659585*^9, 3.728036240971705*^9}, {
  3.728219601486958*^9, 3.728219652487793*^9}, {3.728252003629099*^9, 
  3.7282520048359327`*^9}, {3.7291654907947273`*^9, 3.7291655087082767`*^9}, {
  3.729174198506338*^9, 3.729174199241322*^9}, {3.729182539373966*^9, 
  3.729182552706852*^9}, {3.729645241053973*^9, 3.72964531696039*^9}, {
  3.729798163505123*^9, 
  3.729798175666603*^9}},ExpressionUUID->"953a9bfd-0f1e-4b34-806a-\
12bc491d013a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "rlsFit", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"rlsFit", "[", "\[Sigma]2\[CapitalLambda]_", "]"}], "[", 
     RowBox[{"\[CapitalMu]_", ",", "trainingSet_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xs", "=", 
         RowBox[{
         "trainingSet", "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{"ys", "=", 
         RowBox[{
         "trainingSet", "\[LeftDoubleBracket]", "2", 
          "\[RightDoubleBracket]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Xi]0", "=", 
           RowBox[{"List", "/@", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0", ",", 
              RowBox[{"\[CapitalMu]", "+", "1"}]}], "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\[CapitalLambda]0", "=", 
           RowBox[{"\[Sigma]2\[CapitalLambda]", "*", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"\[CapitalMu]", "+", "1"}], "]"}]}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Fold", "[", 
         RowBox[{"update", ",", 
          RowBox[{"{", 
           RowBox[{"\[Xi]0", ",", "\[CapitalLambda]0"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"List", "/@", "ys"}], ",", 
             RowBox[{"List", "/@", 
              RowBox[{"partialsFn", "[", 
               RowBox[{"\[CapitalMu]", ",", "xs"}], "]"}]}]}], "}"}], 
           "\[Transpose]"}]}], "]"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"rlsFit", "[", 
      SuperscriptBox["10", 
       RowBox[{"-", "log\[Sigma]2\[CapitalLambda]"}]], "]"}], "[", 
     RowBox[{"3", ",", "bts"}], "]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"log\[Sigma]2\[CapitalLambda]", ",", "9.034"}], "}"}], ",", "0",
      ",", "16", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.727883299044437*^9, 3.727883408526169*^9}, {
   3.727883570679338*^9, 3.727883753730864*^9}, {3.727883800858717*^9, 
   3.727883838115073*^9}, {3.727883894473887*^9, 3.727884018340303*^9}, {
   3.72788406916578*^9, 3.727884157272581*^9}, {3.727884225392531*^9, 
   3.7278842277505903`*^9}, {3.7278843168329363`*^9, 
   3.7278844893030443`*^9}, {3.72788451944672*^9, 3.727884559637722*^9}, {
   3.727884601998887*^9, 3.727884641880664*^9}, {3.727884702205894*^9, 
   3.727884709112802*^9}, {3.727884840379463*^9, 3.727884840498255*^9}, {
   3.7279032520135508`*^9, 3.727903302618636*^9}, 3.7279033915207367`*^9, {
   3.727913089794886*^9, 3.727913129180463*^9}, {3.727923317022047*^9, 
   3.727923549746903*^9}, {3.727923650995542*^9, 3.727923655663189*^9}, 
   3.727923702873125*^9, {3.727923927853791*^9, 3.727923934334038*^9}, {
   3.727925310895234*^9, 3.727925333557376*^9}, {3.728036060877223*^9, 
   3.728036070969619*^9}, {3.7280362269856453`*^9, 3.72803623654352*^9}, {
   3.7280907259214077`*^9, 3.7280907259309683`*^9}, {3.728225889419126*^9, 
   3.728225889490087*^9}, {3.729173873480887*^9, 3.729173873491919*^9}, {
   3.729173952692565*^9, 3.729174033832899*^9}, {3.729174227557437*^9, 
   3.729174255702014*^9}, 3.729175632402956*^9, {3.729647132778007*^9, 
   3.729647148168085*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"4668cdf5-7903-4f95-83fa-ae16e0957cb5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`log\[Sigma]2\[CapitalLambda]$$ = 9.034, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`log\[Sigma]2\[CapitalLambda]$$], 9.034}, 0, 16}}, 
    Typeset`size$$ = {434., {4., 11.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`log\[Sigma]2\[CapitalLambda]$3116$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`log\[Sigma]2\[CapitalLambda]$$ = 9.034}, 
      "ControllerVariables" :> {
        Hold[$CellContext`log\[Sigma]2\[CapitalLambda]$$, $CellContext`log\
\[Sigma]2\[CapitalLambda]$3116$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Part[
        $CellContext`rlsFit[
        10^(-$CellContext`log\[Sigma]2\[CapitalLambda]$$)][
        3, $CellContext`bts], 1], 
      "Specifications" :> {{{$CellContext`log\[Sigma]2\[CapitalLambda]$$, 
          9.034}, 0, 16, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{489., {60., 67.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.727913103888098*^9, 3.7279131297094307`*^9}, 
   3.72791538595157*^9, 3.727915690618195*^9, 3.727918037406971*^9, 
   3.7279180951339293`*^9, 3.727923485679799*^9, {3.7279235212598963`*^9, 
   3.727923539397266*^9}, 3.727923656903368*^9, 3.727923703600333*^9, 
   3.7279240791268167`*^9, 3.7279241986997967`*^9, 3.727925360788505*^9, {
   3.727927707618471*^9, 3.7279277327546997`*^9}, 3.727967810771263*^9, 
   3.727968733807341*^9, 3.727969808755946*^9, 3.727969955556759*^9, {
   3.728036061824555*^9, 3.728036072918947*^9}, {3.7280362295589123`*^9, 
   3.7280362371095047`*^9}, 3.72804435235367*^9, 3.728046448406433*^9, 
   3.728066470986565*^9, 3.728068121352648*^9, 3.728083784580184*^9, 
   3.728090742542427*^9, 3.728169446059235*^9, 3.728169541523823*^9, 
   3.728169823744402*^9, 3.728169883754513*^9, {3.728225871308848*^9, 
   3.728225890298745*^9}, 3.728252956368375*^9, 3.728946256965219*^9, 
   3.7290229005394793`*^9, {3.729119979308299*^9, 3.729119996363627*^9}, 
   3.729121072861215*^9, 3.729121111350686*^9, 3.7291723082385883`*^9, 
   3.72917389958121*^9, {3.729174004154214*^9, 3.729174028000448*^9}, 
   3.729175691158844*^9, 3.729175854610073*^9, 3.729183412914186*^9, {
   3.729183448249649*^9, 3.729183461158495*^9}, 3.729255937922879*^9, 
   3.72955230200729*^9, 3.729557876515918*^9, 3.729629838903739*^9, 
   3.7296346366745358`*^9, 3.7296428727312737`*^9, 3.72964290955186*^9, 
   3.7296439394770603`*^9, 3.729646853151237*^9, 3.729647185826949*^9, 
   3.729683202415702*^9, 3.729778155827753*^9, 3.729779234003327*^9, 
   3.729779281093878*^9, 3.72989470041908*^9, 3.7298960064731913`*^9, 
   3.7298961530898743`*^9, 3.729897295954137*^9, 3.730140355404768*^9, 
   3.73024027222139*^9, 3.730380091717915*^9, 3.730385711645405*^9, 
   3.730385742599948*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"1841a1d9-bd5c-448f-be14-078f40d23ea0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["KAL: Foldable Kalman Filter", "Subsection",
 CellChangeTimes->{{3.728252019102867*^9, 3.728252024734199*^9}, {
  3.7290943120705023`*^9, 
  3.7290943137983313`*^9}},ExpressionUUID->"1a256cc5-717d-4f70-98d5-\
1eccc5dcef4a"],

Cell[TextData[{
 "The foldable Kalman filter (KAL) follows below. This version has only the \
",
 StyleBox["update",
  FontSlant->"Italic"],
 " phase of a typical Kalman filter because the parameters-to-estimate are \
constant and there is no ",
 StyleBox["predict",
  FontSlant->"Italic"],
 " phase.\n\nNote the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "\[CapitalZeta]"], TraditionalForm]],ExpressionUUID->
  "944fe3ef-92a4-4716-82e3-d3bdcef1b832"],
 " parameter, the first in the definition of ",
 Cell[BoxData[
  FormBox["kalmanUpdate", TraditionalForm]], "Code",ExpressionUUID->
  "217ff7f6-5c5e-4f2d-b3fe-0e8e9924016d"],
 ". This is the ",
 StyleBox["covariance matrix of the observation noise",
  FontSlant->"Italic"],
 ". It is a constant throughout the folding run of the filter. That\
\[CloseCurlyQuote]s why it\[CloseCurlyQuote]s lambda-lifted into its own \
function slot; ",
 Cell[BoxData[
  FormBox["kalmanUpdate", TraditionalForm]], "Code",ExpressionUUID->
  "a6d93a7a-fed8-40bf-98a2-004f1bf9b537"],
 ", called with some concrete value of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "\[CapitalZeta]"], TraditionalForm]],ExpressionUUID->
  "87bdc418-bc3f-44b6-8a9a-fbee89c68b91"],
 ", yields a function that can be folded over an a-priori estimate ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "0"], TraditionalForm]],ExpressionUUID->
  "2125d705-4d59-4364-b34e-6de72dbb8e08"],
 " and covariance ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "0"], TraditionalForm]],ExpressionUUID->
  "cae5d4c1-22e1-4e7d-a1db-7c46cb34fc07"],
 " and a sequence of observation-and-partial-covector pairs ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"\[Zeta]", ",", "a"}], "}"}], TraditionalForm]],ExpressionUUID->
  "49799594-1382-4aab-87dd-b9fc92b25aa6"],
 "."
}], "Text",
 CellChangeTimes->{{3.727925392992813*^9, 3.727925440455097*^9}, {
  3.727968003304467*^9, 3.727968095322001*^9}, {3.727971415917358*^9, 
  3.727971445401681*^9}, {3.728167467247233*^9, 3.7281676104536*^9}, {
  3.7282196608402767`*^9, 3.728219713545024*^9}, {3.7282197580747232`*^9, 
  3.728219820377639*^9}, {3.728225898772212*^9, 3.7282259019302683`*^9}, {
  3.7282520355408773`*^9, 3.7282520676585073`*^9}, {3.728252107648376*^9, 
  3.7282521980434017`*^9}, {3.729030059987007*^9, 3.729030074977326*^9}, {
  3.729030986864485*^9, 3.7290310566698503`*^9}, {3.729092807796928*^9, 
  3.729092853441671*^9}, {3.729165528060895*^9, 3.729165730475572*^9}, {
  3.729174335777738*^9, 3.729174413265232*^9}, {3.7291825734673*^9, 
  3.729182599308608*^9}, {3.729638303220274*^9, 3.729638354229904*^9}, {
  3.729798208714859*^9, 
  3.729798263491578*^9}},ExpressionUUID->"ed0c0833-92da-47c1-8f6d-\
d072ddce7e84"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"kalmanUpdate", ",", "kalFit"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["kalmanUpdate",
       Background->RGBColor[1, 1, 0]], "[", "P\[CapitalZeta]_", "]"}], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Xi]_", ",", "P_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Zeta]_", ",", "a_"}], "}"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"D", ",", "KT", ",", "K", ",", "L"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"D", "=", 
        RowBox[{"P\[CapitalZeta]", "+", 
         RowBox[{"a", ".", "P", ".", 
          RowBox[{"a", "\[Transpose]"}]}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"KT", "=", 
        RowBox[{"LinearSolve", "[", 
         RowBox[{"D", ",", 
          RowBox[{"a", ".", "P"}]}], "]"}]}], ";", 
       RowBox[{"K", "=", 
        RowBox[{"KT", "\[Transpose]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L", "=", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", 
          RowBox[{"Length", "[", "P", "]"}], "]"}], "-", 
         RowBox[{"K", ".", "a"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Xi]", "+", 
          RowBox[{"K", ".", 
           RowBox[{"(", 
            RowBox[{"\[Zeta]", "-", 
             RowBox[{"a", ".", "\[Xi]"}]}], ")"}]}]}], ",", 
         RowBox[{"L", ".", "P"}]}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"kalFit", "[", 
     RowBox[{"\[Sigma]\[Zeta]2_", ",", "\[Sigma]\[Xi]2_"}], "]"}], "[", 
    RowBox[{"order_", ",", "trainingSet_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"xs", "=", 
        RowBox[{
        "trainingSet", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], ",", 
       RowBox[{"ys", "=", 
        RowBox[{
        "trainingSet", "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Xi]0", "=", 
          RowBox[{"List", "/@", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"order", "+", "1"}]}], "]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"P0", "=", 
          RowBox[{"\[Sigma]\[Xi]2", "*", 
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"order", "+", "1"}], "]"}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Fold", "[", 
        RowBox[{
         RowBox[{"kalmanUpdate", "[", 
          RowBox[{"\[Sigma]\[Zeta]2", "*", 
           RowBox[{"IdentityMatrix", "[", "1", "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"\[Xi]0", ",", "P0"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"List", "/@", "ys"}], ",", 
            RowBox[{"List", "/@", 
             RowBox[{"partialsFn", "[", 
              RowBox[{"order", ",", "xs"}], "]"}]}]}], "}"}], 
          "\[Transpose]"}]}], "]"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.727913455235773*^9, 3.727913522283977*^9}, 
   3.727913696290469*^9, {3.727913736480159*^9, 3.727913844376683*^9}, {
   3.727917392534089*^9, 3.727917436971686*^9}, {3.727917505035927*^9, 
   3.727917528745805*^9}, {3.727917565263034*^9, 3.727917689094305*^9}, {
   3.727917745897264*^9, 3.7279177578567343`*^9}, {3.727917794603846*^9, 
   3.727917832787274*^9}, 3.727917880971725*^9, {3.727917936171432*^9, 
   3.727918023146969*^9}, {3.727918153331463*^9, 3.727918275269082*^9}, {
   3.727918376669937*^9, 3.727918414049831*^9}, {3.727918508981811*^9, 
   3.727918529673747*^9}, {3.727918590013206*^9, 3.727918649485745*^9}, {
   3.727918701604838*^9, 3.727918748563583*^9}, {3.727919051486678*^9, 
   3.727919074926166*^9}, {3.7279191082942677`*^9, 3.7279191590963287`*^9}, {
   3.7279192864475107`*^9, 3.727919323121303*^9}, {3.727919354826254*^9, 
   3.727919508497794*^9}, {3.727919541340006*^9, 3.727919683877797*^9}, {
   3.727920118873128*^9, 3.7279202093625507`*^9}, {3.727921237681443*^9, 
   3.727921317118623*^9}, {3.7279213549874077`*^9, 3.727921369577837*^9}, {
   3.727921727194334*^9, 3.727921729479971*^9}, {3.727921764122665*^9, 
   3.727921833477203*^9}, {3.72792411169958*^9, 3.727924167792699*^9}, {
   3.72792422895082*^9, 3.727924231141032*^9}, {3.72792438065587*^9, 
   3.7279243990664377`*^9}, {3.727925449102767*^9, 3.7279255631525297`*^9}, {
   3.72792560570716*^9, 3.7279256061694813`*^9}, {3.7279681913170443`*^9, 
   3.727968211031343*^9}, 3.728167450131751*^9, {3.72816963059844*^9, 
   3.728169630606372*^9}, {3.728950036924389*^9, 3.728950066472802*^9}, {
   3.729165737473629*^9, 3.729165758394801*^9}, {3.729174264764344*^9, 
   3.729174321096059*^9}, {3.729638286474793*^9, 3.7296382904326887`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"3117ef4d-d3f2-49c6-a0e0-edcb55974bac"]
}, Closed]],

Cell[CellGroupData[{

Cell["See All Three", "Subsection",
 CellChangeTimes->{{3.729094292024653*^9, 
  3.729094294711062*^9}},ExpressionUUID->"79c27655-ef70-49e0-840d-\
4cd0f992f88f"],

Cell[TextData[{
 "The following interactive demonstration shows ",
 Cell[BoxData[
  FormBox["mleFit", TraditionalForm]], "Code",ExpressionUUID->
  "4cb84eca-55a6-402e-87b6-60cd967b9f5b"],
 " (normal equations), ",
 Cell[BoxData[
  FormBox["rlsFit", TraditionalForm]], "Code",ExpressionUUID->
  "32d5863c-f1e1-40c4-9b5d-481484f253d0"],
 " (recurrent least squares), and ",
 Cell[BoxData[
  FormBox["kalFit", TraditionalForm]], "Code",ExpressionUUID->
  "1a3bf1c2-c6f4-4897-8186-d26fb9573d41"],
 " (Kalman folding) on Bishop\[CloseCurlyQuote]s training set.\n\nWhen the \
a-priori information matrix in RLS is ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"-", "6"}]], TraditionalForm]],ExpressionUUID->
  "f6fa54ad-2bf3-49fc-8f51-d6ac554275e8"],
 ", and when the a-priori covariance of the a-priori estimate in KAL is ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "6"], TraditionalForm]],ExpressionUUID->
  "b5f6a42b-8214-43eb-b532-b23cb54f2a71"],
 ", both RLS and KAL produce regularized fits. In contrast, the MLE over-fits \
a ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["9", "th"], TraditionalForm]],ExpressionUUID->
  "df6e2ce4-ee21-4852-9304-c5350f92ab2f"],
 "-order polynomial by interpolating (going through) every data point because \
a ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["9", "th"], TraditionalForm]],ExpressionUUID->
  "6ea035c7-661b-4906-ba49-314a63a809b6"],
 "-order polynomial fits the ten data points exactly: the normal equations \
are neither overdetermined nor underdetermined at order nine, but \
accidentally constitute an exactly solvable linear system.\n\nIncreasing ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "log\[CapitalLambda]"}], TraditionalForm]], "Code",
  ExpressionUUID->"61902d13-4626-4d5f-8830-5b0bd423956c"],
 " ",
 StyleBox["decreases",
  FontSlant->"Italic"],
 " the (magnitude of the) a-priori information matrix in RLS, meaning that we \
have less Bayesian belief in the a-priori estimate of the unknown parameters. \
Increasing ",
 Cell[BoxData[
  FormBox["log\[Sigma]\[Xi]2", TraditionalForm]], "Code",ExpressionUUID->
  "c17d11ea-e11e-4a64-bf08-fb5cc88187e6"],
 " ",
 StyleBox["increases",
  FontSlant->"Italic"],
 " the a-priori covariance of the estimate in KAL and similarly decreases \
belief in the a-priori estimate. They eventually both over-fit the data \
completely and align with MLE. Later, we show that MAP can be similarly made \
to over-fit. Run the polynomial order up to nine, then ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "log\[CapitalLambda]"}], TraditionalForm]], "Code",
  ExpressionUUID->"a0f39e4c-2db3-415b-a534-44240dd6e6ec"],
 " and ",
 Cell[BoxData[
  FormBox["log\[Sigma]\[Xi]2", TraditionalForm]], "Code",ExpressionUUID->
  "2b542e52-8384-4059-9874-7f53c5d64849"],
 " all the way to the right, to their maximum values. "
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAWIQfaCLT7/k2GvHKzx3bEH0PolaVxBt5iYdDKIDOt0i
QLTdyT4wbSF2ZVE7kK4JkFwKojU5zN52AGnhJ8veg+jfpW1/QbSWyVvRTiBd
yTJPBkTf2tCjDaJ3tOy1A9GFa5lCQbSdaHw6iL4zUToLRHNflq0G0WmLzrWC
aGYVSfsukPsaTcH0q4NfJoDollU3F4Douicbzx4E0ge2dt4C0dPyd545AqRP
74XQq9knBr4G0gnbZdJAdN3uS7eYj792nByi/wxEP5vGuUoYSCtPzF4NomXs
pfdePAG058a9syB63amdhVeBdNM7CK0ib7AORN/0g9DXleO/gmgB/g4wrXC2
7cw1IJ39EUKr+rL8uAmk5ZQO/wLRKmKrY+8B6VNaG+NAtNvV2U93n3zt+HXS
p08g+t2N5T9AtM0tCG3hxDiF7dRrx6p6bTDNG7J9Fohe5WW3CEQDAASlAHc=

  "],ExpressionUUID->"8010689f-309c-4f3e-bf23-5b34674387a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", 
     RowBox[{"(*", " ", 
      RowBox[{"gensym", ":", " ", 
       RowBox[{"fresh", " ", "variable", " ", "name"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"terms", "=", 
          RowBox[{"symbolicPowers", "[", 
           RowBox[{"x", ",", "\[CapitalMu]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"cs", "=", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "\[CapitalMu]", "]"}], "/@", 
           RowBox[{"List", "/@", 
            RowBox[{
            "bts", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"recurrent", "=", 
            RowBox[{"Quiet", "@", 
             RowBox[{
              RowBox[{"rlsFit", "[", 
               SuperscriptBox["10", 
                RowBox[{"-", "log\[CapitalLambda]0"}]], "]"}], "[", 
              RowBox[{"\[CapitalMu]", ",", "bts"}], "]"}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"normal", "=", 
            RowBox[{"mleFit", "[", 
             RowBox[{"\[CapitalMu]", ",", "bts"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"kalman", "=", 
            RowBox[{
             RowBox[{"kalFit", "[", 
              RowBox[{
               SuperscriptBox["bishopFakeSigma", "2"], ",", 
               SuperscriptBox["10", "log\[Sigma]\[Xi]2"]}], "]"}], "[", 
             RowBox[{"\[CapitalMu]", ",", "bts"}], "]"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"rlsFn", "=", 
              RowBox[{
               RowBox[{"{", "terms", "}"}], ".", 
               RowBox[{
               "recurrent", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"mleFn", "=", 
              RowBox[{"terms", ".", "normal"}]}], ",", "\[IndentingNewLine]", 
             
             RowBox[{"kalFn", "=", 
              RowBox[{
               RowBox[{"{", "terms", "}"}], ".", 
               RowBox[{
               "kalman", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"lp", "=", 
               RowBox[{"ListPlot", "[", 
                RowBox[{
                 RowBox[{"bts", "\[Transpose]"}], ",", "\[IndentingNewLine]", 
                 
                 RowBox[{"PlotMarkers", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Graphics", "@", 
                    RowBox[{"{", 
                    RowBox[{"Blue", ",", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}], 
                    "}"}]}], ",", ".05"}], "}"}]}]}], "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"showlist", "=", 
                 RowBox[{"{", 
                  RowBox[{"lp", ",", 
                   RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{"2.", "\[Pi]", " ", "x"}], "]"}],
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0.", ",", "1."}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Thick", ",", 
                    StyleBox["Green",
                    Background->RGBColor[1, 1, 0]]}], "}"}]}]}], "]"}]}], 
                  "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{"rlsQ", ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"showlist", ",", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox["rlsFn",
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    StyleBox["Purple",
                    Background->RGBColor[1, 1, 0]], "}"}]}]}], "]"}]}], 
                   "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{"mleQ", ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"showlist", ",", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox["mleFn",
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    StyleBox["Orange",
                    Background->RGBColor[1, 1, 0]], "}"}]}]}], "]"}]}], 
                   "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{"kalQ", ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"showlist", ",", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox["kalFn",
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    StyleBox["Cyan",
                    Background->RGBColor[1, 1, 0]], "}"}]}]}], "]"}]}], 
                   "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Quiet", "@", 
                 RowBox[{"Show", "[", 
                  RowBox[{"showlist", ",", 
                   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                   RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<x\>\"", ",", "\"\<t\>\""}], "}"}]}]}], 
                  "]"}]}]}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Button", "[", 
            RowBox[{"\"\<RESET\>\"", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalMu]", "=", "9"}], ";", 
                RowBox[{"log\[CapitalLambda]0", "=", "3"}], ";", 
                RowBox[{"log\[Sigma]\[Xi]2", "=", "3"}]}], ")"}], "&"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"rlsQ", ",", "True", ",", "\"\<RLS\>\""}], "}"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"kalQ", ",", "True", ",", "\"\<KAL\>\""}], "}"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"mleQ", ",", "True", ",", "\"\<MLE\>\""}], "}"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}]}], "}"}],
          "}"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\[CapitalMu]", ",", "9", ",", "\"\<polynomial order\>\""}], "}"}],
           ",", "0", ",", "16", ",", "1", ",", 
          RowBox[{"Appearance", "\[Rule]", 
           RowBox[{"{", "\"\<Labeled\>\"", "}"}]}]}], "}"}], "]"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "log\[CapitalLambda]0", ",", "3", ",", 
            "\"\<-log a-priori info (RLS)\>\""}], "}"}], ",", "0", ",", "16", 
          ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
        "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "log\[Sigma]\[Xi]2", ",", "3", ",", 
            "\"\<log a-priori cov (KAL)\>\""}], "}"}], ",", "0", ",", "16", 
          ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
        "]"}], "}"}]}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727884681931381*^9, 3.7278848244947367`*^9}, 
   3.727884861217602*^9, {3.727884975910451*^9, 3.7278849940673532`*^9}, {
   3.727885103521431*^9, 3.727885154698123*^9}, {3.72788520225443*^9, 
   3.727885279820177*^9}, {3.727885496115718*^9, 3.727885517688189*^9}, {
   3.72788559395383*^9, 3.727885598972475*^9}, {3.7278856296542664`*^9, 
   3.727885630876935*^9}, {3.727885695972756*^9, 3.727885696864628*^9}, {
   3.727886633660364*^9, 3.72788671287046*^9}, {3.727886975364171*^9, 
   3.727886975439041*^9}, {3.727903476653379*^9, 3.7279034819231358`*^9}, {
   3.727903531862627*^9, 3.727903539245574*^9}, 3.727913149489944*^9, {
   3.727915429732944*^9, 3.7279154437948627`*^9}, {3.727915750998211*^9, 
   3.7279158447033873`*^9}, {3.7279213832695303`*^9, 3.72792149154887*^9}, {
   3.727921523149373*^9, 3.72792161270367*^9}, {3.72792165300301*^9, 
   3.727921654632832*^9}, {3.727921753282296*^9, 3.727921753360197*^9}, {
   3.727924008558401*^9, 3.727924045018003*^9}, {3.727924293814445*^9, 
   3.727924370827516*^9}, 3.727965590613636*^9, {3.7279686551525917`*^9, 
   3.727968670349081*^9}, {3.7279689406605043`*^9, 3.727969019631563*^9}, {
   3.727970883056108*^9, 3.727970945128386*^9}, {3.727971005813472*^9, 
   3.727971023734253*^9}, {3.727990640753121*^9, 3.727990674786282*^9}, {
   3.727990711779483*^9, 3.727990808626033*^9}, {3.727991307012423*^9, 
   3.727991307022031*^9}, {3.7279932412769613`*^9, 3.7279932949280367`*^9}, {
   3.7279933910397243`*^9, 3.727993398358789*^9}, {3.727993778490755*^9, 
   3.72799379332897*^9}, {3.727993826040863*^9, 3.7279938751552763`*^9}, {
   3.727993956673335*^9, 3.727993958184173*^9}, 3.727994128012043*^9, {
   3.7280354067714148`*^9, 3.7280354258611927`*^9}, {3.728035634299762*^9, 
   3.728035732029833*^9}, {3.72803585641748*^9, 3.728035906176405*^9}, {
   3.728038924314391*^9, 3.728039041653799*^9}, {3.728039077026232*^9, 
   3.72803913265169*^9}, {3.728039194847865*^9, 3.728039320044661*^9}, {
   3.728044256958378*^9, 3.728044343151896*^9}, {3.728044393583234*^9, 
   3.728044466540698*^9}, 3.7280447095836163`*^9, {3.728044856722988*^9, 
   3.728044959527645*^9}, {3.728044995179022*^9, 3.728044998104682*^9}, {
   3.728045028753289*^9, 3.728045063548128*^9}, {3.728045464570526*^9, 
   3.728045476328084*^9}, {3.728045812340419*^9, 3.728045836978776*^9}, {
   3.7280461335391397`*^9, 3.728046355530389*^9}, {3.728046392282709*^9, 
   3.728046397281275*^9}, {3.728046429888109*^9, 3.728046434285967*^9}, {
   3.728046509047914*^9, 3.728046577986915*^9}, {3.728048625582951*^9, 
   3.728048658147644*^9}, {3.728048704639155*^9, 3.7280487209829884`*^9}, {
   3.728048763333255*^9, 3.728048783520523*^9}, 3.728048849900649*^9, {
   3.728048881350296*^9, 3.7280488887365723`*^9}, {3.7280489358794527`*^9, 
   3.728048947834031*^9}, {3.7280492952517767`*^9, 3.728049427179392*^9}, {
   3.728049506853256*^9, 3.7280496162697783`*^9}, {3.728049702949929*^9, 
   3.728049708359687*^9}, {3.7280497561537037`*^9, 3.728049819625853*^9}, {
   3.728049930158724*^9, 3.728049930640306*^9}, {3.728089854705469*^9, 
   3.728089855621914*^9}, {3.728090725808407*^9, 3.7280907258189697`*^9}, {
   3.728169349695664*^9, 3.728169349720875*^9}, {3.7281694009815397`*^9, 
   3.7281694178910418`*^9}, {3.728169511786654*^9, 3.7281695237214537`*^9}, {
   3.728169612536371*^9, 3.728169630625689*^9}, 3.72825398263583*^9, {
   3.729093231337966*^9, 3.729093231816064*^9}, {3.729119276943676*^9, 
   3.729119308121522*^9}, {3.7291200359185753`*^9, 3.729120071022612*^9}, {
   3.729120620963278*^9, 3.729120653409905*^9}, {3.729120691319798*^9, 
   3.729120728301819*^9}, {3.729173389813801*^9, 3.729173389829308*^9}, {
   3.729173873512885*^9, 3.729173873529933*^9}, {3.7291744772483892`*^9, 
   3.7291744951446943`*^9}, {3.7291745287743883`*^9, 3.729174572901572*^9}, {
   3.729175490403535*^9, 3.7291755161637173`*^9}, {3.729175633605082*^9, 
   3.729175638831461*^9}, {3.729183394512477*^9, 3.729183394521019*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"3870cf8d-74e6-419c-91a8-4f7425e2e6cf"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`kalQ$$ = 
    True, $CellContext`log\[CapitalLambda]0$$ = 
    3, $CellContext`log\[Sigma]\[Xi]2$$ = 3, $CellContext`mleQ$$ = 
    True, $CellContext`rlsQ$$ = True, $CellContext`\[CapitalMu]$$ = 9, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`rlsQ$$], True, "RLS"}, {True, False}}, {{
       Hold[$CellContext`kalQ$$], True, "KAL"}, {True, False}}, {{
       Hold[$CellContext`mleQ$$], True, "MLE"}, {True, False}}, {{
       Hold[$CellContext`\[CapitalMu]$$], 9, "polynomial order"}, 0, 16, 1}, {{
       Hold[$CellContext`log\[CapitalLambda]0$$], 3, 
       "-log a-priori info (RLS)"}, 0, 16}, {{
       Hold[$CellContext`log\[Sigma]\[Xi]2$$], 3, "log a-priori cov (KAL)"}, 
      0, 16}, {
      Hold[
       Grid[{{
          Grid[{{
             Button[
             "RESET", ($CellContext`\[CapitalMu]$$ = 
               9; $CellContext`log\[CapitalLambda]0$$ = 
               3; $CellContext`log\[Sigma]\[Xi]2$$ = 3)& ], 
             Manipulate`Place[1], 
             Manipulate`Place[2], 
             Manipulate`Place[3]}}]}, {
          Manipulate`Place[4]}, {
          Manipulate`Place[5]}, {
          Manipulate`Place[6]}}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {450., {141., 147.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`rlsQ$3133$$ = False, $CellContext`kalQ$3134$$ = 
    False, $CellContext`mleQ$3135$$ = 
    False, $CellContext`\[CapitalMu]$3136$$ = 
    0, $CellContext`log\[CapitalLambda]0$3137$$ = 
    0, $CellContext`log\[Sigma]\[Xi]2$3138$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`kalQ$$ = 
        True, $CellContext`log\[CapitalLambda]0$$ = 
        3, $CellContext`log\[Sigma]\[Xi]2$$ = 3, $CellContext`mleQ$$ = 
        True, $CellContext`rlsQ$$ = True, $CellContext`\[CapitalMu]$$ = 9}, 
      "ControllerVariables" :> {
        Hold[$CellContext`rlsQ$$, $CellContext`rlsQ$3133$$, False], 
        Hold[$CellContext`kalQ$$, $CellContext`kalQ$3134$$, False], 
        Hold[$CellContext`mleQ$$, $CellContext`mleQ$3135$$, False], 
        Hold[$CellContext`\[CapitalMu]$$, $CellContext`\[CapitalMu]$3136$$, 
         0], 
        Hold[$CellContext`log\[CapitalLambda]0$$, $CellContext`log\
\[CapitalLambda]0$3137$$, 0], 
        Hold[$CellContext`log\[Sigma]\[Xi]2$$, \
$CellContext`log\[Sigma]\[Xi]2$3138$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Module[{$CellContext`x$}, 
        With[{$CellContext`terms$ = \
$CellContext`symbolicPowers[$CellContext`x$, $CellContext`\[CapitalMu]$$], \
$CellContext`cs$ = Map[
            $CellContext`\[Phi][$CellContext`\[CapitalMu]$$], 
            Map[List, 
             Part[$CellContext`bts, 1]]]}, 
         With[{$CellContext`recurrent$ = Quiet[
             $CellContext`rlsFit[
             10^(-$CellContext`log\[CapitalLambda]0$$)][$CellContext`\
\[CapitalMu]$$, $CellContext`bts]], $CellContext`normal$ = \
$CellContext`mleFit[$CellContext`\[CapitalMu]$$, $CellContext`bts], \
$CellContext`kalman$ = $CellContext`kalFit[$CellContext`bishopFakeSigma^2, 
             10^$CellContext`log\[Sigma]\[Xi]2$$][$CellContext`\[CapitalMu]$$,\
 $CellContext`bts]}, 
          With[{$CellContext`rlsFn$ = Dot[{$CellContext`terms$}, 
              Part[$CellContext`recurrent$, 1]], $CellContext`mleFn$ = 
            Dot[$CellContext`terms$, $CellContext`normal$], \
$CellContext`kalFn$ = Dot[{$CellContext`terms$}, 
              Part[$CellContext`kalman$, 1]]}, 
           With[{$CellContext`lp$ = ListPlot[
               Transpose[$CellContext`bts], PlotMarkers -> {
                 Graphics[{Blue, 
                   Circle[{0, 0}, 1]}], 0.05}]}, 
            Module[{$CellContext`showlist$ = {$CellContext`lp$, 
                Plot[
                 Sin[2. Pi $CellContext`x$], {$CellContext`x$, 0., 1.}, 
                 PlotStyle -> {Thick, Green}]}}, If[$CellContext`rlsQ$$, 
               AppendTo[$CellContext`showlist$, 
                
                Plot[$CellContext`rlsFn$, {$CellContext`x$, 0, 1}, 
                 PlotStyle -> {Purple}]]]; If[$CellContext`mleQ$$, 
               AppendTo[$CellContext`showlist$, 
                
                Plot[$CellContext`mleFn$, {$CellContext`x$, 0, 1}, 
                 PlotStyle -> {Orange}]]]; If[$CellContext`kalQ$$, 
               AppendTo[$CellContext`showlist$, 
                
                Plot[$CellContext`kalFn$, {$CellContext`x$, 0, 1}, 
                 PlotStyle -> {Cyan}]]]; Quiet[
               
               Show[$CellContext`showlist$, Frame -> True, 
                FrameLabel -> {"x", "t"}]]]]]]]], 
      "Specifications" :> {{{$CellContext`rlsQ$$, True, "RLS"}, {True, False},
          ControlPlacement -> 1}, {{$CellContext`kalQ$$, True, "KAL"}, {
         True, False}, ControlPlacement -> 
         2}, {{$CellContext`mleQ$$, True, "MLE"}, {True, False}, 
         ControlPlacement -> 
         3}, {{$CellContext`\[CapitalMu]$$, 9, "polynomial order"}, 0, 16, 1, 
         Appearance -> {"Labeled"}, ControlPlacement -> 
         4}, {{$CellContext`log\[CapitalLambda]0$$, 3, 
          "-log a-priori info (RLS)"}, 0, 16, Appearance -> "Labeled", 
         ControlPlacement -> 
         5}, {{$CellContext`log\[Sigma]\[Xi]2$$, 3, "log a-priori cov (KAL)"},
          0, 16, Appearance -> "Labeled", ControlPlacement -> 6}, 
        Grid[{{
           Grid[{{
              Button[
              "RESET", ($CellContext`\[CapitalMu]$$ = 
                9; $CellContext`log\[CapitalLambda]0$$ = 
                3; $CellContext`log\[Sigma]\[Xi]2$$ = 3)& ], 
              Manipulate`Place[1], 
              Manipulate`Place[2], 
              Manipulate`Place[3]}}]}, {
           Manipulate`Place[4]}, {
           Manipulate`Place[5]}, {
           Manipulate`Place[6]}}]}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{505., {244., 251.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.729120694893572*^9, 3.729120729239387*^9, 3.729121073140068*^9, 
   3.729121111649043*^9, 3.729172308359383*^9, 3.729174504534432*^9, 
   3.729174541120797*^9, 3.729174577438936*^9, 3.7291756912669277`*^9, 
   3.729175878038041*^9, 3.729183413008506*^9, {3.729183448351598*^9, 
   3.729183461260701*^9}, 3.7292559380417747`*^9, 3.7295523020803957`*^9, 
   3.729557876588092*^9, 3.729629838965455*^9, 3.729634637046328*^9, 
   3.7296428728365097`*^9, 3.729642909628141*^9, 3.729643939586529*^9, 
   3.72964718593789*^9, 3.7296832025410233`*^9, 3.729778155948976*^9, 
   3.7297792341062117`*^9, 3.729779281194851*^9, 3.729894700523287*^9, 
   3.7298960065802193`*^9, 3.729896153198247*^9, 3.729897296057836*^9, 
   3.73014035550076*^9, 3.7302402723294153`*^9, 3.730380091798254*^9, 
   3.730385711704207*^9, 3.73038574265854*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"bc49a1ba-e186-43be-8f8a-cf7765bc67f4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Renormalizing RLS", "Subchapter",
 CellChangeTimes->{{3.729092768444851*^9, 3.729092782412208*^9}, {
  3.729191699611701*^9, 3.729191706169241*^9}, {3.729798432235529*^9, 
  3.7297984335852747`*^9}},ExpressionUUID->"ec2835d0-1e43-4366-9376-\
c0a251fa559b"],

Cell[TextData[{
 "When the observation noise ",
 Cell[BoxData[
  FormBox["\[CapitalZeta]", TraditionalForm]],ExpressionUUID->
  "cee2b76b-94f4-4d39-af2d-0579b6076db6"],
 " is unity, KAL coincides with RLS. In the demonstration below, a-priori \
information ",
 Cell[BoxData[
  FormBox["\[CapitalLambda]", TraditionalForm]],ExpressionUUID->
  "64b2c5a6-569c-42ea-9d39-1c5b1e4d462c"],
 " in RLS is set always to be the inverse of a-priori estimate covariance ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]],ExpressionUUID->
  "0c6f3956-3d95-4cf6-a9d1-9ca1c9fcb773"],
 " in KAL; RLS and KAL will have the same belief in the a-priori estimate of \
the unknown parameters. Vary the observation noise independently to see KAL \
and RLS coincide when it\[CloseCurlyQuote]s zero.\n\nAs observation noise \
decreases, the solutions believe the observations more and the solution \
over-fits. As the a-priori covariance decreases, the solution believes the \
a-priori estimates more and the solution regularizes."
}], "Text",
 CellChangeTimes->{{3.729093282411186*^9, 3.729093313683037*^9}, {
   3.729117959440587*^9, 3.729117962326047*^9}, {3.7291180366585493`*^9, 
   3.7291181529404573`*^9}, {3.729120823468717*^9, 3.7291208319067087`*^9}, {
   3.729120924129122*^9, 3.7291209334511013`*^9}, {3.7291612546720057`*^9, 
   3.7291614312105837`*^9}, {3.729161481669347*^9, 3.729161524300392*^9}, {
   3.729165948834399*^9, 3.7291660151159143`*^9}, 3.7291746302654448`*^9, 
   3.729174660835752*^9, {3.729182703813655*^9, 3.7291827056457043`*^9}, {
   3.729645533347239*^9, 3.729645535008542*^9}, {3.72968376925354*^9, 
   3.729683796986575*^9}, {3.72968383611133*^9, 3.729683840551021*^9}, {
   3.7296873492799683`*^9, 3.7296874288640547`*^9}, {3.729798450427746*^9, 
   3.729798491548514*^9}},ExpressionUUID->"d78bc809-65a9-43d3-b5fa-\
adc52a5bb0e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"terms", "=", 
          RowBox[{"symbolicPowers", "[", 
           RowBox[{"x", ",", "\[CapitalMu]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"cs", "=", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "\[CapitalMu]", "]"}], "/@", 
           RowBox[{"List", "/@", 
            RowBox[{
            "bts", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"rls", "=", 
            RowBox[{"Quiet", "@", 
             RowBox[{
              RowBox[{"rlsFit", "[", 
               SuperscriptBox["10", 
                RowBox[{
                 RowBox[{"-", "2"}], "log\[Sigma]\[Xi]"}]], "]"}], "[", 
              RowBox[{"\[CapitalMu]", ",", "bts"}], "]"}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"kalman", "=", 
            RowBox[{
             RowBox[{"kalFit", "[", 
              RowBox[{
               SuperscriptBox["10", 
                RowBox[{"2", "log\[Sigma]\[Zeta]"}]], ",", 
               SuperscriptBox["10", 
                RowBox[{"2", "log\[Sigma]\[Xi]"}]]}], "]"}], "[", 
             RowBox[{"\[CapitalMu]", ",", "bts"}], "]"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"rlsFn", "=", 
              RowBox[{
               RowBox[{"{", "terms", "}"}], ".", 
               RowBox[{
               "rls", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"kalFn", "=", 
              RowBox[{
               RowBox[{"{", "terms", "}"}], ".", 
               RowBox[{
               "kalman", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"lp", "=", 
               RowBox[{"ListPlot", "[", 
                RowBox[{
                 RowBox[{"bts", "\[Transpose]"}], ",", "\[IndentingNewLine]", 
                 
                 RowBox[{"PlotMarkers", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Graphics", "@", 
                    RowBox[{"{", 
                    RowBox[{"Blue", ",", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}], 
                    "}"}]}], ",", ".05"}], "}"}]}]}], "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"showlist", "=", 
                 RowBox[{"{", 
                  RowBox[{"lp", ",", 
                   RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{"2.", "\[Pi]", " ", "x"}], "]"}],
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0.", ",", "1."}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Thick", ",", 
                    StyleBox["Green",
                    Background->RGBColor[1, 1, 0]]}], "}"}]}]}], "]"}]}], 
                  "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{"rlsQ", ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"showlist", ",", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox["rlsFn",
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    StyleBox["Purple",
                    Background->RGBColor[1, 1, 0]], "}"}]}]}], "]"}]}], 
                   "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{"kalQ", ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"showlist", ",", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox["kalFn",
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    StyleBox["Cyan",
                    Background->RGBColor[1, 1, 0]], "}"}]}]}], "]"}]}], 
                   "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Quiet", "@", 
                 RowBox[{"Show", "[", 
                  RowBox[{"showlist", ",", 
                   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                   RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<x\>\"", ",", "\"\<t\>\""}], "}"}]}]}], 
                  "]"}]}]}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Grid", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Button", "[", 
             RowBox[{"\"\<RESET\>\"", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"log\[Sigma]\[Zeta]", "=", "0.0"}], ";", 
                 RowBox[{"log\[Sigma]\[Xi]", "=", "1.5"}], ";", 
                 RowBox[{"\[CapitalMu]", "=", "9"}]}], ")"}], "&"}]}], "]"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"Control", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"rlsQ", ",", "True", ",", "\"\<RLS\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Control", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"kalQ", ",", "True", ",", "\"\<KAL\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}]}], 
           "}"}], "}"}], "]"}], ",", "\"\<\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\[CapitalMu]", ",", "9", ",", "\"\<polynomial order\>\""}], 
            "}"}], ",", "0", ",", "16", ",", "1", ",", 
           RowBox[{"Appearance", "\[Rule]", 
            RowBox[{"{", "\"\<Labeled\>\"", "}"}]}]}], "}"}], "]"}], ",", 
        "\"\<\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "log\[Sigma]\[Xi]", ",", "1.5", ",", 
            "\"\<log \!\(\*SqrtBox[\(P\)]\) (KAL) = (-log \!\(\*SqrtBox[\(\
\[CapitalLambda]\)]\)) (RLS) \>\""}], "}"}], ",", 
          RowBox[{"-", "3"}], ",", "8", ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
        "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "log\[Sigma]\[Zeta]", ",", "0.0", ",", 
            "\"\<log \!\(\*SqrtBox[\(\[CapitalZeta]\)]\) (KAL)\>\""}], "}"}], 
          ",", 
          RowBox[{"-", "6"}], ",", "3", ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
        "]"}], "}"}]}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727884681931381*^9, 3.7278848244947367`*^9}, 
   3.727884861217602*^9, {3.727884975910451*^9, 3.7278849940673532`*^9}, {
   3.727885103521431*^9, 3.727885154698123*^9}, {3.72788520225443*^9, 
   3.727885279820177*^9}, {3.727885496115718*^9, 3.727885517688189*^9}, {
   3.72788559395383*^9, 3.727885598972475*^9}, {3.7278856296542664`*^9, 
   3.727885630876935*^9}, {3.727885695972756*^9, 3.727885696864628*^9}, {
   3.727886633660364*^9, 3.72788671287046*^9}, {3.727886975364171*^9, 
   3.727886975439041*^9}, {3.727903476653379*^9, 3.7279034819231358`*^9}, {
   3.727903531862627*^9, 3.727903539245574*^9}, 3.727913149489944*^9, {
   3.727915429732944*^9, 3.7279154437948627`*^9}, {3.727915750998211*^9, 
   3.7279158447033873`*^9}, {3.7279213832695303`*^9, 3.72792149154887*^9}, {
   3.727921523149373*^9, 3.72792161270367*^9}, {3.72792165300301*^9, 
   3.727921654632832*^9}, {3.727921753282296*^9, 3.727921753360197*^9}, {
   3.727924008558401*^9, 3.727924045018003*^9}, {3.727924293814445*^9, 
   3.727924370827516*^9}, 3.727965590613636*^9, {3.7279686551525917`*^9, 
   3.727968670349081*^9}, {3.7279689406605043`*^9, 3.727969019631563*^9}, {
   3.727970883056108*^9, 3.727970945128386*^9}, {3.727971005813472*^9, 
   3.727971023734253*^9}, {3.727990640753121*^9, 3.727990674786282*^9}, {
   3.727990711779483*^9, 3.727990808626033*^9}, {3.727991307012423*^9, 
   3.727991307022031*^9}, {3.7279932412769613`*^9, 3.7279932949280367`*^9}, {
   3.7279933910397243`*^9, 3.727993398358789*^9}, {3.727993778490755*^9, 
   3.72799379332897*^9}, {3.727993826040863*^9, 3.7279938751552763`*^9}, {
   3.727993956673335*^9, 3.727993958184173*^9}, 3.727994128012043*^9, {
   3.7280354067714148`*^9, 3.7280354258611927`*^9}, {3.728035634299762*^9, 
   3.728035732029833*^9}, {3.72803585641748*^9, 3.728035906176405*^9}, {
   3.728038924314391*^9, 3.728039041653799*^9}, {3.728039077026232*^9, 
   3.72803913265169*^9}, {3.728039194847865*^9, 3.728039320044661*^9}, {
   3.728044256958378*^9, 3.728044343151896*^9}, {3.728044393583234*^9, 
   3.728044466540698*^9}, 3.7280447095836163`*^9, {3.728044856722988*^9, 
   3.728044959527645*^9}, {3.728044995179022*^9, 3.728044998104682*^9}, {
   3.728045028753289*^9, 3.728045063548128*^9}, {3.728045464570526*^9, 
   3.728045476328084*^9}, {3.728045812340419*^9, 3.728045836978776*^9}, {
   3.7280461335391397`*^9, 3.728046355530389*^9}, {3.728046392282709*^9, 
   3.728046397281275*^9}, {3.728046429888109*^9, 3.728046434285967*^9}, {
   3.728046509047914*^9, 3.728046577986915*^9}, {3.728048625582951*^9, 
   3.728048658147644*^9}, {3.728048704639155*^9, 3.7280487209829884`*^9}, {
   3.728048763333255*^9, 3.728048783520523*^9}, 3.728048849900649*^9, {
   3.728048881350296*^9, 3.7280488887365723`*^9}, {3.7280489358794527`*^9, 
   3.728048947834031*^9}, {3.7280492952517767`*^9, 3.728049427179392*^9}, {
   3.728049506853256*^9, 3.7280496162697783`*^9}, {3.728049702949929*^9, 
   3.728049708359687*^9}, {3.7280497561537037`*^9, 3.728049819625853*^9}, {
   3.728049930158724*^9, 3.728049930640306*^9}, {3.728089854705469*^9, 
   3.728089855621914*^9}, {3.728090725808407*^9, 3.7280907258189697`*^9}, {
   3.728169349695664*^9, 3.728169349720875*^9}, {3.7281694009815397`*^9, 
   3.7281694178910418`*^9}, {3.728169511786654*^9, 3.7281695237214537`*^9}, {
   3.728169612536371*^9, 3.728169630625689*^9}, 3.72825398263583*^9, {
   3.7290928993104963`*^9, 3.7290929198661003`*^9}, {3.729093017541959*^9, 
   3.7290930188886843`*^9}, {3.7290930762770233`*^9, 3.729093076719734*^9}, {
   3.72909336384054*^9, 3.729093404015414*^9}, {3.729095580798506*^9, 
   3.7290957047591*^9}, {3.729095766580648*^9, 3.7290957771880827`*^9}, {
   3.729107615295549*^9, 3.729107649857699*^9}, {3.729107694037426*^9, 
   3.729107743875201*^9}, {3.7291077762521057`*^9, 3.7291078031246223`*^9}, {
   3.729118170017755*^9, 3.729118205624216*^9}, {3.729118574833902*^9, 
   3.729118716465946*^9}, 3.729118800635138*^9, {3.7291198853367987`*^9, 
   3.729119917193569*^9}, {3.729119958982697*^9, 3.729119965955413*^9}, {
   3.7291200866814137`*^9, 3.729120095768982*^9}, {3.729120128434678*^9, 
   3.729120131648838*^9}, {3.729120172278734*^9, 3.729120172356533*^9}, {
   3.729120743402363*^9, 3.7291207441433563`*^9}, {3.729120788602343*^9, 
   3.7291207913479967`*^9}, {3.7291208644443913`*^9, 3.72912086593517*^9}, {
   3.729120949328354*^9, 3.729120951079392*^9}, {3.729120998089177*^9, 
   3.729121101876314*^9}, {3.729161109484889*^9, 3.729161122514371*^9}, {
   3.729161176256221*^9, 3.729161200551162*^9}, {3.729166018684317*^9, 
   3.729166061187087*^9}, {3.729173389847056*^9, 3.729173389871232*^9}, {
   3.729173453409334*^9, 3.729173453420225*^9}, {3.729174596320022*^9, 
   3.7291746086723146`*^9}, {3.72917468944347*^9, 3.729174740763813*^9}, {
   3.729175490419692*^9, 3.729175516174968*^9}, {3.729175639773261*^9, 
   3.729175642039402*^9}, {3.729647100398603*^9, 3.729647108685156*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"c2153b8f-523a-4f44-8102-f58268af8565"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`kalQ$$ = 
    True, $CellContext`log\[Sigma]\[Zeta]$$ = 
    0., $CellContext`log\[Sigma]\[Xi]$$ = 1.5, $CellContext`rlsQ$$ = 
    True, $CellContext`\[CapitalMu]$$ = 9, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`rlsQ$$], True, "RLS"}, {True, False}}, {{
       Hold[$CellContext`kalQ$$], True, "KAL"}, {True, False}}, {{
       Hold[$CellContext`\[CapitalMu]$$], 9, "polynomial order"}, 0, 16, 1}, {{
       Hold[$CellContext`log\[Sigma]\[Xi]$$], 1.5, 
       "log \!\(\*SqrtBox[\(P\)]\) (KAL) = (-log \!\(\*SqrtBox[\(\
\[CapitalLambda]\)]\)) (RLS) "}, -3, 8}, {{
       Hold[$CellContext`log\[Sigma]\[Zeta]$$], 0., 
       "log \!\(\*SqrtBox[\(\[CapitalZeta]\)]\) (KAL)"}, -6, 3}, {
      Hold[
       Grid[{{
          Grid[{{
             Button[
             "RESET", ($CellContext`log\[Sigma]\[Zeta]$$ = 
               0.; $CellContext`log\[Sigma]\[Xi]$$ = 
               1.5; $CellContext`\[CapitalMu]$$ = 9)& ], 
             Manipulate`Place[1], 
             Manipulate`Place[2]}}], ""}, {
          Manipulate`Place[3], ""}, {
          Manipulate`Place[4]}, {
          Manipulate`Place[5]}}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {450., {141., 147.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`rlsQ$3407$$ = False, $CellContext`kalQ$3408$$ = 
    False, $CellContext`\[CapitalMu]$3409$$ = 
    0, $CellContext`log\[Sigma]\[Xi]$3410$$ = 
    0, $CellContext`log\[Sigma]\[Zeta]$3411$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`kalQ$$ = 
        True, $CellContext`log\[Sigma]\[Zeta]$$ = 
        0., $CellContext`log\[Sigma]\[Xi]$$ = 1.5, $CellContext`rlsQ$$ = 
        True, $CellContext`\[CapitalMu]$$ = 9}, "ControllerVariables" :> {
        Hold[$CellContext`rlsQ$$, $CellContext`rlsQ$3407$$, False], 
        Hold[$CellContext`kalQ$$, $CellContext`kalQ$3408$$, False], 
        Hold[$CellContext`\[CapitalMu]$$, $CellContext`\[CapitalMu]$3409$$, 
         0], 
        Hold[$CellContext`log\[Sigma]\[Xi]$$, \
$CellContext`log\[Sigma]\[Xi]$3410$$, 0], 
        Hold[$CellContext`log\[Sigma]\[Zeta]$$, $CellContext`log\[Sigma]\
\[Zeta]$3411$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Module[{$CellContext`x$}, 
        With[{$CellContext`terms$ = \
$CellContext`symbolicPowers[$CellContext`x$, $CellContext`\[CapitalMu]$$], \
$CellContext`cs$ = Map[
            $CellContext`\[Phi][$CellContext`\[CapitalMu]$$], 
            Map[List, 
             Part[$CellContext`bts, 1]]]}, 
         With[{$CellContext`rls$ = Quiet[
             $CellContext`rlsFit[
             10^((-2) $CellContext`log\[Sigma]\[Xi]$$)][$CellContext`\
\[CapitalMu]$$, $CellContext`bts]], $CellContext`kalman$ = \
$CellContext`kalFit[
            10^(2 $CellContext`log\[Sigma]\[Zeta]$$), 
             10^(2 $CellContext`log\[Sigma]\[Xi]$$)][$CellContext`\[CapitalMu]\
$$, $CellContext`bts]}, 
          With[{$CellContext`rlsFn$ = Dot[{$CellContext`terms$}, 
              Part[$CellContext`rls$, 1]], $CellContext`kalFn$ = 
            Dot[{$CellContext`terms$}, 
              Part[$CellContext`kalman$, 1]]}, 
           With[{$CellContext`lp$ = ListPlot[
               Transpose[$CellContext`bts], PlotMarkers -> {
                 Graphics[{Blue, 
                   Circle[{0, 0}, 1]}], 0.05}]}, 
            Module[{$CellContext`showlist$ = {$CellContext`lp$, 
                Plot[
                 Sin[2. Pi $CellContext`x$], {$CellContext`x$, 0., 1.}, 
                 PlotStyle -> {Thick, Green}]}}, If[$CellContext`rlsQ$$, 
               AppendTo[$CellContext`showlist$, 
                
                Plot[$CellContext`rlsFn$, {$CellContext`x$, 0, 1}, 
                 PlotStyle -> {Purple}]]]; If[$CellContext`kalQ$$, 
               AppendTo[$CellContext`showlist$, 
                
                Plot[$CellContext`kalFn$, {$CellContext`x$, 0, 1}, 
                 PlotStyle -> {Cyan}]]]; Quiet[
               
               Show[$CellContext`showlist$, Frame -> True, 
                FrameLabel -> {"x", "t"}]]]]]]]], 
      "Specifications" :> {{{$CellContext`rlsQ$$, True, "RLS"}, {True, False},
          ControlPlacement -> 1}, {{$CellContext`kalQ$$, True, "KAL"}, {
         True, False}, ControlPlacement -> 
         2}, {{$CellContext`\[CapitalMu]$$, 9, "polynomial order"}, 0, 16, 1, 
         Appearance -> {"Labeled"}, ControlPlacement -> 
         3}, {{$CellContext`log\[Sigma]\[Xi]$$, 1.5, 
          "log \!\(\*SqrtBox[\(P\)]\) (KAL) = (-log \!\(\*SqrtBox[\(\
\[CapitalLambda]\)]\)) (RLS) "}, -3, 8, Appearance -> "Labeled", 
         ControlPlacement -> 
         4}, {{$CellContext`log\[Sigma]\[Zeta]$$, 0., 
          "log \!\(\*SqrtBox[\(\[CapitalZeta]\)]\) (KAL)"}, -6, 3, Appearance -> 
         "Labeled", ControlPlacement -> 5}, 
        Grid[{{
           Grid[{{
              Button[
              "RESET", ($CellContext`log\[Sigma]\[Zeta]$$ = 
                0.; $CellContext`log\[Sigma]\[Xi]$$ = 
                1.5; $CellContext`\[CapitalMu]$$ = 9)& ], 
              Manipulate`Place[1], 
              Manipulate`Place[2]}}], ""}, {
           Manipulate`Place[3], ""}, {
           Manipulate`Place[4]}, {
           Manipulate`Place[5]}}]}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{537., {244., 251.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7291608432818193`*^9, 3.72916112450849*^9, {3.729161176716465*^9, 
   3.729161201301146*^9}, 3.7291612332234373`*^9, 3.729166027254204*^9, 
   3.729166062247652*^9, 3.729172308588915*^9, 3.729174610695847*^9, {
   3.729174741969412*^9, 3.7291747607471*^9}, 3.729175691543783*^9, 
   3.729175884256433*^9, 3.729183413081258*^9, {3.729183448421172*^9, 
   3.7291834613216057`*^9}, 3.7292559386259813`*^9, 3.729552302382516*^9, 
   3.729557876632798*^9, 3.7296298391238832`*^9, 3.7296346371776114`*^9, 
   3.72964287312507*^9, 3.729642909680106*^9, 3.729643939780446*^9, 
   3.729647111709886*^9, 3.7296471859968224`*^9, 3.729683202732308*^9, 
   3.7296836129467773`*^9, 3.7297781560231*^9, 3.7297792341882687`*^9, 
   3.729779281260777*^9, 3.7298947007340803`*^9, 3.729896006637224*^9, 
   3.729896153410234*^9, 3.729897296235509*^9, 3.73014035573673*^9, 
   3.730240272552095*^9, 3.730380091869788*^9, 3.730385742836792*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"b29e8a79-c86f-4dcd-9c09-793d597a1bc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Add Observation Noise to RLS", "Subsection",
 CellChangeTimes->{{3.729094358222797*^9, 3.7290944123276787`*^9}, {
  3.729798505179409*^9, 
  3.7297985074907103`*^9}},ExpressionUUID->"f2ba3712-eb3a-4eb3-848b-\
e310da76977c"],

Cell[TextData[{
 "RLS, so far, is normalized to unit observation (OBN) noise. How to modify \
RLS to account for non-normalized OBN noise? \n\nScale (each row of) the \
partials by the inverse of the OBN standard deviation, represented below by a \
matrix square root of the OBN covariance ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "\[CapitalZeta]"], TraditionalForm]],ExpressionUUID->
  "47ef5763-33fe-40ce-8d6b-6dca9bd22ffb"],
 ". Finally, rescale the final estimate (not the final covariance) by a \
matrix built from the inverse OBN standard deviation because the recurrent \
normal equations, which incrementally build ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["P", "\[CapitalZeta]", 
        RowBox[{"-", "1"}]], "\[CenterDot]", 
       RowBox[{"A", "\[Transpose]"}], "\[CenterDot]", "A", "\[CenterDot]", 
       SubsuperscriptBox["P", "\[CapitalZeta]", 
        RowBox[{"-", "T"}]]}], ")"}], 
     RowBox[{"-", "1"}]], "\[CenterDot]", 
    SubsuperscriptBox["P", "\[CapitalZeta]", 
     RowBox[{"-", "1"}]], "\[CenterDot]", 
    RowBox[{"A", "\[Transpose]"}], "\[CenterDot]", "\[CapitalZeta]"}], 
   TraditionalForm]],ExpressionUUID->"71782ec1-e57e-4a36-9cc9-684e06306435"],
 ", have one too many factors of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "\[CapitalZeta]"], TraditionalForm]],ExpressionUUID->
  "c536a520-ad98-411c-bb70-5ca584b90b94"],
 "."
}], "Text",
 CellChangeTimes->{{3.729094387864348*^9, 3.729094408224104*^9}, {
  3.7290949467513723`*^9, 3.729094978828157*^9}, {3.7290954227665462`*^9, 
  3.729095484361279*^9}, {3.729107556348858*^9, 3.729107556825692*^9}, {
  3.729169365030899*^9, 3.72916938704521*^9}, {3.7291728712132807`*^9, 
  3.7291729647708797`*^9}, {3.729182737533868*^9, 3.729182738415864*^9}, {
  3.7296381231351852`*^9, 3.729638151867065*^9}, {3.729639553579912*^9, 
  3.72963957002866*^9}, {3.729639602824461*^9, 3.729639607872213*^9}, {
  3.729639746459138*^9, 3.729639966397956*^9}, {3.7296461335142803`*^9, 
  3.729646178394472*^9}, {3.729646644796595*^9, 3.729646660280738*^9}, {
  3.7296839614014273`*^9, 3.72968396184893*^9}, {3.729687467727697*^9, 
  3.7296874741909933`*^9}},ExpressionUUID->"978149cd-9868-42b3-b719-\
ecc543111b8b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "rlsUpdate", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"rlsUpdate", "[", "sqrtP\[CapitalZeta]_", "]"}], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Xi]_", ",", "\[CapitalLambda]_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Zeta]_", ",", "a_"}], "}"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sP\[CapitalZeta]ia", "=", 
        RowBox[{"LinearSolve", "[", 
         RowBox[{"sqrtP\[CapitalZeta]", ",", "a"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[CapitalPi]", "=", 
          RowBox[{"(", 
           RowBox[{"\[CapitalLambda]", "+", 
            RowBox[{
             RowBox[{"sP\[CapitalZeta]ia", "\[Transpose]"}], ".", 
             "sP\[CapitalZeta]ia"}]}], ")"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"LinearSolve", "[", 
           RowBox[{"\[CapitalPi]", ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"sP\[CapitalZeta]ia", "\[Transpose]"}], ".", 
               "\[Zeta]"}], "+", 
              RowBox[{"\[CapitalLambda]", ".", "\[Xi]"}]}], ")"}]}], "]"}], 
          ",", "\[CapitalPi]"}], "}"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Xi]0", "=", 
        RowBox[{"(", GridBox[{
           {"0"},
           {"0"}
          }], ")"}]}], ",", 
       RowBox[{"\[CapitalLambda]0", "=", 
        RowBox[{"(", GridBox[{
           {"1.0*^-6", "0"},
           {"0", "1.0*^-6"}
          }], ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"inputs", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"List", "/@", 
            RowBox[{"data", "\[LeftDoubleBracket]", 
             RowBox[{"1", ";;", "n"}], "\[RightDoubleBracket]"}]}], ",", 
           RowBox[{"List", "/@", 
            RowBox[{"partials", "\[LeftDoubleBracket]", 
             RowBox[{"1", ";;", "n"}], "\[RightDoubleBracket]"}]}]}], "}"}], 
         "\[Transpose]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\[Xi]rr", ",", "\[Xi]r", ",", "\[Xi]k", ",", "\[CapitalPi]rr", ",", 
         "\[CapitalPi]r", ",", "\[CapitalPi]k"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Xi]rr", ",", "\[CapitalPi]rr"}], "}"}], "=", 
          RowBox[{"Fold", "[", 
           RowBox[{
            RowBox[{"rlsUpdate", "[", 
             RowBox[{"\[Sigma]", " ", 
              RowBox[{"IdentityMatrix", "[", "1", "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\[Xi]0", ",", "\[CapitalLambda]0"}], "}"}], ",", 
            "inputs"}], "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Xi]r", ",", "\[CapitalPi]r"}], "}"}], "=", 
          RowBox[{"Fold", "[", 
           RowBox[{"update", ",", 
            RowBox[{"{", 
             RowBox[{"\[Xi]0", ",", "\[CapitalLambda]0"}], "}"}], ",", 
            "inputs"}], "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Xi]k", ",", "\[CapitalPi]k"}], "}"}], "=", 
          RowBox[{"Fold", "[", 
           RowBox[{
            RowBox[{"kalmanUpdate", "[", 
             SuperscriptBox["\[Sigma]", "2"], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Xi]0", ",", 
              RowBox[{"Inverse", "@", "\[CapitalLambda]0"}]}], "}"}], ",", 
            "inputs"}], "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
        RowBox[{"MatrixForm", "@", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"IdentityMatrix", "[", "2", "]"}], "\[Sigma]"], ".", 
              "\[Xi]rr"}], ",", "\[Xi]r", ",", "\[Xi]k"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[CapitalPi]rr", ",", 
             RowBox[{"\[CapitalPi]r", "/", 
              SuperscriptBox["\[Sigma]", "2"]}], ",", 
             RowBox[{"Inverse", "@", "\[CapitalPi]k"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Chop", "[", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"\[CapitalPi]rr", "-", 
                 RowBox[{"\[CapitalPi]r", "/", 
                  SuperscriptBox["\[Sigma]", "2"]}]}], "]"}], ",", 
               SuperscriptBox["10", 
                RowBox[{"-", "6"}]]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Chop", "[", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"Inverse", "@", "\[CapitalPi]k"}], "-", 
                 RowBox[{"\[CapitalPi]r", "/", 
                  SuperscriptBox["\[Sigma]", "2"]}]}], "]"}], ",", 
               SuperscriptBox["10", 
                RowBox[{"-", "6"}]]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Chop", "[", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"Inverse", "@", "\[CapitalPi]k"}], "-", 
                 "\[CapitalPi]rr"}], "]"}], ",", 
               SuperscriptBox["10", 
                RowBox[{"-", "6"}]]}], "]"}]}], "}"}]}], "}"}]}]}]}], "]"}]}],
     "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "3"}], "}"}], ",", "3", ",", "nData", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Sigma]", ",", "1"}], "}"}], ",", 
     RowBox[{"-", "100"}], ",", "100", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.727054852495049*^9, 3.72705494257406*^9}, {
   3.727055026792467*^9, 3.727055093506559*^9}, {3.7270551930291023`*^9, 
   3.727055263833913*^9}, {3.727055297216107*^9, 3.7270554270906563`*^9}, {
   3.7270560338846903`*^9, 3.72705612788085*^9}, {3.7270561855129213`*^9, 
   3.7270561959544077`*^9}, {3.727056250031129*^9, 3.727056367103942*^9}, {
   3.727056427865035*^9, 3.727056443080068*^9}, {3.727056561323501*^9, 
   3.727056598046468*^9}, {3.727056640141169*^9, 3.727056654582451*^9}, {
   3.727056728700244*^9, 3.7270567914565277`*^9}, {3.727056869366274*^9, 
   3.727056921039433*^9}, 3.72705709924362*^9, {3.727057420502048*^9, 
   3.7270575464285316`*^9}, {3.7270577446377487`*^9, 3.727057775909028*^9}, {
   3.7270578799866133`*^9, 3.727057901007744*^9}, 3.7270581603330593`*^9, {
   3.727058349930079*^9, 3.7270584478842707`*^9}, {3.727058490337566*^9, 
   3.727058577824399*^9}, {3.727058673744141*^9, 3.7270586947547493`*^9}, {
   3.727058788099071*^9, 3.7270588909590683`*^9}, {3.727058934322414*^9, 
   3.7270589393580847`*^9}, {3.72705898616982*^9, 3.7270589868650723`*^9}, {
   3.7270592331231947`*^9, 3.727059237300102*^9}, {3.7274435231168203`*^9, 
   3.727443546500602*^9}, {3.727443876120749*^9, 3.7274438848810577`*^9}, {
   3.727444759010458*^9, 3.727444822403467*^9}, {3.727444904584729*^9, 
   3.727444917600658*^9}, {3.727444951170147*^9, 3.72744495624857*^9}, {
   3.727455276322372*^9, 3.7274553027713842`*^9}, {3.727455828581184*^9, 
   3.727455858661305*^9}, {3.7274561810931997`*^9, 3.727456183162497*^9}, {
   3.727472496770452*^9, 3.727472540592374*^9}, {3.727472571262414*^9, 
   3.7274725926081057`*^9}, {3.727473460371025*^9, 3.727473470385874*^9}, {
   3.727967024755598*^9, 3.7279670373987417`*^9}, 3.727967235445434*^9, {
   3.728948393392125*^9, 3.728948394937408*^9}, {3.7290949247050467`*^9, 
   3.729094943930032*^9}, {3.729095003042301*^9, 3.729095003876113*^9}, {
   3.7290950412490463`*^9, 3.729095051008603*^9}, {3.7290950822550173`*^9, 
   3.729095135857238*^9}, {3.7290951897446327`*^9, 3.729095402554632*^9}, {
   3.729107574665441*^9, 3.7291075901656437`*^9}, 3.7291080484571247`*^9, {
   3.729108084736548*^9, 3.72910825558943*^9}, {3.729161604459531*^9, 
   3.729161610440398*^9}, {3.7291616424288397`*^9, 3.729161760746108*^9}, {
   3.729161803140615*^9, 3.72916181703271*^9}, {3.7291721056426287`*^9, 
   3.729172155283436*^9}, {3.7291721980443363`*^9, 3.729172276420932*^9}, {
   3.729172336052294*^9, 3.729172342704544*^9}, {3.7291723737632227`*^9, 
   3.729172427102948*^9}, {3.729172497300097*^9, 3.7291726002607937`*^9}, {
   3.729172635205014*^9, 3.7291727804950743`*^9}, {3.729172814049247*^9, 
   3.72917282262862*^9}, {3.729172924194323*^9, 3.729172927538876*^9}, {
   3.7291729818445587`*^9, 3.729173000378613*^9}, {3.729174803584015*^9, 
   3.729174827188703*^9}, {3.729635300462594*^9, 3.729635329025786*^9}, 
   3.729636008968544*^9, {3.729636272681835*^9, 3.7296363081017237`*^9}, {
   3.729636416390744*^9, 3.7296364270043907`*^9}, {3.7296365151239147`*^9, 
   3.729636544411797*^9}, {3.729636598430265*^9, 3.729636615497266*^9}, {
   3.729636673165737*^9, 3.729636822399268*^9}, {3.72963687410984*^9, 
   3.7296368920773907`*^9}, {3.7296369845843077`*^9, 
   3.7296370095969133`*^9}, {3.7296371791119556`*^9, 3.729637188403821*^9}, {
   3.729637251543976*^9, 3.7296374636954813`*^9}, {3.7296375127019663`*^9, 
   3.729637650441799*^9}, 3.729637697282694*^9, 3.729637746956402*^9, {
   3.729637912605995*^9, 3.729638007565567*^9}, {3.7296380790331573`*^9, 
   3.729638109879693*^9}, {3.729638194298698*^9, 3.7296382277516327`*^9}, 
   3.72964577609685*^9, {3.7296460525874643`*^9, 3.729646120714403*^9}, 
   3.729682464425685*^9, {3.729682496154779*^9, 3.729682501153379*^9}, {
   3.729683983125988*^9, 3.729683996176063*^9}, {3.7296853629102182`*^9, 
   3.7296853792222557`*^9}, {3.729685411789864*^9, 3.729685447926292*^9}, {
   3.72968551455221*^9, 3.729685521383741*^9}, {3.729685560401882*^9, 
   3.729685629173448*^9}, {3.7296856732126093`*^9, 3.729685903363908*^9}, {
   3.729686096422873*^9, 3.729686185724934*^9}, {3.7296862221744957`*^9, 
   3.729686222655352*^9}, {3.729686261470471*^9, 3.729686307392109*^9}, {
   3.729686344163858*^9, 3.729686424060445*^9}, {3.729686474516107*^9, 
   3.7296865793443832`*^9}, {3.729686619156342*^9, 3.72968666650456*^9}, {
   3.729687217278598*^9, 3.7296872845587063`*^9}, {3.7296876028411913`*^9, 
   3.7296876338678923`*^9}, {3.729798616749312*^9, 3.729798662617351*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"a82fcb89-f589-43a5-9790-852c212a730f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 3, $CellContext`\[Sigma]$$ = 1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 3}, 3, $CellContext`nData, 1}, {{
       Hold[$CellContext`\[Sigma]$$], 1}, -100, 100}}, Typeset`size$$ = {
    11272., {137.41754150390625`, 144.58245849609375`}}, Typeset`update$$ = 0,
     Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n$3635$$ = 0, $CellContext`\[Sigma]$3636$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 3, $CellContext`\[Sigma]$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$3635$$, 0], 
        Hold[$CellContext`\[Sigma]$$, $CellContext`\[Sigma]$3636$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      With[{$CellContext`\[Xi]0$ = {{0}, {
          0}}, $CellContext`\[CapitalLambda]0$ = {{1.*^-6, 0}, {
           0, 1.*^-6}}, $CellContext`inputs$ = Transpose[{
            Map[List, 
             Part[$CellContext`data, 
              Span[1, $CellContext`n$$]]], 
            Map[List, 
             Part[$CellContext`partials, 
              Span[1, $CellContext`n$$]]]}]}, 
        Module[{$CellContext`\[Xi]rr$, $CellContext`\[Xi]r$, $CellContext`\
\[Xi]k$, $CellContext`\[CapitalPi]rr$, $CellContext`\[CapitalPi]r$, \
$CellContext`\[CapitalPi]k$}, {$CellContext`\[Xi]rr$, $CellContext`\
\[CapitalPi]rr$} = Fold[
            $CellContext`rlsUpdate[$CellContext`\[Sigma]$$ 
             IdentityMatrix[
              1]], {$CellContext`\[Xi]0$, $CellContext`\[CapitalLambda]0$}, \
$CellContext`inputs$]; {$CellContext`\[Xi]r$, $CellContext`\[CapitalPi]r$} = 
          Fold[$CellContext`update, {$CellContext`\[Xi]0$, $CellContext`\
\[CapitalLambda]0$}, $CellContext`inputs$]; {$CellContext`\[Xi]k$, \
$CellContext`\[CapitalPi]k$} = Fold[
            $CellContext`kalmanUpdate[$CellContext`\[Sigma]$$^2], \
{$CellContext`\[Xi]0$, 
             Inverse[$CellContext`\[CapitalLambda]0$]}, $CellContext`inputs$]; 
         MatrixForm[{{
             Dot[
             IdentityMatrix[
               2]/$CellContext`\[Sigma]$$, $CellContext`\[Xi]rr$], \
$CellContext`\[Xi]r$, $CellContext`\[Xi]k$}, {$CellContext`\[CapitalPi]rr$, \
$CellContext`\[CapitalPi]r$/$CellContext`\[Sigma]$$^2, 
             Inverse[$CellContext`\[CapitalPi]k$]}, {
             Chop[
              
              Abs[$CellContext`\[CapitalPi]rr$ - \
$CellContext`\[CapitalPi]r$/$CellContext`\[Sigma]$$^2], 10^(-6)], 
             Chop[
              Abs[
              Inverse[$CellContext`\[CapitalPi]k$] - \
$CellContext`\[CapitalPi]r$/$CellContext`\[Sigma]$$^2], 10^(-6)], 
             Chop[
              Abs[
              Inverse[$CellContext`\[CapitalPi]k$] - \
$CellContext`\[CapitalPi]rr$], 10^(-6)]}}]]], 
      "Specifications" :> {{{$CellContext`n$$, 3}, 3, $CellContext`nData, 1, 
         Appearance -> "Labeled"}, {{$CellContext`\[Sigma]$$, 1}, -100, 100, 
         Appearance -> "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{11327., {200., 207.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.72968605374187*^9, {3.729686160079255*^9, 3.729686224438879*^9}, 
   3.729686308803747*^9, 3.7296863933549547`*^9, 3.729686424622281*^9, {
   3.729686501023221*^9, 3.72968651336834*^9}, {3.7296865684021482`*^9, 
   3.729686582348391*^9}, {3.729686643824795*^9, 3.7296866678473473`*^9}, 
   3.729687255698826*^9, 3.729687285772131*^9, {3.7296876265461206`*^9, 
   3.7296876456103354`*^9}, 3.729778156089766*^9, 3.729779234251914*^9, 
   3.729779281327022*^9, {3.729798617730486*^9, 3.7297986636105833`*^9}, 
   3.7298947009139147`*^9, 3.729896006704764*^9, 3.729896153679371*^9, 
   3.729897296422574*^9, 3.7301403559781733`*^9, 3.7302402727373343`*^9, 
   3.730380092188154*^9, 3.730385743047121*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"fdc571fa-622e-4eed-8c1f-3e6e3f467881"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["RLS beats KAL", "Subsection",
 CellChangeTimes->{{3.729182753746653*^9, 3.729182764662409*^9}, {
  3.7291917374240217`*^9, 3.729191746263137*^9}, {3.7296405387074757`*^9, 
  3.72964054391427*^9}},ExpressionUUID->"277778b0-dcfe-45cc-9dcb-\
3222470948a4"],

Cell["\<\
KAL and renormalized RLS are mathematically equivalent. Operationally, KAL \
uses subtraction to recur the covariance of the estimates, so is exposed to \
catastrophic cancelation. RLS only adds to the information matrix, so is \
exposed only to ill-conditioning, which is empirically less severe. We show \
this below.\
\>", "Text",
 CellChangeTimes->{{3.729108318055666*^9, 3.729108347023395*^9}, {
  3.729119343997692*^9, 3.729119359971643*^9}, {3.729169476126769*^9, 
  3.729169477106061*^9}, {3.72917483481177*^9, 3.7291748799421263`*^9}, {
  3.729191759307276*^9, 3.729191781475971*^9}, {3.729640562998232*^9, 
  3.729640568230112*^9}, {3.729640980175406*^9, 3.729640998789782*^9}, {
  3.7296411048780746`*^9, 3.7296411151875257`*^9}, {3.729641300872263*^9, 
  3.729641334229947*^9}, {3.7296461936050053`*^9, 3.729646207586768*^9}, {
  3.729712752322254*^9, 3.729712803608899*^9}, {3.7297987012257757`*^9, 
  3.729798723965109*^9}},ExpressionUUID->"03638b05-1593-4c2c-ad46-\
68b784ca0a43"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Regularization and MAP", "Chapter",
 CellChangeTimes->{{3.727878613935317*^9, 3.727878617609169*^9}},
 CellTags->"c:14",ExpressionUUID->"0a62acb1-49c7-40e7-8ca4-b6c8f3a93974"],

Cell[TextData[{
 "Bishop reports ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "=", 
    RowBox[{"11.111", "\[Ellipsis]"}]}], TraditionalForm]],ExpressionUUID->
  "8e22fb9c-13dd-4596-83d2-17c772c852a1"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "=", "0.005"}], TraditionalForm]],ExpressionUUID->
  "9439b565-4e31-4d22-ae02-3f68785439e4"],
 " in his figure 1.17 (page 32) and in equations 1.70 through 1.72 (page 31), \
which look suspiciously like the equations for Kalman filtering. Bishop\
\[CloseCurlyQuote]s matrix ",
 Cell[BoxData[
  FormBox[
   StyleBox["S",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "15229e6b-eefa-48a8-80b0-df50abb6726b"],
 StyleBox[" looks like ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["D",
     FontWeight->"Bold"], 
    RowBox[{"\[ThinSpace]", 
     RowBox[{"-", "1"}]}]], TraditionalForm]],ExpressionUUID->
  "1c5226ee-b619-4054-a482-ddd3e76e3691"],
 " in ",
 Cell[BoxData[
  FormBox["kalmanUpdate", TraditionalForm]], "Code",ExpressionUUID->
  "de857dd2-14f7-46ca-88a7-ba75c4137d1c"],
 " above. Let\[CloseCurlyQuote]s reproduce MAP via RLS and KAL."
}], "Text",
 CellChangeTimes->{{3.727971621209344*^9, 3.727971949635846*^9}, {
  3.72797205224653*^9, 3.7279722021279373`*^9}, {3.7279725817509613`*^9, 
  3.727972703314744*^9}, {3.7280847454753532`*^9, 3.728084792840749*^9}, {
  3.728220011630794*^9, 3.7282200748560743`*^9}, {3.728252317415781*^9, 
  3.728252334400373*^9}, {3.729171081665955*^9, 3.729171117218204*^9}, {
  3.729191351993813*^9, 3.729191365808433*^9}, {3.7291948298181257`*^9, 
  3.729194830792169*^9}, {3.729798750699163*^9, 
  3.72979875284214*^9}},ExpressionUUID->"2267e09b-40d6-4365-bafa-\
9ee4864f7ea4"],

Cell[CellGroupData[{

Cell["Bishop\[CloseCurlyQuote]s MAP", "Subchapter",
 CellChangeTimes->{{3.72797221730235*^9, 3.727972224770916*^9}, {
  3.728034928939948*^9, 3.7280349304923964`*^9}},
 CellTags->"c:15",ExpressionUUID->"08896713-5645-41eb-8d53-64e0ec086c76"],

Cell[TextData[{
 "Bishop\[CloseCurlyQuote]s equations 1.70 through 1.72 are reproduced here. \
The dimensions of the identity matrix in ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],ExpressionUUID->
  "1eacf56a-a8d9-4664-995f-125386c0e309"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalMu]", "+", "1"}], TraditionalForm]],ExpressionUUID->
  "3ce7d474-d9b6-4b6b-9a80-613654c0eeeb"],
 ", where ",
 Cell[BoxData[
  FormBox["\[CapitalMu]", TraditionalForm]],ExpressionUUID->
  "5120e51b-c864-42ac-a6ed-b95ded545421"],
 " is the order of the polynomial, one more than ",
 Cell[BoxData[
  FormBox["\[CapitalMu]", TraditionalForm]],ExpressionUUID->
  "aab244ae-ede9-45f4-b7b4-4d49f0916e6c"],
 " to account for the leading bias term:"
}], "Text",
 CellChangeTimes->{{3.727972249677867*^9, 3.727972263698797*^9}, {
   3.727992395654808*^9, 3.7279924502184677`*^9}, {3.7281700269116917`*^9, 
   3.7281700419010553`*^9}, {3.728170120216963*^9, 3.728170134209874*^9}, {
   3.72911884925035*^9, 3.729118878325338*^9}, {3.729162024195531*^9, 
   3.7291620299164963`*^9}, {3.7291711306418667`*^9, 3.729171176680653*^9}, 
   3.729178684600383*^9, {3.729182872291184*^9, 3.7291828738856*^9}, {
   3.729798765133129*^9, 
   3.729798765324222*^9}},ExpressionUUID->"dd21213d-8d31-4a8d-a140-\
6b14ed289ff2"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"m", "(", "x", ")"}], "  ", "=", "  ", 
   RowBox[{"\[Beta]", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]", "\[ThinSpace]", "(", "x", ")"}], "\[Transpose]"}], 
     "\[CenterDot]", "S", "\[CenterDot]", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "1"}], "N"], 
      RowBox[{
       RowBox[{"\[Phi]", "\[ThinSpace]", "(", 
        SubscriptBox["x", "n"], ")"}], 
       SubscriptBox["t", "n"]}]}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.727972280222818*^9, 3.7279724431858997`*^9}, {
  3.727972476930735*^9, 3.727972478697866*^9}, {3.7279730887912483`*^9, 
  3.7279731267447147`*^9}},ExpressionUUID->"db86a230-5b1e-4fe3-95ba-\
6e4e94b0201d"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["s", "2"], "(", "x", ")"}], "  ", "=", "  ", 
   RowBox[{
    SuperscriptBox["\[Beta]", 
     RowBox[{"\[ThinSpace]", 
      RowBox[{"-", "1"}]}]], "+", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]", "\[ThinSpace]", "(", "x", ")"}], "\[Transpose]"}], 
     "\[CenterDot]", "S", "\[CenterDot]", 
     RowBox[{"\[Phi]", "\[ThinSpace]", "(", "x", ")"}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.7279724613260727`*^9, 3.727972528960863*^9}, {
  3.727972730192233*^9, 3.727972730194661*^9}, {3.727973130733033*^9, 
  3.727973133972931*^9}},ExpressionUUID->"3c09bb1f-eb89-48d7-852a-\
3ceb5f7869d2"],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["S", 
    RowBox[{"\[ThinSpace]", 
     RowBox[{"-", "1"}]}]], "  ", 
   OverscriptBox["=", "def"], "  ", 
   RowBox[{
    RowBox[{"\[Alpha]", " ", 
     SubscriptBox["I", 
      RowBox[{"\[CapitalMu]", "+", "1"}]]}], "+", 
    RowBox[{"\[Beta]", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "1"}], "N"], 
      RowBox[{
       RowBox[{"\[Phi]", "\[ThinSpace]", "(", 
        SubscriptBox["x", "n"], ")"}], "\[CenterDot]", 
       RowBox[{
        RowBox[{"\[Phi]", "\[ThinSpace]", "(", 
         SubscriptBox["x", "n"], ")"}], "\[Transpose]"}]}]}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.72797275156035*^9, 3.727972881609983*^9}, {
  3.727973139344582*^9, 3.727973142448781*^9}, {3.727992385246423*^9, 
  3.727992388437778*^9}},ExpressionUUID->"9a6c9c06-bbdb-4d30-ae15-\
5a8af458f260"],

Cell["\<\
Here are links between Bishop\[CloseCurlyQuote]s formulation and ours, \
without derivation. \
\>", "Text",
 CellChangeTimes->{{3.728247291344137*^9, 3.728247310423942*^9}, {
  3.728248735711397*^9, 
  3.7282487376877623`*^9}},ExpressionUUID->"ba8ab0b2-920e-421b-b051-\
20637ca48939"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "1"}], "N"], 
    RowBox[{
     RowBox[{"\[Phi]", "\[ThinSpace]", "(", 
      SubscriptBox["x", "n"], ")"}], 
     SubscriptBox["t", "n"]}]}], "=", 
   RowBox[{
    RowBox[{"A", "\[Transpose]"}], "\[CenterDot]", "\[CapitalZeta]"}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.728246767415718*^9, 3.728246838582246*^9}, {
  3.728246899084139*^9, 3.72824690103373*^9}, {3.728247197825539*^9, 
  3.728247228753024*^9}, {3.728247278577318*^9, 
  3.72824728616096*^9}},ExpressionUUID->"fb8823b3-a39b-40d6-bfa4-\
60cc6197efe8"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    UnderscriptBox["lim", 
     RowBox[{"\[Alpha]", "\[Rule]", "0"}]], 
    RowBox[{"(", "\[ThinSpace]", 
     RowBox[{
      SuperscriptBox["\[Beta]", 
       RowBox[{"\[ThinSpace]", 
        RowBox[{"-", "1"}]}]], 
      SuperscriptBox["S", 
       RowBox[{"\[ThinSpace]", 
        RowBox[{"-", "1"}]}]]}], ")"}]}], "=", 
   RowBox[{
    RowBox[{"A", "\[Transpose]"}], "\[CenterDot]", "A"}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.728247724107789*^9, 
  3.728247835449356*^9}},ExpressionUUID->"a5944e6b-c1e2-4355-bec7-\
2b12888c8d0e"],

Cell[CellGroupData[{

Cell["\[CapitalPhi] Vectors", "Subsection",
 CellChangeTimes->{{3.728246200325514*^9, 
  3.72824620633247*^9}},ExpressionUUID->"8872f092-b076-4f1d-8a50-\
196b896e8cb3"],

Cell[TextData[{
 "Bishop\[CloseCurlyQuote]s ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Phi]", "\[ThinSpace]", "(", 
    SubscriptBox["x", "n"], ")"}], TraditionalForm]],ExpressionUUID->
  "d0357893-7a34-47d5-b9df-6d65e4cd6db3"],
 " is a ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"\[CapitalMu]", "+", "1"}], ")"}], TraditionalForm]],
  ExpressionUUID->"be18f1f6-fa19-4618-85e4-a7b0798c19b0"],
 "-dimensional column vector of the powers of the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]],ExpressionUUID->
  "a695a214-da64-4bf6-9e54-8c1109d67926"],
 " input ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "n"], TraditionalForm]],ExpressionUUID->
  "a592915b-b190-4cca-a80f-fa0eb5f0f7b6"],
 ". These powers are the basis functions of a polynomial model for the curve. \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Phi]", "\[ThinSpace]", "(", 
    SubscriptBox["x", "n"], ")"}], TraditionalForm]],ExpressionUUID->
  "c73c1dda-88c8-44a2-92c1-fc534674e49f"],
 " is the dual (transpose) of one row of our partials matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "711ac6f0-8e88-49d6-896e-5df4757ff9bf"],
 ". \n\nAs written, Bishop\[CloseCurlyQuote]s equations are non-recurrent, \
requiring all data ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "n"], TraditionalForm]],ExpressionUUID->
  "8c93d51c-82cf-4849-9217-6ca946a75539"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Phi]", "\[ThinSpace]", "(", 
    SubscriptBox["x", "n"], ")"}], TraditionalForm]],ExpressionUUID->
  "a73423ff-d81a-49db-8ce5-8bf4b609f34c"],
 " in memory. Plus, as written, they require inverting matrix ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],ExpressionUUID->
  "883351be-2cb8-44c7-a551-6e0d6beceae2"],
 ". They thus suffer from the operational ills of the normal equations. "
}], "Text",
 CellChangeTimes->{{3.727972933675117*^9, 3.727973078876171*^9}, {
   3.7279731471152554`*^9, 3.727973158916931*^9}, {3.727973221836879*^9, 
   3.727973225832409*^9}, {3.727973303634624*^9, 3.727973419552944*^9}, {
   3.72797356270901*^9, 3.727973628849347*^9}, {3.72797366287252*^9, 
   3.727973666796633*^9}, {3.727974021159554*^9, 3.727974048392016*^9}, {
   3.7279742261495733`*^9, 3.727974272673163*^9}, {3.7279743703033*^9, 
   3.727974393755924*^9}, {3.7279744457003307`*^9, 3.7279744754841213`*^9}, {
   3.7279909913943167`*^9, 3.7279910540283127`*^9}, {3.727992083686421*^9, 
   3.7279920838762627`*^9}, {3.7279924628991203`*^9, 3.727992516567472*^9}, {
   3.728034977126224*^9, 3.7280350056809273`*^9}, {3.7280848433291597`*^9, 
   3.728084865045436*^9}, {3.728084911051063*^9, 3.7280851520750723`*^9}, {
   3.7281700673790197`*^9, 3.728170114044112*^9}, {3.72817017243155*^9, 
   3.728170228710331*^9}, {3.728220150909762*^9, 3.728220256483842*^9}, {
   3.72822645762605*^9, 3.728226489609394*^9}, {3.728252404072995*^9, 
   3.728252407743845*^9}, {3.729031135725021*^9, 3.7290311504327307`*^9}, {
   3.729031182197022*^9, 3.729031247473465*^9}, {3.729118895789219*^9, 
   3.7291189027722054`*^9}, {3.7291191791553907`*^9, 3.729119179167945*^9}, {
   3.7291712705279293`*^9, 3.729171273095373*^9}, {3.7291716361016483`*^9, 
   3.729171713599073*^9}, {3.7291749543161783`*^9, 3.729174983647272*^9}, 
   3.7291828972165833`*^9, {3.729798784388638*^9, 
   3.7297987849222937`*^9}},ExpressionUUID->"437f3f51-3f90-4c54-ba24-\
046eb7577083"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\[Phi]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Phi]", "[", "\[CapitalMu]_", "]"}], "[", "xn_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Quiet", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       SuperscriptBox["xn", "i"], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "\[CapitalMu]"}], "}"}]}], "]"}]}], "/.", 
    
    RowBox[{"{", 
     RowBox[{"Indeterminate", "\[Rule]", "1"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", 
  RowBox[{
   RowBox[{"\[Phi]", "[", "3", "]"}], "/@", 
   RowBox[{"List", "/@", 
    RowBox[{
    "bts", "\[LeftDoubleBracket]", "1", 
     "\[RightDoubleBracket]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.727973167925046*^9, 3.7279732069191923`*^9}, {
   3.727973258420764*^9, 3.727973267473878*^9}, {3.727973429851573*^9, 
   3.727973456984548*^9}, {3.7279735073990107`*^9, 3.727973544918976*^9}, {
   3.727973599459084*^9, 3.727973603790498*^9}, {3.7279736372428493`*^9, 
   3.727973649545477*^9}, {3.72797372689071*^9, 3.7279737331067553`*^9}, {
   3.727973816644998*^9, 3.7279738168679523`*^9}, {3.72797400882194*^9, 
   3.7279740141305532`*^9}, {3.727974059584772*^9, 3.727974079989175*^9}, {
   3.727974139169652*^9, 3.727974144037814*^9}, {3.727974283500222*^9, 
   3.727974357586182*^9}, {3.7279743965807533`*^9, 3.727974431722498*^9}, {
   3.727974493179165*^9, 3.7279747668644867`*^9}, {3.727989252021517*^9, 
   3.727989259286603*^9}, {3.7279894297361*^9, 3.727989457309639*^9}, {
   3.72799130695959*^9, 3.727991323954713*^9}, {3.7279914092481813`*^9, 
   3.727991418823888*^9}, {3.727992110982379*^9, 3.727992136250567*^9}, 
   3.727992510695593*^9, 3.727993474811754*^9, 3.729175642856516*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"d142c329-5ece-4948-9cd1-0eafa77f0363"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1"},
       {"0.`"},
       {"0.`"},
       {"0.`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.`"},
       {"0.1111111111111111`"},
       {"0.012345679012345678`"},
       {"0.0013717421124828531`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.`"},
       {"0.2222222222222222`"},
       {"0.04938271604938271`"},
       {"0.010973936899862825`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.`"},
       {"0.3333333333333333`"},
       {"0.1111111111111111`"},
       {"0.037037037037037035`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.`"},
       {"0.4444444444444444`"},
       {"0.19753086419753085`"},
       {"0.0877914951989026`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.`"},
       {"0.5555555555555556`"},
       {"0.308641975308642`"},
       {"0.1714677640603567`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.`"},
       {"0.6666666666666666`"},
       {"0.4444444444444444`"},
       {"0.2962962962962963`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.`"},
       {"0.7777777777777777`"},
       {"0.6049382716049381`"},
       {"0.4705075445816184`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.`"},
       {"0.8888888888888888`"},
       {"0.7901234567901234`"},
       {"0.7023319615912208`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.`"},
       {"1.`"},
       {"1.`"},
       {"1.`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.72797476735454*^9, {3.727989442724881*^9, 3.7279894588380623`*^9}, {
   3.727991319054626*^9, 3.727991333268414*^9}, {3.727992119104147*^9, 
   3.727992136593679*^9}, 3.727992528933445*^9, 3.727993509509782*^9, 
   3.728044352739295*^9, 3.7280464487735233`*^9, 3.728066471393063*^9, 
   3.728068121686639*^9, 3.728083785006975*^9, 3.7280907429940033`*^9, 
   3.728169446568424*^9, 3.728169541724071*^9, 3.728169824254798*^9, 
   3.728169884294923*^9, 3.7282529567610817`*^9, 3.7289462573501*^9, 
   3.729022900837743*^9, 3.729119979791541*^9, 3.729121073594092*^9, 
   3.729121112049911*^9, 3.7291723088762493`*^9, 3.729175691909602*^9, 
   3.729175898527714*^9, 3.729183413214457*^9, {3.72918344855357*^9, 
   3.729183461458799*^9}, 3.7292559391231413`*^9, 3.729552302640155*^9, 
   3.7295578767316313`*^9, 3.729629839331705*^9, 3.729634637380622*^9, 
   3.7296428734670143`*^9, 3.729642909800926*^9, 3.7296439400116787`*^9, 
   3.729647186226632*^9, 3.729683245991271*^9, 3.72977817757222*^9, 
   3.7297792343175077`*^9, 3.729779281386825*^9, 3.7298947010192213`*^9, 
   3.7298960068269453`*^9, 3.729896153792561*^9, 3.729897296568533*^9, 
   3.730140356048112*^9, 3.730240272837371*^9, 3.730380092251895*^9, 
   3.730385743095895*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"8fc409f1-c4b4-46f5-9568-53551d874d15"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["S Inverse", "Subsection",
 CellChangeTimes->{{3.7282461813905153`*^9, 
  3.728246183677311*^9}},ExpressionUUID->"148c0c4e-ef5b-4b4e-8401-\
4b6d7028be67"],

Cell["Bishop\[CloseCurlyQuote]s equation 1.72.", "Text",
 CellChangeTimes->{{3.727973854544991*^9, 3.727973958387879*^9}, {
  3.7279935391781883`*^9, 3.7279935616792603`*^9}, {3.7281702480246696`*^9, 
  3.7281702828359957`*^9}, {3.7291717549435673`*^9, 3.729171756365779*^9}, {
  3.729173508646914*^9, 
  3.7291735382601423`*^9}},ExpressionUUID->"464727e5-9688-47e4-9fa8-\
a4a6e39e29ee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"sInv", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sInv", "[", 
    RowBox[{"\[Alpha]_", ",", "\[Beta]_", ",", "cs_", ",", "\[CapitalMu]_"}], 
    "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalNu]", "=", 
       RowBox[{"Length", "[", "cs", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"IdentityMatrix", "[", 
        RowBox[{"\[CapitalMu]", "+", "1"}], "]"}]}], "+", 
      RowBox[{"\[Beta]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "cs", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ".", 
          RowBox[{
           RowBox[{
           "cs", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
           "\[Transpose]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "\[CapitalNu]"}], "}"}]}], "]"}]}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.727973884729273*^9, 3.727973893707472*^9}, {
   3.727973967319463*^9, 3.727973981031104*^9}, {3.727974108227893*^9, 
   3.72797411197365*^9}, {3.7279741548510723`*^9, 3.72797416892636*^9}, {
   3.7279748009815598`*^9, 3.727974944132066*^9}, {3.727974978991621*^9, 
   3.727975013741935*^9}, {3.727975044573173*^9, 3.727975082061253*^9}, {
   3.727975179449038*^9, 3.727975183788499*^9}, {3.727989511270849*^9, 
   3.727989517784666*^9}, {3.7279913069753647`*^9, 3.727991306982168*^9}, {
   3.727991851964892*^9, 3.727992057554862*^9}, {3.727992211691082*^9, 
   3.7279923598616533`*^9}, 3.728035965335248*^9, {3.72917351493624*^9, 
   3.729173515353211*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"22e779bc-5922-4e43-8ecc-e696f6ce8c12"]
}, Closed]],

Cell[CellGroupData[{

Cell["MAP Mean", "Subsection",
 CellChangeTimes->{{3.7282462270238667`*^9, 
  3.7282462292069902`*^9}},ExpressionUUID->"e34b4a76-5e00-4f52-8590-\
379e5e10ffc3"],

Cell["Bishop\[CloseCurlyQuote]s equation 1.70.", "Text",
 CellChangeTimes->{{3.7279935722104673`*^9, 3.727993577636578*^9}, {
   3.728252554798936*^9, 3.728252645286251*^9}, {3.729171771786726*^9, 
   3.72917177432257*^9}, 
   3.729182916782524*^9},ExpressionUUID->"a23e953c-2e55-4aa9-96de-\
83ec96d542c5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "mapMean", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mapMean", "[", 
    RowBox[{
    "\[Alpha]_", ",", "\[Beta]_", ",", "x_", ",", "cs_", ",", "ts_", ",", 
     "\[CapitalMu]_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalNu]", "=", 
        RowBox[{"Length", "@", "cs"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Beta]", "*", 
         RowBox[{
          RowBox[{"\[Phi]", "[", "\[CapitalMu]", "]"}], "[", "x", "]"}]}], 
        "}"}], ".", 
       RowBox[{"(*", " ", 
        RowBox[{"row", " ", "of", " ", "partials"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"LinearSolve", "[", 
        RowBox[{"(*", " ", 
         RowBox[{"vector", " ", "of", " ", "coefficients"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"sInv", "[", 
          RowBox[{
          "\[Alpha]", ",", "\[Beta]", ",", "cs", ",", "\[CapitalMu]"}], "]"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"ts", ".", "cs"}]}], "]"}]}]}], "]"}], 
    "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.727989096190207*^9, 3.727989111607684*^9}, {
   3.727989185580763*^9, 3.7279892393755693`*^9}, {3.72798955173129*^9, 
   3.727989594075267*^9}, {3.727989624561162*^9, 3.7279897672865*^9}, 
   3.727990207781111*^9, {3.7279902406039467`*^9, 3.727990276509069*^9}, {
   3.727990432145055*^9, 3.727990545195623*^9}, {3.72799130699829*^9, 
   3.727991307005333*^9}, {3.727991591768076*^9, 3.727991609737764*^9}, {
   3.727991645183196*^9, 3.72799166420612*^9}, {3.727992608834428*^9, 
   3.727992654156641*^9}, {3.7279927039199*^9, 3.7279927175692453`*^9}, {
   3.7279930333670883`*^9, 3.727993080952739*^9}, {3.727993138537717*^9, 
   3.727993147323758*^9}, {3.727993213160774*^9, 3.727993217820777*^9}, 
   3.728035955225011*^9, {3.7282262295415688`*^9, 3.728226243962159*^9}, {
   3.728226290221162*^9, 3.728226420069693*^9}, {3.728226502066142*^9, 
   3.728226526171074*^9}, {3.7282265682957487`*^9, 3.728226638371058*^9}, {
   3.728227010234784*^9, 3.7282270232238007`*^9}, {3.728245933205378*^9, 
   3.728245936365489*^9}, {3.7282459778757668`*^9, 3.728246022965337*^9}, {
   3.7282460585043507`*^9, 3.728246102733577*^9}, {3.7282462526429663`*^9, 
   3.728246318744425*^9}, {3.7282463492129383`*^9, 3.7282463559800463`*^9}, {
   3.728246442446768*^9, 3.728246466102882*^9}, {3.728246507569501*^9, 
   3.728246536388625*^9}, {3.728246579393989*^9, 3.7282466681208487`*^9}, {
   3.728247344958013*^9, 3.728247355611513*^9}, {3.7282474213422194`*^9, 
   3.728247422795175*^9}, {3.728247471143052*^9, 3.7282474904691353`*^9}, {
   3.728247907660754*^9, 3.7282479741618853`*^9}, {3.728248056332654*^9, 
   3.728248134124445*^9}, {3.728248164455634*^9, 3.7282481746776342`*^9}, 
   3.728248206633081*^9, {3.7282482403818007`*^9, 3.728248407583012*^9}, {
   3.728248438362019*^9, 3.72824858749609*^9}, {3.728248829569028*^9, 
   3.728249068639111*^9}, {3.728249133978136*^9, 3.7282492510926323`*^9}, 
   3.7282530152093763`*^9, {3.7282530485877857`*^9, 3.7282530512187223`*^9}, {
   3.72825308467808*^9, 3.7282531487824993`*^9}, {3.728253205404887*^9, 
   3.728253436301762*^9}, {3.72830462816504*^9, 3.7283050236694736`*^9}, {
   3.729177176419301*^9, 3.729177182963616*^9}, {3.729177255620264*^9, 
   3.729177269247582*^9}, 3.729177430853569*^9, {3.729177461134405*^9, 
   3.729177625835404*^9}, {3.7291776788725452`*^9, 3.729177737476037*^9}, {
   3.729177797007773*^9, 3.7291777980048656`*^9}, {3.7291783630299997`*^9, 
   3.72917836685954*^9}, {3.729179191155795*^9, 3.729179191813648*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"9fc998df-b844-4c4d-8b20-4682c622b1d0"]
}, Closed]],

Cell[CellGroupData[{

Cell["A-Priori Variances \[Alpha] and \[Beta]", "Subsection",
 CellChangeTimes->{{3.729433856658804*^9, 3.7294338622133093`*^9}, {
  3.7296329364064617`*^9, 3.729632937814076*^9}, {3.7297178930877743`*^9, 
  3.729717894821443*^9}, {3.729792663995645*^9, 
  3.7297926706425962`*^9}},ExpressionUUID->"0e07c3a2-874e-408d-9286-\
9356269c9864"],

Cell[TextData[{
 "Bishop defines ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "=", 
    RowBox[{"1", "/", 
     SubsuperscriptBox["\[Sigma]", "\[Zeta]", "2"]}]}], TraditionalForm]],
  ExpressionUUID->"3cb59500-197e-4c4e-ac9f-4d98e4a2a78f"],
 ", where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "\[Zeta]"], TraditionalForm]],ExpressionUUID->
  "4effa52e-3332-40b9-89db-fd17665a3169"],
 " is the standard deviation, from the model, of the prediction ",
 Cell[BoxData[
  FormBox["\[Zeta]", TraditionalForm]],ExpressionUUID->
  "d2430b71-8a16-463d-b08f-b4d69197671a"],
 ". The prediction ",
 Cell[BoxData[
  FormBox["\[Zeta]", TraditionalForm]],ExpressionUUID->
  "b4d5173e-78b5-4555-ba3f-38a350e58db3"],
 " is the value of the model on an arbitrary input ",
 Cell[BoxData[
  FormBox["\[Xi]", TraditionalForm]],ExpressionUUID->
  "c0efd558-47a6-464c-8219-11b4b7c12c31"],
 ". Similarly, Bishop defines ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "=", 
    RowBox[{"1", "/", 
     SubsuperscriptBox["\[Sigma]", "\[Xi]", "2"]}]}], TraditionalForm]],
  ExpressionUUID->"da801590-9053-4510-8f2d-61ce312277e8"],
 ", where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "\[Xi]"], TraditionalForm]],ExpressionUUID->
  "c3e1a099-1dc9-4e14-9310-78cf5ec0e7cf"],
 " is the standard deviation of the a-priori distribution of the unknown \
parameter estimate ",
 Cell[BoxData[
  FormBox["\[Xi]", TraditionalForm]],ExpressionUUID->
  "4cbca5ac-87c6-4cca-bb56-d89b90a797bf"],
 ". \n\nWe observe, numerically, that Bishop\[CloseCurlyQuote]s equations \
match RLS and KAL when ",
 Cell[BoxData[
  FormBox["\[Beta]", TraditionalForm]],ExpressionUUID->
  "79f416eb-30c7-45b8-8f29-c6b700475cbc"],
 " is ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Sigma]", "\[Xi]", "2"], TraditionalForm]],
  ExpressionUUID->"4b490b01-f5f1-4c8b-a825-4654e9f817cb"],
 " and when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "=", 
    SubsuperscriptBox["\[Sigma]", "\[Zeta]", "2"]}], TraditionalForm]],
  ExpressionUUID->"45fbcfcb-989e-462b-9f48-4d6edb33b0b7"],
 ". We leave full proof to another paper, being satisfied with numerical \
evidence here. \n\nSemi-numerically, the proposition is true (above order 4, \
The following becomes taxing for Mathematica):"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQHTp1TkzIydeOnH/eZoJob69/+SBaQNSkGUTXvurv
BNHPsqO7QPS8e/mLQXTTc8nVILr37431IFpqX98REH1L/lB2D5Depm+XA6JD
rjkVg+h9jtfLQTRP+vUzW4G0xqXXZ0H0gdrvN+4A6ZKQrMcguuDmi+cguqLg
1xsQ7bL5bsh9IP1F2CIURHM6zykD0Zvc5pWD6ANeK5tAtAtHXwuINni4++wf
IL3ISOsRiE5SUYv8B6QtZy5IBNENH5p7QPSfyx0TQHTC1NLK/yDze25Vg+iu
q9a9zKdeOz65KjMDRD9SMpwLoqccaVsIog3uRF4F0X9yFG6D6Ndh5Q9BtMWz
qicgOuKo2XU2IF0UbwOmAdt+z8w=
  
  "],ExpressionUUID->"8347131a-ee49-43f7-863e-d937b7676dfd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"x", ",", "\[Alpha]", ",", "\[Beta]", ",", "chopQ"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"chopQ", "=", "False"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"cs", "=", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "\[CapitalMu]", "]"}], "/@", 
           RowBox[{"List", "/@", 
            RowBox[{
            "bts", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}]}]}], ",", 
         RowBox[{"ts", "=", 
          RowBox[{
          "bts", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{"chopQ", ",", "Chop", ",", "Identity"}], "]"}], "@", 
        RowBox[{"FullSimplify", "[", 
         RowBox[{
          RowBox[{"mapMean", "[", 
           RowBox[{
           "\[Alpha]", ",", "\[Beta]", ",", "x", ",", "cs", ",", "ts", ",", 
            "\[CapitalMu]"}], "]"}], "-", 
          RowBox[{"mapMean", "[", 
           RowBox[{
            FractionBox["1", "\[Beta]"], ",", 
            FractionBox["1", "\[Alpha]"], ",", "x", ",", "cs", ",", "ts", ",",
             "\[CapitalMu]"}], "]"}]}], "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Column", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Button", "[", 
            RowBox[{"\"\<UN-CHOP\>\"", ",", 
             RowBox[{"chopQ", "=", "False"}]}], "]"}], ",", 
           "\"\<        \>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<CHOP\>\"", ",", 
             RowBox[{"chopQ", "=", "True"}]}], "]"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\[CapitalMu]", ",", "2", ",", "\"\<order \[CapitalMu]\>\""}], 
            "}"}], ",", "0", ",", "4", ",", "1", ",", 
           RowBox[{"Appearance", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<Open\>\"", ",", "\"\<Labeled\>\""}], "}"}]}]}], 
          "}"}], "]"}]}], "}"}], "]"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.727884681931381*^9, 3.7278848244947367`*^9}, 
   3.727884861217602*^9, {3.727884975910451*^9, 3.7278849940673532`*^9}, {
   3.727885103521431*^9, 3.727885154698123*^9}, {3.72788520225443*^9, 
   3.727885279820177*^9}, {3.727885496115718*^9, 3.727885517688189*^9}, {
   3.72788559395383*^9, 3.727885598972475*^9}, {3.7278856296542664`*^9, 
   3.727885630876935*^9}, {3.727885695972756*^9, 3.727885696864628*^9}, {
   3.727886633660364*^9, 3.72788671287046*^9}, {3.727886975364171*^9, 
   3.727886975439041*^9}, {3.727903476653379*^9, 3.7279034819231358`*^9}, {
   3.727903531862627*^9, 3.727903539245574*^9}, 3.727913149489944*^9, {
   3.727915429732944*^9, 3.7279154437948627`*^9}, {3.727915750998211*^9, 
   3.7279158447033873`*^9}, {3.7279213832695303`*^9, 3.72792149154887*^9}, {
   3.727921523149373*^9, 3.72792161270367*^9}, {3.72792165300301*^9, 
   3.727921654632832*^9}, {3.727921753282296*^9, 3.727921753360197*^9}, {
   3.727924008558401*^9, 3.727924045018003*^9}, {3.727924293814445*^9, 
   3.727924370827516*^9}, 3.727965590613636*^9, {3.7279686551525917`*^9, 
   3.727968670349081*^9}, {3.7279689406605043`*^9, 3.727969019631563*^9}, {
   3.727970883056108*^9, 3.727970945128386*^9}, {3.727971005813472*^9, 
   3.727971023734253*^9}, {3.727990640753121*^9, 3.727990674786282*^9}, {
   3.727990711779483*^9, 3.727990808626033*^9}, {3.727991307012423*^9, 
   3.727991307022031*^9}, {3.7279932412769613`*^9, 3.7279932949280367`*^9}, {
   3.7279933910397243`*^9, 3.727993398358789*^9}, {3.727993778490755*^9, 
   3.72799379332897*^9}, {3.727993826040863*^9, 3.7279938751552763`*^9}, {
   3.727993956673335*^9, 3.727993958184173*^9}, 3.727994128012043*^9, {
   3.7280354067714148`*^9, 3.7280354258611927`*^9}, {3.728035634299762*^9, 
   3.728035732029833*^9}, {3.72803585641748*^9, 3.728035906176405*^9}, {
   3.728038924314391*^9, 3.728039041653799*^9}, {3.728039077026232*^9, 
   3.72803913265169*^9}, {3.728039194847865*^9, 3.728039320044661*^9}, {
   3.728044256958378*^9, 3.728044343151896*^9}, {3.728044393583234*^9, 
   3.728044466540698*^9}, 3.7280447095836163`*^9, {3.728044856722988*^9, 
   3.728044959527645*^9}, {3.728044995179022*^9, 3.728044998104682*^9}, {
   3.728045028753289*^9, 3.728045063548128*^9}, {3.728045464570526*^9, 
   3.728045476328084*^9}, {3.728045812340419*^9, 3.728045836978776*^9}, {
   3.7280461335391397`*^9, 3.728046355530389*^9}, {3.728046392282709*^9, 
   3.728046397281275*^9}, {3.728046429888109*^9, 3.728046434285967*^9}, {
   3.728046509047914*^9, 3.728046577986915*^9}, {3.728048625582951*^9, 
   3.728048658147644*^9}, {3.728048704639155*^9, 3.7280487209829884`*^9}, {
   3.728048763333255*^9, 3.728048783520523*^9}, 3.728048849900649*^9, {
   3.728048881350296*^9, 3.7280488887365723`*^9}, {3.7280489358794527`*^9, 
   3.728048947834031*^9}, {3.7280492952517767`*^9, 3.728049427179392*^9}, {
   3.728049506853256*^9, 3.7280496162697783`*^9}, {3.728050015065921*^9, 
   3.7280500376507397`*^9}, {3.7280500733077374`*^9, 
   3.7280501005796213`*^9}, {3.728089881496944*^9, 3.728089882038129*^9}, {
   3.728090725835964*^9, 3.728090725845487*^9}, {3.728169349750301*^9, 
   3.728169349773612*^9}, {3.728169400997793*^9, 3.728169417906619*^9}, {
   3.728169511798567*^9, 3.728169523731205*^9}, {3.7281696125541363`*^9, 
   3.7281696306368437`*^9}, 3.728226727530678*^9, {3.728226810131266*^9, 
   3.728226816018466*^9}, {3.728226857072884*^9, 3.728226861119492*^9}, 
   3.728245946305786*^9, {3.7282487072286263`*^9, 3.728248709889584*^9}, {
   3.728251170478485*^9, 3.728251170709284*^9}, {3.7282526609079533`*^9, 
   3.728252718943617*^9}, 3.728252776351699*^9, {3.728252825506783*^9, 
   3.7282528275522842`*^9}, {3.7282528645183697`*^9, 3.728252865147182*^9}, 
   3.7282539826691*^9, {3.7291194284711437`*^9, 3.729119493281761*^9}, {
   3.7291195510227203`*^9, 3.729119680314639*^9}, {3.729119849724024*^9, 
   3.7291198585722113`*^9}, {3.7291717881457*^9, 3.729171818317573*^9}, {
   3.729171854440769*^9, 3.729171871385407*^9}, {3.72917192869256*^9, 
   3.7291720371346607`*^9}, {3.729173126976542*^9, 3.729173139435835*^9}, {
   3.729173200255974*^9, 3.729173275110746*^9}, {3.7291733458987417`*^9, 
   3.729173346264063*^9}, {3.729173389656439*^9, 3.729173389676496*^9}, {
   3.729173453362727*^9, 3.729173453374463*^9}, {3.72917500863538*^9, 
   3.729175053102626*^9}, {3.729175506297736*^9, 3.72917551618956*^9}, {
   3.729175643623238*^9, 3.729175648090048*^9}, {3.729176146733549*^9, 
   3.729176146742311*^9}, {3.729178985302376*^9, 3.729179018757811*^9}, {
   3.729179428316293*^9, 3.729179429546385*^9}, {3.729183394535775*^9, 
   3.729183394547886*^9}, {3.729190274999607*^9, 3.72919028248487*^9}, {
   3.729195946539386*^9, 3.729195963662328*^9}, {3.729256050052142*^9, 
   3.729256067693101*^9}, {3.729551202293354*^9, 3.7295512309957952`*^9}, {
   3.7296339987183323`*^9, 3.7296340585670023`*^9}, {3.72963414997302*^9, 
   3.7296342843671503`*^9}, {3.729634402705227*^9, 3.729634445056549*^9}, {
   3.729640374024897*^9, 3.7296403796236258`*^9}, {3.729640414581646*^9, 
   3.729640440813695*^9}, {3.729682825170733*^9, 3.729682850158277*^9}, {
   3.729687964822157*^9, 3.729687976272668*^9}, {3.729688124350306*^9, 
   3.729688350523089*^9}, {3.729688433189711*^9, 3.729688519693812*^9}, {
   3.7296888315942287`*^9, 3.729688853951269*^9}, {3.729688885214087*^9, 
   3.729688980761574*^9}, {3.729689047339793*^9, 3.72968904899368*^9}, {
   3.729689085039751*^9, 3.729689088321394*^9}, {3.729689126691318*^9, 
   3.729689162680344*^9}, {3.729689199269363*^9, 3.729689319536848*^9}, {
   3.7296894525051317`*^9, 3.7296895044680653`*^9}, {3.7296895377540073`*^9, 
   3.729689925517149*^9}, {3.729698780575644*^9, 3.7296988032889967`*^9}, {
   3.72969891708257*^9, 3.729698973930211*^9}, {3.729699028638085*^9, 
   3.729699670715773*^9}, {3.729699704631276*^9, 3.7296997129720783`*^9}, {
   3.729706992747849*^9, 3.729707001634725*^9}, {3.7297070524424753`*^9, 
   3.729707066383106*^9}, {3.7297071244821672`*^9, 3.729707137919736*^9}, {
   3.729707203038928*^9, 3.72970729917104*^9}, {3.729707646971855*^9, 
   3.729707660202389*^9}, {3.7297079419830017`*^9, 3.72970797164758*^9}, {
   3.729708009957337*^9, 3.729708049867004*^9}, {3.729708084939846*^9, 
   3.7297080920715303`*^9}, {3.729708515163211*^9, 3.729708569024414*^9}, {
   3.729708613027947*^9, 3.729708623070286*^9}, {3.729708794113842*^9, 
   3.729708805535737*^9}, {3.729710516671919*^9, 3.7297105167550173`*^9}, {
   3.729715343638529*^9, 3.729715514668886*^9}, {3.72971554649118*^9, 
   3.729715548641029*^9}, {3.729716174415708*^9, 3.7297162284181137`*^9}, {
   3.72971633922969*^9, 3.729716391073391*^9}, {3.729716434095726*^9, 
   3.7297164499844*^9}, {3.72971649749555*^9, 3.7297165316584883`*^9}, {
   3.7297165626756287`*^9, 3.72971664507301*^9}, 3.7297169348805857`*^9, {
   3.729717614590805*^9, 3.72971765727661*^9}, {3.729717764117723*^9, 
   3.729717812221105*^9}, {3.729775043049199*^9, 3.729775109731035*^9}, {
   3.729775163059536*^9, 3.7297751691054783`*^9}, {3.7297752542857*^9, 
   3.729775353153812*^9}, {3.729775426509468*^9, 3.729775439298881*^9}, {
   3.729775501959437*^9, 3.729775509498376*^9}, {3.7297756788539267`*^9, 
   3.729775889524164*^9}, {3.729775998285616*^9, 3.7297760435753508`*^9}, {
   3.729776079463018*^9, 3.72977609036007*^9}, {3.729782135519264*^9, 
   3.729782210852579*^9}, {3.7297822445658417`*^9, 3.729782365608235*^9}, {
   3.729782395984023*^9, 3.7297824531580763`*^9}, {3.729782495606496*^9, 
   3.729782567276868*^9}, {3.729782598609139*^9, 3.729782697457747*^9}, {
   3.729782728227727*^9, 3.7297827325418167`*^9}, {3.729782956333859*^9, 
   3.729782990916945*^9}, {3.7297830295719624`*^9, 3.7297830711784143`*^9}, {
   3.729783101922255*^9, 3.7297831604734583`*^9}, {3.729783202732057*^9, 
   3.7297832061980753`*^9}, {3.729783273985505*^9, 3.729783295285995*^9}, {
   3.729792821533854*^9, 3.7297928677603407`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"880e6f2e-2c72-44a8-8609-320d22162534"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`chopQ$$ = False}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`\[CapitalMu]$$ = 2, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{{
        Hold[$CellContext`\[CapitalMu]$$], 2, "order \[CapitalMu]"}, 0, 4, 
       1}, {
       Hold[
        Column[{
          Row[{
            Button["UN-CHOP", $CellContext`chopQ$$ = False], "        ", 
            Button["CHOP", $CellContext`chopQ$$ = True]}], 
          Manipulate`Place[1]}]], Manipulate`Dump`ThisIsNotAControl}}, 
     Typeset`size$$ = {464.75, {238.69677734375, 16.}}, Typeset`update$$ = 0, 
     Typeset`initDone$$, Typeset`skipInitDone$$ = 
     True, $CellContext`\[CapitalMu]$3679$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      2, StandardForm, "Variables" :> {$CellContext`\[CapitalMu]$$ = 2}, 
       "ControllerVariables" :> {
         Hold[$CellContext`\[CapitalMu]$$, $CellContext`\[CapitalMu]$3679$$, 
          0]}, "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
       With[{$CellContext`cs$ = Map[
            $CellContext`\[Phi][$CellContext`\[CapitalMu]$$], 
            Map[List, 
             Part[$CellContext`bts, 1]]], $CellContext`ts$ = 
          Part[$CellContext`bts, 2]}, 
         If[$CellContext`chopQ$$, Chop, Identity][
          
          FullSimplify[$CellContext`mapMean[$CellContext`\[Alpha], \
$CellContext`\[Beta], $CellContext`x, $CellContext`cs$, $CellContext`ts$, \
$CellContext`\[CapitalMu]$$] - $CellContext`mapMean[
           1/$CellContext`\[Beta], 
            1/$CellContext`\[Alpha], $CellContext`x, $CellContext`cs$, \
$CellContext`ts$, $CellContext`\[CapitalMu]$$]]]], 
       "Specifications" :> {{{$CellContext`\[CapitalMu]$$, 2, 
           "order \[CapitalMu]"}, 0, 4, 1, Appearance -> {"Open", "Labeled"}, 
          ControlPlacement -> 1}, 
         Column[{
           Row[{
             Button["UN-CHOP", $CellContext`chopQ$$ = False], "        ", 
             Button["CHOP", $CellContext`chopQ$$ = True]}], 
           Manipulate`Place[1]}]}, "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{520., {214., 221.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.7297782657737503`*^9, 3.729779234914673*^9, 3.729779309463353*^9, 
   3.729782169097911*^9, 3.729782212385736*^9, 3.729782264223064*^9, {
   3.729782321149456*^9, 3.729782334713049*^9}, {3.729782366911766*^9, 
   3.729782409837133*^9}, 3.729782456605835*^9, 3.729782570409789*^9, {
   3.729782606279397*^9, 3.729782640383834*^9}, {3.729782699444137*^9, 
   3.729782733551096*^9}, {3.7297829709597683`*^9, 3.729782991922044*^9}, {
   3.729783051941214*^9, 3.729783072104805*^9}, {3.729783103752767*^9, 
   3.729783162251648*^9}, 3.72978321464939*^9, 3.729783296029469*^9, {
   3.729792849257351*^9, 3.729792868783079*^9}, 3.7298947011281157`*^9, 
   3.729896006909101*^9, 3.729896153898386*^9, 3.729897296669344*^9, 
   3.73014035613733*^9, 3.730240272921041*^9, 3.7303800923497267`*^9, 
   3.730385743168634*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"307c4f01-b86a-4884-b5bb-ad4879fa790c"]
}, Open  ]],

Cell[TextData[{
 "The other two combinations, where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", 
       SubsuperscriptBox["\[Sigma]", "\[Zeta]", "2"]}], " ", "\[Wedge]", " ", 
      "\[Alpha]"}], "=", 
     SubsuperscriptBox["\[Sigma]", "\[Zeta]", "2"]}]}], TraditionalForm]],
  ExpressionUUID->"3c8c5deb-108d-43ab-9803-c6eeaa41be5a"],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "=", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Sigma]", "\[Xi]", "2"], " ", "\[Wedge]", " ", 
      "\[Alpha]"}], "=", 
     RowBox[{"1", "/", 
      SubsuperscriptBox["\[Sigma]", "\[Xi]", "2"]}]}]}], TraditionalForm]],
  ExpressionUUID->"091d4ea1-9899-4f40-8494-d4a5560376dc"],
 " are not correct. Intuitively, these two combinations do not contain full \
information about the a-priori beliefs in both ",
 Cell[BoxData[
  FormBox["\[Zeta]", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "25c9f435-1258-4111-ae97-95819c0dc110"],
 " and ",
 Cell[BoxData[
  FormBox["\[Xi]", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "f2270d0c-8d5e-48db-beb9-f5b6e221e6c1"],
 ", so we do not expect them to be correct. This fact can be demonstrated \
numerically.\n\nIn the following demonstration, the numerical evidence for \
equality of the two applications of MAP becomes overwhelming. MAP, RLS, and \
KAL match for all settings of ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Sigma]", "\[Xi]", "2"], TraditionalForm]],
  ExpressionUUID->"43777bf0-347f-4339-a30b-caaca26375ea"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Sigma]", "\[Zeta]", "2"], TraditionalForm]],
  ExpressionUUID->"03f7d140-bb9e-4b49-a90c-93d03643da4e"],
 ", ",
 Cell[BoxData[
  FormBox["\[CapitalMu]", TraditionalForm]],ExpressionUUID->
  "4e14f357-6e1d-4562-a503-d8a33ad79b0d"],
 " (order of the model), and assignments of ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]],ExpressionUUID->
  "6d988ecb-a118-4856-94a5-c1b3425efc15"],
 " and ",
 Cell[BoxData[
  FormBox["\[Beta]", TraditionalForm]],ExpressionUUID->
  "f755a1b1-ab8a-4891-9c0e-de8f6f0c9f59"],
 ". The one deviation from perfect match concerns KAL. Explore the case where \
the order is around ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalMu]", "=", "4"}], TraditionalForm]],ExpressionUUID->
  "427b4264-a2e3-4974-a79b-bd1e22d45410"],
 ". For high ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Sigma]", "\[Xi]", "2"], TraditionalForm]],
  ExpressionUUID->"6138c40a-4c79-4f97-88b0-ea1e16441c42"],
 " (don\[CloseCurlyQuote]t believe the a-priori estimate of ",
 Cell[BoxData[
  FormBox["\[Xi]", TraditionalForm]],ExpressionUUID->
  "8ede57ef-973c-4114-bf65-08adc80e2d22"],
 ") and low ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Sigma]", "\[Zeta]z", "2"], TraditionalForm]],
  ExpressionUUID->"976c4626-4857-4fb0-9890-7e1c2c476242"],
 " (",
 StyleBox["do",
  FontSlant->"Italic"],
 " believe the observational data), KAL fluctuates wildly. Why? The Kalman \
denominator ",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", "=", 
    RowBox[{
     SubscriptBox["P", "\[Zeta]"], "+", 
     RowBox[{
      RowBox[{"a", "\[Transpose]"}], 
      SubscriptBox["P", "\[Xi]"], "a"}]}]}], TraditionalForm]],
  ExpressionUUID->"f370fac0-c8e6-480a-bb39-fa1c564318d6"],
 " becomes nearly ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "\[Transpose]"}], 
    SubscriptBox["P", "\[Xi]"], "a"}], TraditionalForm]],ExpressionUUID->
  "a6bc1f16-0b8a-4d78-b8ca-1ec54345ea34"],
 ". The Kalman gain, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"K", "=", 
    RowBox[{
     SubscriptBox["P", "\[Xi]"], " ", 
     RowBox[{"a", "\[Transpose]"}], 
     SuperscriptBox["D", 
      RowBox[{"-", "1"}]]}]}], TraditionalForm]],ExpressionUUID->
  "67d8e535-dd07-4789-8b7e-d765ef3ab24d"],
 " is nearly ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["a", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "bc26f308-cc73-4f74-99c5-b2cd9c9df669"],
 ". The covariance update, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"I", "-", 
      RowBox[{"K", " ", "a"}]}], ")"}], "\[CenterDot]", "P"}], 
   TraditionalForm]],ExpressionUUID->"507f8d85-dc1a-442b-8c74-d6548ac0649a"],
 ", becomes ill-conditioned, if not negative, because ",
 Cell[BoxData[
  FormBox[
   RowBox[{"K", " ", "a"}], TraditionalForm]],ExpressionUUID->
  "2f1be427-a6af-4e70-ba49-a962269a03ad"],
 " is near unity. \n\nRenormalized RLS does not suffer from these ills \
because it never subtracts. Renormalized RLS is still exposed to \
ill-conditioning of the information matrix, but that seems numerically to be \
less harmful to the final result. We wrap RLS in ",
 Cell[BoxData[
  FormBox["Quiet", TraditionalForm]], "Code",ExpressionUUID->
  "5bc2626d-10d1-4129-a6ff-b0cfb809366f"],
 " to suppress warnings. There is no free lunch; MAP also shows \
ill-conditioning and is similarly wrapped."
}], "Text",
 CellChangeTimes->{{3.729783790020461*^9, 3.729783833800892*^9}, {
  3.729792752988352*^9, 3.729792754474485*^9}, {3.72979292818992*^9, 
  3.729793090930941*^9}, {3.7297931436578207`*^9, 3.729793265017269*^9}, {
  3.729793300332588*^9, 3.729793320164184*^9}, {3.7297988561592207`*^9, 
  3.729798964992071*^9}},ExpressionUUID->"5fff4966-096a-44cc-ab3c-\
82d0767844e1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "rrlsFit", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"rrlsFit", "[", 
     RowBox[{"\[Sigma]2\[Zeta]_", ",", "\[Sigma]2\[Xi]_"}], "]"}], "[", 
    RowBox[{"\[CapitalMu]_", ",", "trainingSet_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"xs", "=", 
        RowBox[{
        "trainingSet", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], ",", 
       RowBox[{"ys", "=", 
        RowBox[{
        "trainingSet", "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Xi]0", "=", 
          RowBox[{"List", "/@", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"\[CapitalMu]", "+", "1"}]}], "]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\[CapitalLambda]0", "=", 
          RowBox[{
           SuperscriptBox["\[Sigma]2\[Xi]", 
            RowBox[{"-", "1"}]], "*", 
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"\[CapitalMu]", "+", "1"}], "]"}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Xi]", ",", "\[CapitalLambda]"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Xi]", ",", "\[CapitalLambda]"}], "}"}], "=", 
           RowBox[{"Fold", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"rlsUpdate", "[", 
              RowBox[{
               SqrtBox["\[Sigma]2\[Zeta]"], " ", 
               RowBox[{"IdentityMatrix", "[", "1", "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\[Xi]0", ",", "\[CapitalLambda]0"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"List", "/@", "ys"}], ",", 
                RowBox[{"List", "/@", 
                 RowBox[{"partialsFn", "[", 
                  RowBox[{"\[CapitalMu]", ",", "xs"}], "]"}]}]}], "}"}], 
              "\[Transpose]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Xi]", "/", 
             SqrtBox["\[Sigma]2\[Zeta]"]}], ",", "\[CapitalLambda]"}], 
           "}"}]}]}], "]"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.729633130001239*^9, {3.729633467830708*^9, 3.729633492149434*^9}, {
   3.7296337563259163`*^9, 3.729633881138937*^9}, {3.729634078099366*^9, 
   3.729634114632291*^9}, {3.729634488868413*^9, 3.729634543490809*^9}, {
   3.729634604318096*^9, 3.729634609788732*^9}, {3.729634698866778*^9, 
   3.7296346994928493`*^9}, {3.729634739708737*^9, 3.729634753142261*^9}, {
   3.729634799344757*^9, 3.7296347996478977`*^9}, {3.729634920657688*^9, 
   3.729634927950851*^9}, {3.729634993197016*^9, 3.729635007292894*^9}, {
   3.729640041813924*^9, 3.729640137924788*^9}, {3.72964025016105*^9, 
   3.729640319535129*^9}, {3.7296827987466717`*^9, 3.729682819296286*^9}, {
   3.729683287333426*^9, 3.729683287716338*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"88f5a1ae-eef7-4c06-a0db-0ec2d09b17e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Alpha]\[Beta]Bishop", "=", "True"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "x", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"terms", "=", 
            RowBox[{"symbolicPowers", "[", 
             RowBox[{"x", ",", "\[CapitalMu]"}], "]"}]}], ",", 
           RowBox[{"cs", "=", 
            RowBox[{
             RowBox[{"\[Phi]", "[", "\[CapitalMu]", "]"}], "/@", 
             RowBox[{"List", "/@", 
              RowBox[{
              "bts", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}]}]}]}], ",", 
           RowBox[{"ts", "=", 
            RowBox[{
            "bts", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           ",", 
           RowBox[{"\[Sigma]\[Zeta]2", "=", 
            SuperscriptBox["10.", 
             RowBox[{"2", "log\[Sigma]\[Zeta]"}]]}], ",", 
           RowBox[{"\[Sigma]\[Xi]2", "=", 
            SuperscriptBox["10.", 
             RowBox[{"2", "log\[Sigma]\[Xi]"}]]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"normal", "=", 
              RowBox[{"mleFit", "[", 
               RowBox[{"\[CapitalMu]", ",", "bts"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"kalman", "=", 
              RowBox[{
               RowBox[{"kalFit", "[", 
                RowBox[{"\[Sigma]\[Zeta]2", ",", "\[Sigma]\[Xi]2"}], "]"}], 
               "[", 
               RowBox[{"\[CapitalMu]", ",", "bts"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"rrls", "=", 
              RowBox[{"Quiet", "@", 
               RowBox[{
                RowBox[{"rrlsFit", "[", 
                 RowBox[{"\[Sigma]\[Zeta]2", ",", "\[Sigma]\[Xi]2"}], "]"}], 
                "[", 
                RowBox[{"\[CapitalMu]", ",", "bts"}], "]"}]}]}]}], "}"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Alpha]", "=", 
                RowBox[{"If", "[", 
                 RowBox[{"\[Alpha]\[Beta]Bishop", ",", 
                  FractionBox["1", "\[Sigma]\[Xi]2"], ",", 
                  "\[Sigma]\[Zeta]2"}], "]"}]}], ",", 
               RowBox[{"\[Beta]", "=", 
                RowBox[{"If", "[", 
                 RowBox[{"\[Alpha]\[Beta]Bishop", ",", 
                  FractionBox["1", "\[Sigma]\[Zeta]2"], ",", 
                  "\[Sigma]\[Xi]2"}], "]"}]}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mleFn", "=", 
                  RowBox[{"terms", ".", "normal"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"kalFn", "=", 
                  RowBox[{
                   RowBox[{"{", "terms", "}"}], ".", 
                   RowBox[{
                   "kalman", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"mapFn", "=", 
                  RowBox[{"Quiet", "@", 
                   RowBox[{"mapMean", "[", 
                    RowBox[{
                    "\[Alpha]", ",", "\[Beta]", ",", "x", ",", "cs", ",", 
                    "ts", ",", "\[CapitalMu]"}], "]"}]}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"rlsFn", "=", 
                  RowBox[{
                   RowBox[{"{", "terms", "}"}], ".", 
                   RowBox[{
                   "rrls", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"With", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"lp", "=", 
                   RowBox[{"ListPlot", "[", 
                    RowBox[{
                    RowBox[{"bts", "\[Transpose]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"PlotMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Graphics", "@", 
                    RowBox[{"{", 
                    RowBox[{"Blue", ",", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}], 
                    "}"}]}], ",", ".05"}], "}"}]}]}], "]"}]}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Module", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"showlist", "=", 
                    RowBox[{"{", 
                    RowBox[{"lp", ",", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{"2.", "\[Pi]", " ", "x"}], "]"}],
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0.", ",", "1."}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Thick", ",", 
                    StyleBox["Green",
                    Background->RGBColor[1, 1, 0]]}], "}"}]}]}], "]"}]}], 
                    "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"mleQ", ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"showlist", ",", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox["mleFn",
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    StyleBox["Orange",
                    Background->RGBColor[1, 1, 0]], "}"}]}]}], "]"}]}], 
                    "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{"rlsQ", ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"showlist", ",", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox["rlsFn",
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    StyleBox["Purple",
                    Background->RGBColor[1, 1, 0]], "}"}]}]}], "]"}]}], 
                    "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"kalQ", ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"showlist", ",", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox["kalFn",
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    StyleBox["Cyan",
                    Background->RGBColor[1, 1, 0]], "}"}]}]}], "]"}]}], 
                    "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{"mapQ", ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"showlist", ",", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    StyleBox["mapFn",
                    Background->RGBColor[1, 1, 0]], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    StyleBox["Magenta",
                    Background->RGBColor[1, 1, 0]], "}"}]}]}], "]"}]}], 
                    "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Quiet", "@", 
                    RowBox[{"Show", "[", 
                    RowBox[{"showlist", ",", 
                    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
                    RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<\[Zeta]\>\"", ",", "\"\<\>\""}], "}"}], ",", 
                    
                    RowBox[{"{", 
                    RowBox[{"\"\<\[Xi]\>\"", ",", 
                    RowBox[{"Grid", "[", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<\[Alpha]: \>\"", ",", "\[Alpha]", ",", 
                    "\"\<\[Beta]:\>\"", ",", "\[Beta]"}], "}"}], "}"}], 
                    "]"}]}], "\[IndentingNewLine]", "}"}]}], "}"}]}]}], 
                    "]"}]}]}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
        "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Column", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"SetterBar", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "\[Alpha]\[Beta]Bishop", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "True", "\[Rule]", 
             "\"\<\[Alpha] = \!\(\*FractionBox[\(1\), SubsuperscriptBox[\(\
\[Sigma]\), \(\[Xi]\), \(2\)]]\), \[Beta] = \!\(\*FractionBox[\(1\), \
SubsuperscriptBox[\(\[Sigma]\), \(\[Zeta]\), \(2\)]]\)\>\""}], ",", 
            RowBox[{
            "False", "\[Rule]", 
             "\"\<\[Alpha] = \!\(\*SubsuperscriptBox[\(\[Sigma]\), \
\(\[Zeta]\), \(2\)]\), \[Beta] = \!\(\*SubsuperscriptBox[\(\[Sigma]\), \
\(\[Xi]\), \(2\)]\)\>\""}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Row", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Button", "[", 
             RowBox[{"\"\<RESET\>\"", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[CapitalMu]", "=", "4"}], ";", 
                 RowBox[{"log\[Sigma]\[Xi]", "=", ".5"}], ";", 
                 RowBox[{"log\[Sigma]\[Zeta]", "=", 
                  RowBox[{"-", "1.5"}]}]}], ")"}], "&"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Control", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"kalQ", ",", "True", ",", "\"\<        KAL\>\""}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Control", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"rlsQ", ",", "True", ",", "\"\<        RLS\>\""}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Control", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"mleQ", ",", "False", ",", "\"\<        MLE\>\""}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Control", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"mapQ", ",", "True", ",", "\"\<        MAP\>\""}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}]}], 
           "}"}], ",", 
          RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\[CapitalMu]", ",", "4", ",", "\"\<order \[CapitalMu]\>\""}], 
            "}"}], ",", "0", ",", "16", ",", "1", ",", 
           RowBox[{"Appearance", "\[Rule]", 
            RowBox[{"{", "\"\<Labeled\>\"", "}"}]}]}], "}"}], "]"}], ",", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "log\[Sigma]\[Xi]", ",", ".5", ",", 
             "\"\<log \[Sigma]\[Xi] (KAL)\>\""}], "}"}], ",", 
           RowBox[{"-", "3"}], ",", " ", "5", ",", 
           RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"log\[Sigma]\[Zeta]", ",", 
             RowBox[{"-", "1.5"}], ",", "\"\<log \[Sigma]\[Zeta] (KAL)\>\""}],
             "}"}], ",", 
           RowBox[{"-", "7"}], ",", "3", ",", 
           RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
         "]"}]}], "}"}], "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727884681931381*^9, 3.7278848244947367`*^9}, 
   3.727884861217602*^9, {3.727884975910451*^9, 3.7278849940673532`*^9}, {
   3.727885103521431*^9, 3.727885154698123*^9}, {3.72788520225443*^9, 
   3.727885279820177*^9}, {3.727885496115718*^9, 3.727885517688189*^9}, {
   3.72788559395383*^9, 3.727885598972475*^9}, {3.7278856296542664`*^9, 
   3.727885630876935*^9}, {3.727885695972756*^9, 3.727885696864628*^9}, {
   3.727886633660364*^9, 3.72788671287046*^9}, {3.727886975364171*^9, 
   3.727886975439041*^9}, {3.727903476653379*^9, 3.7279034819231358`*^9}, {
   3.727903531862627*^9, 3.727903539245574*^9}, 3.727913149489944*^9, {
   3.727915429732944*^9, 3.7279154437948627`*^9}, {3.727915750998211*^9, 
   3.7279158447033873`*^9}, {3.7279213832695303`*^9, 3.72792149154887*^9}, {
   3.727921523149373*^9, 3.72792161270367*^9}, {3.72792165300301*^9, 
   3.727921654632832*^9}, {3.727921753282296*^9, 3.727921753360197*^9}, {
   3.727924008558401*^9, 3.727924045018003*^9}, {3.727924293814445*^9, 
   3.727924370827516*^9}, 3.727965590613636*^9, {3.7279686551525917`*^9, 
   3.727968670349081*^9}, {3.7279689406605043`*^9, 3.727969019631563*^9}, {
   3.727970883056108*^9, 3.727970945128386*^9}, {3.727971005813472*^9, 
   3.727971023734253*^9}, {3.727990640753121*^9, 3.727990674786282*^9}, {
   3.727990711779483*^9, 3.727990808626033*^9}, {3.727991307012423*^9, 
   3.727991307022031*^9}, {3.7279932412769613`*^9, 3.7279932949280367`*^9}, {
   3.7279933910397243`*^9, 3.727993398358789*^9}, {3.727993778490755*^9, 
   3.72799379332897*^9}, {3.727993826040863*^9, 3.7279938751552763`*^9}, {
   3.727993956673335*^9, 3.727993958184173*^9}, 3.727994128012043*^9, {
   3.7280354067714148`*^9, 3.7280354258611927`*^9}, {3.728035634299762*^9, 
   3.728035732029833*^9}, {3.72803585641748*^9, 3.728035906176405*^9}, {
   3.728038924314391*^9, 3.728039041653799*^9}, {3.728039077026232*^9, 
   3.72803913265169*^9}, {3.728039194847865*^9, 3.728039320044661*^9}, {
   3.728044256958378*^9, 3.728044343151896*^9}, {3.728044393583234*^9, 
   3.728044466540698*^9}, 3.7280447095836163`*^9, {3.728044856722988*^9, 
   3.728044959527645*^9}, {3.728044995179022*^9, 3.728044998104682*^9}, {
   3.728045028753289*^9, 3.728045063548128*^9}, {3.728045464570526*^9, 
   3.728045476328084*^9}, {3.728045812340419*^9, 3.728045836978776*^9}, {
   3.7280461335391397`*^9, 3.728046355530389*^9}, {3.728046392282709*^9, 
   3.728046397281275*^9}, {3.728046429888109*^9, 3.728046434285967*^9}, {
   3.728046509047914*^9, 3.728046577986915*^9}, {3.728048625582951*^9, 
   3.728048658147644*^9}, {3.728048704639155*^9, 3.7280487209829884`*^9}, {
   3.728048763333255*^9, 3.728048783520523*^9}, 3.728048849900649*^9, {
   3.728048881350296*^9, 3.7280488887365723`*^9}, {3.7280489358794527`*^9, 
   3.728048947834031*^9}, {3.7280492952517767`*^9, 3.728049427179392*^9}, {
   3.728049506853256*^9, 3.7280496162697783`*^9}, {3.728050015065921*^9, 
   3.7280500376507397`*^9}, {3.7280500733077374`*^9, 
   3.7280501005796213`*^9}, {3.728089881496944*^9, 3.728089882038129*^9}, {
   3.728090725835964*^9, 3.728090725845487*^9}, {3.728169349750301*^9, 
   3.728169349773612*^9}, {3.728169400997793*^9, 3.728169417906619*^9}, {
   3.728169511798567*^9, 3.728169523731205*^9}, {3.7281696125541363`*^9, 
   3.7281696306368437`*^9}, 3.728226727530678*^9, {3.728226810131266*^9, 
   3.728226816018466*^9}, {3.728226857072884*^9, 3.728226861119492*^9}, 
   3.728245946305786*^9, {3.7282487072286263`*^9, 3.728248709889584*^9}, {
   3.728251170478485*^9, 3.728251170709284*^9}, {3.7282526609079533`*^9, 
   3.728252718943617*^9}, 3.728252776351699*^9, {3.728252825506783*^9, 
   3.7282528275522842`*^9}, {3.7282528645183697`*^9, 3.728252865147182*^9}, 
   3.7282539826691*^9, {3.7291194284711437`*^9, 3.729119493281761*^9}, {
   3.7291195510227203`*^9, 3.729119680314639*^9}, {3.729119849724024*^9, 
   3.7291198585722113`*^9}, {3.7291717881457*^9, 3.729171818317573*^9}, {
   3.729171854440769*^9, 3.729171871385407*^9}, {3.72917192869256*^9, 
   3.7291720371346607`*^9}, {3.729173126976542*^9, 3.729173139435835*^9}, {
   3.729173200255974*^9, 3.729173275110746*^9}, {3.7291733458987417`*^9, 
   3.729173346264063*^9}, {3.729173389656439*^9, 3.729173389676496*^9}, {
   3.729173453362727*^9, 3.729173453374463*^9}, {3.72917500863538*^9, 
   3.729175053102626*^9}, {3.729175506297736*^9, 3.72917551618956*^9}, {
   3.729175643623238*^9, 3.729175648090048*^9}, {3.729176146733549*^9, 
   3.729176146742311*^9}, {3.729178985302376*^9, 3.729179018757811*^9}, {
   3.729179428316293*^9, 3.729179429546385*^9}, {3.729183394535775*^9, 
   3.729183394547886*^9}, {3.729190274999607*^9, 3.72919028248487*^9}, {
   3.729195946539386*^9, 3.729195963662328*^9}, {3.729256050052142*^9, 
   3.729256067693101*^9}, {3.729551202293354*^9, 3.7295512309957952`*^9}, {
   3.7296339987183323`*^9, 3.7296340585670023`*^9}, {3.72963414997302*^9, 
   3.7296342843671503`*^9}, {3.729634402705227*^9, 3.729634445056549*^9}, {
   3.729640374024897*^9, 3.7296403796236258`*^9}, {3.729640414581646*^9, 
   3.729640440813695*^9}, {3.729682825170733*^9, 3.729682850158277*^9}, {
   3.729687964822157*^9, 3.729687976272668*^9}, {3.729688124350306*^9, 
   3.729688350523089*^9}, {3.729688433189711*^9, 3.729688519693812*^9}, {
   3.7296888315942287`*^9, 3.729688853951269*^9}, {3.729688885214087*^9, 
   3.729688980761574*^9}, {3.729689047339793*^9, 3.72968904899368*^9}, {
   3.729689085039751*^9, 3.729689088321394*^9}, {3.729689126691318*^9, 
   3.729689162680344*^9}, {3.729689199269363*^9, 3.729689319536848*^9}, {
   3.7296894525051317`*^9, 3.7296895044680653`*^9}, {3.7296895377540073`*^9, 
   3.729689925517149*^9}, {3.729698780575644*^9, 3.7296988032889967`*^9}, {
   3.72969891708257*^9, 3.729698973930211*^9}, {3.729699028638085*^9, 
   3.729699670715773*^9}, {3.729699704631276*^9, 3.7296997129720783`*^9}, {
   3.729706992747849*^9, 3.729707001634725*^9}, {3.7297070524424753`*^9, 
   3.729707066383106*^9}, {3.7297071244821672`*^9, 3.729707137919736*^9}, {
   3.729707203038928*^9, 3.72970729917104*^9}, {3.729707646971855*^9, 
   3.729707660202389*^9}, {3.7297079419830017`*^9, 3.72970797164758*^9}, {
   3.729708009957337*^9, 3.729708049867004*^9}, {3.729708084939846*^9, 
   3.7297080920715303`*^9}, {3.729708515163211*^9, 3.729708569024414*^9}, {
   3.729708613027947*^9, 3.729708623070286*^9}, {3.729708794113842*^9, 
   3.729708805535737*^9}, {3.729710516671919*^9, 3.7297105167550173`*^9}, {
   3.729784342249545*^9, 3.7297847167390738`*^9}, {3.729784762209856*^9, 
   3.7297847785042458`*^9}, {3.729784818040599*^9, 3.7297849058292437`*^9}, {
   3.729784947378476*^9, 3.7297849866650257`*^9}, {3.729790334304122*^9, 
   3.7297904006081543`*^9}, {3.7297904543011217`*^9, 3.729790469826312*^9}, {
   3.729790510736865*^9, 3.729790515646512*^9}, {3.729790569437749*^9, 
   3.729790630375985*^9}, {3.729790726049513*^9, 3.7297908347358427`*^9}, {
   3.729790886318983*^9, 3.7297908985495443`*^9}, {3.729790931251046*^9, 
   3.72979112317486*^9}, {3.72979116931327*^9, 3.729791269353731*^9}, {
   3.729791359892681*^9, 3.729791406067814*^9}, {3.7297914485241547`*^9, 
   3.72979144921026*^9}, {3.729791484698999*^9, 3.729791499044384*^9}, {
   3.729791566561154*^9, 3.729791584345121*^9}, {3.7297916430977707`*^9, 
   3.7297917327178802`*^9}, {3.729791770348117*^9, 3.729791837674281*^9}, {
   3.729895980928556*^9, 3.729895981310779*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"75601b81-22f9-4a0c-a791-9b3d255dc64c"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`\[Alpha]\[Beta]Bishop$$ = True}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`kalQ$$ = 
     True, $CellContext`log\[Sigma]\[Zeta]$$ = -1.5, $CellContext`log\[Sigma]\
\[Xi]$$ = 0.5, $CellContext`mapQ$$ = True, $CellContext`mleQ$$ = 
     False, $CellContext`rlsQ$$ = True, $CellContext`\[CapitalMu]$$ = 4, 
     Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
        Hold[$CellContext`kalQ$$], True, "        KAL"}, {True, False}}, {{
        Hold[$CellContext`rlsQ$$], True, "        RLS"}, {True, False}}, {{
        Hold[$CellContext`mleQ$$], False, "        MLE"}, {True, False}}, {{
        Hold[$CellContext`mapQ$$], True, "        MAP"}, {True, False}}, {{
        Hold[$CellContext`\[CapitalMu]$$], 4, "order \[CapitalMu]"}, 0, 16, 
       1}, {{
        Hold[$CellContext`log\[Sigma]\[Xi]$$], 0.5, 
        "log \[Sigma]\[Xi] (KAL)"}, -3, 5}, {{
        Hold[$CellContext`log\[Sigma]\[Zeta]$$], -1.5, 
        "log \[Sigma]\[Zeta] (KAL)"}, -7, 3}, {
       Hold[
        Column[{
          SetterBar[
           Dynamic[$CellContext`\[Alpha]\[Beta]Bishop$$], {
           True -> "\[Alpha] = \!\(\*FractionBox[\(1\), SubsuperscriptBox[\(\
\[Sigma]\), \(\[Xi]\), \(2\)]]\), \[Beta] = \!\(\*FractionBox[\(1\), \
SubsuperscriptBox[\(\[Sigma]\), \(\[Zeta]\), \(2\)]]\)", False -> 
            "\[Alpha] = \!\(\*SubsuperscriptBox[\(\[Sigma]\), \(\[Zeta]\), \
\(2\)]\), \[Beta] = \!\(\*SubsuperscriptBox[\(\[Sigma]\), \(\[Xi]\), \
\(2\)]\)"}], 
          Row[{
            Button[
            "RESET", ($CellContext`\[CapitalMu]$$ = 
              4; $CellContext`log\[Sigma]\[Xi]$$ = 
              0.5; $CellContext`log\[Sigma]\[Zeta]$$ = -1.5)& ], 
            Manipulate`Place[1], 
            Manipulate`Place[2], 
            Manipulate`Place[3], 
            Manipulate`Place[4]}, Frame -> All], 
          Manipulate`Place[5], 
          Manipulate`Place[6], 
          Manipulate`Place[7]}]], Manipulate`Dump`ThisIsNotAControl}}, 
     Typeset`size$$ = {450., {146., 152.}}, Typeset`update$$ = 0, 
     Typeset`initDone$$, Typeset`skipInitDone$$ = 
     True, $CellContext`kalQ$3700$$ = False, $CellContext`rlsQ$3701$$ = 
     False, $CellContext`mleQ$3702$$ = False, $CellContext`mapQ$3703$$ = 
     False, $CellContext`\[CapitalMu]$3704$$ = 
     0, $CellContext`log\[Sigma]\[Xi]$3705$$ = 
     0, $CellContext`log\[Sigma]\[Zeta]$3706$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      2, StandardForm, 
       "Variables" :> {$CellContext`kalQ$$ = 
         True, $CellContext`log\[Sigma]\[Zeta]$$ = -1.5, $CellContext`log\
\[Sigma]\[Xi]$$ = 0.5, $CellContext`mapQ$$ = True, $CellContext`mleQ$$ = 
         False, $CellContext`rlsQ$$ = True, $CellContext`\[CapitalMu]$$ = 4}, 
       "ControllerVariables" :> {
         Hold[$CellContext`kalQ$$, $CellContext`kalQ$3700$$, False], 
         Hold[$CellContext`rlsQ$$, $CellContext`rlsQ$3701$$, False], 
         Hold[$CellContext`mleQ$$, $CellContext`mleQ$3702$$, False], 
         Hold[$CellContext`mapQ$$, $CellContext`mapQ$3703$$, False], 
         Hold[$CellContext`\[CapitalMu]$$, $CellContext`\[CapitalMu]$3704$$, 
          0], 
         Hold[$CellContext`log\[Sigma]\[Xi]$$, \
$CellContext`log\[Sigma]\[Xi]$3705$$, 0], 
         Hold[$CellContext`log\[Sigma]\[Zeta]$$, $CellContext`log\[Sigma]\
\[Zeta]$3706$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
       Module[{$CellContext`x$}, 
         With[{$CellContext`terms$ = \
$CellContext`symbolicPowers[$CellContext`x$, $CellContext`\[CapitalMu]$$], \
$CellContext`cs$ = Map[
             $CellContext`\[Phi][$CellContext`\[CapitalMu]$$], 
             Map[List, 
              Part[$CellContext`bts, 1]]], $CellContext`ts$ = 
           Part[$CellContext`bts, 2], $CellContext`\[Sigma]\[Zeta]2$ = 
           10.^(2 $CellContext`log\[Sigma]\[Zeta]$$), $CellContext`\[Sigma]\
\[Xi]2$ = 10.^(2 $CellContext`log\[Sigma]\[Xi]$$)}, 
          
          With[{$CellContext`normal$ = $CellContext`mleFit[$CellContext`\
\[CapitalMu]$$, $CellContext`bts], $CellContext`kalman$ = \
$CellContext`kalFit[$CellContext`\[Sigma]\[Zeta]2$, \
$CellContext`\[Sigma]\[Xi]2$][$CellContext`\[CapitalMu]$$, $CellContext`bts], \
$CellContext`rrls$ = Quiet[
              $CellContext`rrlsFit[$CellContext`\[Sigma]\[Zeta]2$, \
$CellContext`\[Sigma]\[Xi]2$][$CellContext`\[CapitalMu]$$, \
$CellContext`bts]]}, 
           
           With[{$CellContext`\[Alpha]$ = 
             If[$CellContext`\[Alpha]\[Beta]Bishop$$, 
               1/$CellContext`\[Sigma]\[Xi]2$, \
$CellContext`\[Sigma]\[Zeta]2$], $CellContext`\[Beta]$ = 
             If[$CellContext`\[Alpha]\[Beta]Bishop$$, 
               1/$CellContext`\[Sigma]\[Zeta]2$, \
$CellContext`\[Sigma]\[Xi]2$]}, 
            
            With[{$CellContext`mleFn$ = 
              Dot[$CellContext`terms$, $CellContext`normal$], \
$CellContext`kalFn$ = Dot[{$CellContext`terms$}, 
                Part[$CellContext`kalman$, 1]], $CellContext`mapFn$ = Quiet[
                $CellContext`mapMean[$CellContext`\[Alpha]$, $CellContext`\
\[Beta]$, $CellContext`x$, $CellContext`cs$, $CellContext`ts$, $CellContext`\
\[CapitalMu]$$]], $CellContext`rlsFn$ = Dot[{$CellContext`terms$}, 
                Part[$CellContext`rrls$, 1]]}, 
             With[{$CellContext`lp$ = ListPlot[
                 Transpose[$CellContext`bts], PlotMarkers -> {
                   Graphics[{Blue, 
                    Circle[{0, 0}, 1]}], 0.05}]}, 
              Module[{$CellContext`showlist$ = {$CellContext`lp$, 
                  Plot[
                   Sin[2. Pi $CellContext`x$], {$CellContext`x$, 0., 1.}, 
                   PlotStyle -> {Thick, Green}]}}, If[$CellContext`mleQ$$, 
                 AppendTo[$CellContext`showlist$, 
                  
                  Plot[$CellContext`mleFn$, {$CellContext`x$, 0, 1}, 
                   PlotStyle -> {Orange}]]]; If[$CellContext`rlsQ$$, 
                 AppendTo[$CellContext`showlist$, 
                  
                  Plot[$CellContext`rlsFn$, {$CellContext`x$, 0, 1}, 
                   PlotStyle -> {Purple}]]]; If[$CellContext`kalQ$$, 
                 AppendTo[$CellContext`showlist$, 
                  
                  Plot[$CellContext`kalFn$, {$CellContext`x$, 0, 1}, 
                   PlotStyle -> {Cyan}]]]; If[$CellContext`mapQ$$, 
                 AppendTo[$CellContext`showlist$, 
                  
                  Plot[$CellContext`mapFn$, {$CellContext`x$, 0, 1}, 
                   PlotStyle -> {Magenta}]]]; Quiet[
                 
                 Show[$CellContext`showlist$, Frame -> True, ImageSize -> 
                  Medium, FrameLabel -> {{"\[Zeta]", ""}, {"\[Xi]", 
                    
                    Grid[{{"\[Alpha]: ", $CellContext`\[Alpha]$, 
                    "\[Beta]:", $CellContext`\[Beta]$}}]}}]]]]]]]]], 
       "Specifications" :> {{{$CellContext`kalQ$$, True, "        KAL"}, {
          True, False}, ControlPlacement -> 
          1}, {{$CellContext`rlsQ$$, True, "        RLS"}, {True, False}, 
          ControlPlacement -> 
          2}, {{$CellContext`mleQ$$, False, "        MLE"}, {True, False}, 
          ControlPlacement -> 
          3}, {{$CellContext`mapQ$$, True, "        MAP"}, {True, False}, 
          ControlPlacement -> 
          4}, {{$CellContext`\[CapitalMu]$$, 4, "order \[CapitalMu]"}, 0, 16, 
          1, Appearance -> {"Labeled"}, ControlPlacement -> 
          5}, {{$CellContext`log\[Sigma]\[Xi]$$, 0.5, 
           "log \[Sigma]\[Xi] (KAL)"}, -3, 5, Appearance -> "Labeled", 
          ControlPlacement -> 
          6}, {{$CellContext`log\[Sigma]\[Zeta]$$, -1.5, 
           "log \[Sigma]\[Zeta] (KAL)"}, -7, 3, Appearance -> "Labeled", 
          ControlPlacement -> 7}, 
         Column[{
           SetterBar[
            Dynamic[$CellContext`\[Alpha]\[Beta]Bishop$$], {
            True -> "\[Alpha] = \!\(\*FractionBox[\(1\), SubsuperscriptBox[\(\
\[Sigma]\), \(\[Xi]\), \(2\)]]\), \[Beta] = \!\(\*FractionBox[\(1\), \
SubsuperscriptBox[\(\[Sigma]\), \(\[Zeta]\), \(2\)]]\)", False -> 
             "\[Alpha] = \!\(\*SubsuperscriptBox[\(\[Sigma]\), \(\[Zeta]\), \
\(2\)]\), \[Beta] = \!\(\*SubsuperscriptBox[\(\[Sigma]\), \(\[Xi]\), \
\(2\)]\)"}], 
           Row[{
             Button[
             "RESET", ($CellContext`\[CapitalMu]$$ = 
               4; $CellContext`log\[Sigma]\[Xi]$$ = 
               0.5; $CellContext`log\[Sigma]\[Zeta]$$ = -1.5)& ], 
             Manipulate`Place[1], 
             Manipulate`Place[2], 
             Manipulate`Place[3], 
             Manipulate`Place[4]}, Frame -> All], 
           Manipulate`Place[5], 
           Manipulate`Place[6], 
           Manipulate`Place[7]}]}, "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{505., {275., 282.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.729784381207548*^9, 3.7297844163676357`*^9, {3.729784455537157*^9, 
   3.7297844797500753`*^9}, 3.72978454961663*^9, {3.729784579881394*^9, 
   3.729784637108739*^9}, {3.729784681722384*^9, 3.729784717710224*^9}, 
   3.729784779431076*^9, 3.729784841514982*^9, 3.729784874445601*^9, 
   3.7297849071649437`*^9, 3.729784987534523*^9, {3.729790344993404*^9, 
   3.729790401881814*^9}, 3.729790471804407*^9, 3.729790516129326*^9, {
   3.729790611352343*^9, 3.729790631024955*^9}, 3.7297908377804728`*^9, 
   3.729791052324683*^9, 3.729791125345771*^9, 3.729791176940489*^9, {
   3.729791226113031*^9, 3.7297912700673437`*^9}, {3.729791366986239*^9, 
   3.7297914073716087`*^9}, 3.729791450410841*^9, {3.7297914878437138`*^9, 
   3.729791499782393*^9}, {3.729791573356472*^9, 3.7297915848841753`*^9}, {
   3.729791700338099*^9, 3.729791721639224*^9}, 3.729791807132395*^9, 
   3.729894701378387*^9, {3.729895982956667*^9, 3.729896007208116*^9}, 
   3.729896154153077*^9, 3.72989729688218*^9, 3.730140356463293*^9, 
   3.7302402732388268`*^9, 3.730380092431903*^9, 3.730385743223937*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"5e7daecc-9a2a-4913-829e-37432afdf107"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Covariance of the Estimate", "Subsection",
 CellChangeTimes->{{3.729182953019375*^9, 
  3.7291829585476*^9}},ExpressionUUID->"a346459e-9fcf-4e77-95ad-ea44400ae082"],

Cell[TextData[{
 "Consider Bishop' s equation 1.71 ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["s", "2"], "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["\[Beta]", 
      RowBox[{"\[ThinSpace]", 
       RowBox[{"-", "1"}]}]], "+", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Phi]", "\[ThinSpace]", "(", "x", ")"}], "\[Transpose]"}], 
      "\[CenterDot]", "S", "\[CenterDot]", 
      RowBox[{"\[Phi]", "\[ThinSpace]", "(", "x", ")"}]}]}]}], 
   TraditionalForm]],ExpressionUUID->"6dfcd263-a97d-4bbd-8240-18fb850b2a01"],
 ", which does not depend on the output data ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "n"], TraditionalForm]],ExpressionUUID->
  "2c5fff2e-1c1d-406e-901d-41521c38df61"],
 ", just as with KAL and RLS\.7f."
}], "Text",
 CellChangeTimes->{{3.727994165301249*^9, 3.7279941851829967`*^9}, {
  3.72808526244471*^9, 3.728085323623013*^9}, {3.728253500899654*^9, 
  3.728253506076968*^9}, {3.729175093713661*^9, 3.7291750988463297`*^9}, {
  3.729189840044029*^9, 3.7291898706889067`*^9}, {3.7291903288986673`*^9, 
  3.729190329452014*^9}, {3.7297115752429132`*^9, 
  3.729711651456718*^9}},ExpressionUUID->"fb7c2896-c8c0-43ad-8c12-\
019a556a3ca8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "mapsSquared", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mapsSquared", "[", 
    RowBox[{
    "\[Alpha]_", ",", "\[Beta]_", ",", "x_", ",", "cs_", ",", 
     "\[CapitalMu]_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"\[Phi]", "[", "\[CapitalMu]", "]"}], "[", "x", "]"}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SuperscriptBox["\[Beta]", 
       RowBox[{"-", "1"}]], "+", 
      RowBox[{
       RowBox[{"{", "a", "}"}], ".", 
       RowBox[{"LinearSolve", "[", 
        RowBox[{
         RowBox[{"sInv", "[", 
          RowBox[{
          "\[Alpha]", ",", "\[Beta]", ",", "cs", ",", "\[CapitalMu]"}], "]"}],
          ",", 
         RowBox[{"List", "/@", "a"}]}], "]"}]}]}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.727994197366062*^9, 3.7279942096588373`*^9}, {
   3.727994247046831*^9, 3.7279942495547533`*^9}, {3.7279943024871273`*^9, 
   3.7279946538407373`*^9}, {3.7280359193758917`*^9, 3.728035920837536*^9}, 
   3.729175085479534*^9, 3.7291756488901587`*^9, {3.729175930984292*^9, 
   3.7291759413745337`*^9}, {3.72918296865281*^9, 3.72918296932966*^9}, {
   3.729195696029108*^9, 3.729195744219352*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"71a5a415-83da-4d91-9288-7d6b203dd2ec"],

Cell[TextData[{
 "Bishop kindly supplies the sigma-bars for his mean. He cites ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "=", "0.005"}], TraditionalForm]],ExpressionUUID->
  "716c6835-a0ca-4e21-a1e5-f1fabb29a20e"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "=", "11.1"}], TraditionalForm]],ExpressionUUID->
  "34eda4a5-047a-4ac4-89f4-ad3002dd4e23"],
 ", which correspond to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sigma]", "\[Zeta]"], "=", 
    FormBox["0.07071",
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "84d7f102-4b43-4dff-aa17-d8119992c171"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sigma]", "\[Xi]"], "=", 
    FormBox["3.333",
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "0925b158-a2eb-4d33-8d5d-20d2fb6b998c"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "10"], 
     SubscriptBox["\[Sigma]", "\[Zeta]"]}], "=", 
    FormBox[
     RowBox[{"-", "1.1505149978319906`"}],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "89a82430-c61c-45d2-8428-421f2038513e"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "10"], 
     SubscriptBox["\[Sigma]", "\[Xi]"]}], "=", 
    FormBox["0.5229",
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "6c4ddb46-0404-4254-a14b-31d303fbb18d"],
 ". These values reproduce Bishop\[CloseCurlyQuote]s figure 1.17 well.\n\n\
Kalman\[CloseCurlyQuote]s output covariance ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]],ExpressionUUID->
  "a880d95f-b2f1-45ad-93d4-7b5e04e54930"],
 " and RLS\[CloseCurlyQuote]s output information ",
 Cell[BoxData[
  FormBox["\[CapitalPi]", TraditionalForm]],ExpressionUUID->
  "85e9a51d-5c4f-4bc8-9a7c-127e8310e19d"],
 " represent uncertainty in the estimated coefficients. These do not directly \
yield uncertainties in the predicted labels, i.e., polynomials evaluated at \
each input point. For those, we follow Bishop\[CloseCurlyQuote]s analysis and \
his equation 1.71."
}], "Text",
 CellChangeTimes->{{3.728047983582913*^9, 3.728048001419952*^9}, {
   3.728048031472519*^9, 3.728048102784032*^9}, 3.728048334620097*^9, {
   3.728048573076227*^9, 3.7280485742423983`*^9}, {3.7291832860169077`*^9, 
   3.729183286905438*^9}, {3.7291909187303047`*^9, 3.729190931736122*^9}, {
   3.729190966915935*^9, 3.72919115612007*^9}, {3.7291913182402887`*^9, 
   3.729191334853733*^9}, {3.729194967822537*^9, 3.7291949964757357`*^9}, {
   3.729195092532947*^9, 3.729195228731798*^9}, {3.7291952960364323`*^9, 
   3.729195346443692*^9}, {3.729195461293686*^9, 3.729195465395809*^9}, {
   3.729195529898984*^9, 3.7291955825492153`*^9}, 3.729196046713995*^9, {
   3.729196202829361*^9, 3.729196223138455*^9}, {3.7291963897537813`*^9, 
   3.7291963938344088`*^9}, {3.729711666635454*^9, 
   3.729711717573139*^9}},ExpressionUUID->"e0445422-d911-42db-a626-\
0070632dcf10"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"terms", "=", 
          RowBox[{"symbolicPowers", "[", 
           RowBox[{"x", ",", "\[CapitalMu]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"cs", "=", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "\[CapitalMu]", "]"}], "/@", 
           RowBox[{"List", "/@", 
            RowBox[{
            "bts", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}]}]}], ",", 
         RowBox[{"ts", "=", 
          RowBox[{
          "bts", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"normal", "=", 
            RowBox[{"mleFit", "[", 
             RowBox[{"\[CapitalMu]", ",", "bts"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"kalman", "=", 
            RowBox[{
             RowBox[{"kalFit", "[", 
              RowBox[{
               SuperscriptBox["10", 
                RowBox[{"2", "log\[Sigma]\[Zeta]"}]], ",", 
               SuperscriptBox["10", 
                RowBox[{"2", "log\[Sigma]\[Xi]"}]]}], "]"}], "[", 
             RowBox[{"\[CapitalMu]", ",", "bts"}], "]"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"mleFn", "=", 
              RowBox[{"terms", ".", "normal"}]}], ",", "\[IndentingNewLine]", 
             
             RowBox[{"kalFn", "=", 
              RowBox[{
               RowBox[{"{", "terms", "}"}], ".", 
               RowBox[{
               "kalman", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"bs2", "=", 
              RowBox[{"mapsSquared", "[", 
               RowBox[{
                SuperscriptBox["10", 
                 RowBox[{"2", "log\[Sigma]\[Zeta]"}]], ",", 
                SuperscriptBox["10", 
                 RowBox[{"2", "log\[Sigma]\[Xi]"}]], ",", "x", ",", "cs", ",",
                 "\[CapitalMu]"}], 
               StyleBox["]",
                Background->RGBColor[1, 1, 0]]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"mapFn", "=", 
              RowBox[{"Quiet", "@", 
               RowBox[{"mapMean", "[", 
                RowBox[{
                 SuperscriptBox["10", 
                  RowBox[{"2", "log\[Sigma]\[Zeta]"}]], ",", 
                 SuperscriptBox["10", 
                  RowBox[{"2", "log\[Sigma]\[Xi]"}]], ",", "x", ",", "cs", 
                 ",", "ts", ",", "\[CapitalMu]"}], "]"}]}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"lp", "=", 
               RowBox[{"ListPlot", "[", 
                RowBox[{
                 RowBox[{"bts", "\[Transpose]"}], ",", "\[IndentingNewLine]", 
                 
                 RowBox[{"PlotMarkers", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Graphics", "@", 
                    RowBox[{"{", 
                    RowBox[{"Blue", ",", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}], 
                    "}"}]}], ",", ".05"}], "}"}]}]}], "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"showlist", "=", 
                 RowBox[{"{", 
                  RowBox[{"lp", ",", 
                   RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"2.", "\[Pi]", " ", "x"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0.", ",", "1."}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Thick", ",", "Green"}], "}"}]}]}], "]"}]}], 
                  "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{"mleQ", ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"showlist", ",", 
                    RowBox[{"Plot", "[", 
                    RowBox[{"mleFn", ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", "Orange", "}"}]}]}], "]"}]}], "]"}]}], "]"}],
                 ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{"kalQ", ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"showlist", ",", "\[IndentingNewLine]", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"kalFn", ",", 
                    RowBox[{"kalFn", "+", 
                    SqrtBox["bs2"]}], ",", 
                    RowBox[{"kalFn", "-", 
                    SqrtBox["bs2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Cyan", ",", 
                    RowBox[{"{", 
                    RowBox[{"Thin", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0", "]"}], ",", "Cyan"}], 
                    "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Thin", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0", "]"}], ",", "Cyan"}], 
                    "}"}]}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"Filling", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"{", "2", "}"}]}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"{", "3", "}"}]}]}], "}"}]}]}], "]"}]}], "]"}]}], 
                 "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{"mapQ", ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"showlist", ",", "\[IndentingNewLine]", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"mapFn", ",", 
                    RowBox[{"mapFn", "+", 
                    SqrtBox["bs2"]}], ",", 
                    RowBox[{"mapFn", "-", 
                    SqrtBox["bs2"]}]}], "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Magenta", ",", 
                    RowBox[{"{", 
                    RowBox[{"Thin", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0", "]"}], ",", "Magenta"}], 
                    "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Thin", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0", "]"}], ",", "Magenta"}], 
                    "}"}]}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Filling", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"{", "2", "}"}]}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"{", "3", "}"}]}]}], "}"}]}]}], "]"}]}], "]"}]}], 
                 "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Quiet", "@", 
                 RowBox[{"Show", "[", 
                  RowBox[{"showlist", ",", 
                   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                   RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<x\>\"", ",", "\"\<t\>\""}], "}"}]}]}], 
                  "]"}]}]}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Button", "[", 
            RowBox[{"\"\<RESET\>\"", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalMu]", "=", "9"}], ";", 
                RowBox[{"log\[Sigma]\[Xi]", "=", 
                 RowBox[{"Log10", "[", 
                  SqrtBox[
                   RowBox[{"1", "/", "0.09"}]], "]"}]}], ";", 
                RowBox[{"log\[Sigma]\[Zeta]", "=", 
                 RowBox[{"Log10", "[", 
                  SqrtBox["0.005"], "]"}]}]}], ")"}], "&"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"kalQ", ",", "True", ",", "\"\<KAL\>\""}], "}"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"mleQ", ",", "False", ",", "\"\<MLE\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"mapQ", ",", "True", ",", "\"\<MAP\>\""}], "}"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}]}], "}"}],
          "}"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\[CapitalMu]", ",", "9", ",", "\"\<order \[CapitalMu]\>\""}], 
           "}"}], ",", "0", ",", "16", ",", "1", ",", 
          RowBox[{"Appearance", "\[Rule]", 
           RowBox[{"{", "\"\<Labeled\>\"", "}"}]}]}], "}"}], "]"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"log\[Sigma]\[Xi]", ",", 
            RowBox[{"Log10", "[", 
             SqrtBox[
              RowBox[{"1", "/", "0.09"}]], "]"}], ",", 
            "\"\<log \[Sigma]\[Xi] (KAL)\>\""}], "}"}], ",", 
          RowBox[{"-", "3"}], ",", " ", "5", ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
        "]"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"log\[Sigma]\[Zeta]", ",", 
            RowBox[{"Log10", "[", 
             SqrtBox["0.005"], "]"}], ",", 
            "\"\<log \[Sigma]\[Zeta] (KAL)\>\""}], "}"}], ",", 
          RowBox[{"-", "5"}], ",", "3", ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
        "]"}], "}"}]}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727884681931381*^9, 3.7278848244947367`*^9}, 
   3.727884861217602*^9, {3.727884975910451*^9, 3.7278849940673532`*^9}, {
   3.727885103521431*^9, 3.727885154698123*^9}, {3.72788520225443*^9, 
   3.727885279820177*^9}, {3.727885496115718*^9, 3.727885517688189*^9}, {
   3.72788559395383*^9, 3.727885598972475*^9}, {3.7278856296542664`*^9, 
   3.727885630876935*^9}, {3.727885695972756*^9, 3.727885696864628*^9}, {
   3.727886633660364*^9, 3.72788671287046*^9}, {3.727886975364171*^9, 
   3.727886975439041*^9}, {3.727903476653379*^9, 3.7279034819231358`*^9}, {
   3.727903531862627*^9, 3.727903539245574*^9}, 3.727913149489944*^9, {
   3.727915429732944*^9, 3.7279154437948627`*^9}, {3.727915750998211*^9, 
   3.7279158447033873`*^9}, {3.7279213832695303`*^9, 3.72792149154887*^9}, {
   3.727921523149373*^9, 3.72792161270367*^9}, {3.72792165300301*^9, 
   3.727921654632832*^9}, {3.727921753282296*^9, 3.727921753360197*^9}, {
   3.727924008558401*^9, 3.727924045018003*^9}, {3.727924293814445*^9, 
   3.727924370827516*^9}, 3.727965590613636*^9, {3.7279686551525917`*^9, 
   3.727968670349081*^9}, {3.7279689406605043`*^9, 3.727969019631563*^9}, {
   3.727970883056108*^9, 3.727970945128386*^9}, {3.727971005813472*^9, 
   3.727971023734253*^9}, {3.727990640753121*^9, 3.727990674786282*^9}, {
   3.727990711779483*^9, 3.727990808626033*^9}, {3.727991307012423*^9, 
   3.727991307022031*^9}, {3.7279932412769613`*^9, 3.7279932949280367`*^9}, {
   3.7279933910397243`*^9, 3.727993398358789*^9}, {3.727993778490755*^9, 
   3.72799379332897*^9}, {3.727993826040863*^9, 3.7279938751552763`*^9}, {
   3.727993956673335*^9, 3.727993958184173*^9}, 3.727994128012043*^9, {
   3.7280354067714148`*^9, 3.7280354258611927`*^9}, {3.728035634299762*^9, 
   3.728035732029833*^9}, {3.72803585641748*^9, 3.728035906176405*^9}, {
   3.728038924314391*^9, 3.728039041653799*^9}, {3.728039077026232*^9, 
   3.72803913265169*^9}, {3.728039194847865*^9, 3.728039320044661*^9}, {
   3.728044256958378*^9, 3.728044343151896*^9}, {3.728044393583234*^9, 
   3.728044466540698*^9}, 3.7280447095836163`*^9, {3.728044856722988*^9, 
   3.728044959527645*^9}, {3.728044995179022*^9, 3.728044998104682*^9}, {
   3.728045028753289*^9, 3.728045063548128*^9}, {3.728045464570526*^9, 
   3.728045476328084*^9}, {3.728045812340419*^9, 3.728045836978776*^9}, {
   3.7280461335391397`*^9, 3.728046355530389*^9}, {3.728046392282709*^9, 
   3.728046397281275*^9}, {3.728046429888109*^9, 3.728046434285967*^9}, {
   3.728046509047914*^9, 3.728046577986915*^9}, {3.728048625582951*^9, 
   3.728048658147644*^9}, {3.728048704639155*^9, 3.7280487209829884`*^9}, {
   3.728048763333255*^9, 3.728048783520523*^9}, 3.728048849900649*^9, {
   3.728048881350296*^9, 3.7280488887365723`*^9}, {3.7280489358794527`*^9, 
   3.728048947834031*^9}, {3.7280492952517767`*^9, 3.728049427179392*^9}, {
   3.728049506853256*^9, 3.7280496162697783`*^9}, {3.728050015065921*^9, 
   3.7280500376507397`*^9}, {3.7280500733077374`*^9, 
   3.7280501005796213`*^9}, {3.728089881496944*^9, 3.728089882038129*^9}, {
   3.728090725835964*^9, 3.728090725845487*^9}, {3.728169349750301*^9, 
   3.728169349773612*^9}, {3.728169400997793*^9, 3.728169417906619*^9}, {
   3.728169511798567*^9, 3.728169523731205*^9}, {3.7281696125541363`*^9, 
   3.7281696306368437`*^9}, 3.728226727530678*^9, {3.728226810131266*^9, 
   3.728226816018466*^9}, {3.728226857072884*^9, 3.728226861119492*^9}, 
   3.728245946305786*^9, {3.7282487072286263`*^9, 3.728248709889584*^9}, {
   3.728251170478485*^9, 3.728251170709284*^9}, {3.7282526609079533`*^9, 
   3.728252718943617*^9}, 3.728252776351699*^9, {3.728252825506783*^9, 
   3.7282528275522842`*^9}, {3.7282528645183697`*^9, 3.728252865147182*^9}, 
   3.7282539826691*^9, {3.7291194284711437`*^9, 3.729119493281761*^9}, {
   3.7291195510227203`*^9, 3.729119680314639*^9}, {3.729119849724024*^9, 
   3.7291198585722113`*^9}, {3.7291717881457*^9, 3.729171818317573*^9}, {
   3.729171854440769*^9, 3.729171871385407*^9}, {3.72917192869256*^9, 
   3.7291720371346607`*^9}, {3.729173126976542*^9, 3.729173139435835*^9}, {
   3.729173200255974*^9, 3.729173275110746*^9}, {3.7291733458987417`*^9, 
   3.729173346264063*^9}, {3.729173389656439*^9, 3.729173389676496*^9}, {
   3.729173453362727*^9, 3.729173453374463*^9}, {3.72917500863538*^9, 
   3.729175053102626*^9}, {3.729175506297736*^9, 3.72917551618956*^9}, {
   3.729175643623238*^9, 3.729175648090048*^9}, {3.729176146733549*^9, 
   3.729176146742311*^9}, {3.729178985302376*^9, 3.729179018757811*^9}, {
   3.729179428316293*^9, 3.729179429546385*^9}, {3.7291833107508097`*^9, 
   3.729183351716688*^9}, {3.729183394435251*^9, 3.729183394441711*^9}, {
   3.729190091733934*^9, 3.729190094653805*^9}, {3.7291901727265663`*^9, 
   3.729190190738206*^9}, 3.7291903189647007`*^9, {3.729190363535774*^9, 
   3.729190420438587*^9}, {3.729190855161989*^9, 3.7291908759621487`*^9}, {
   3.729191173998303*^9, 3.729191310565546*^9}, {3.729191815211359*^9, 
   3.729191966406259*^9}, {3.729192009289757*^9, 3.729192012183796*^9}, 
   3.729192076913485*^9, {3.7291921189255133`*^9, 3.72919222651994*^9}, {
   3.7291934084762163`*^9, 3.7291934717245827`*^9}, {3.729193512347974*^9, 
   3.729193699962986*^9}, {3.7291937883162937`*^9, 3.72919391294538*^9}, {
   3.729193943825762*^9, 3.7291939503531523`*^9}, {3.729194005235033*^9, 
   3.729194075561458*^9}, 3.729195508767318*^9, {3.729196245290443*^9, 
   3.7291962556403313`*^9}, {3.729196364803418*^9, 3.7291963689564*^9}, {
   3.729196403932249*^9, 3.729196414116873*^9}, 3.729551253178636*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"318d1ea7-8e30-4ddd-8869-27ace3ff74f0"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`kalQ$$ = 
    True, $CellContext`log\[Sigma]\[Zeta]$$ = -1.1505149978319906`, \
$CellContext`log\[Sigma]\[Xi]$$ = 0.5228787452803376, $CellContext`mapQ$$ = 
    True, $CellContext`mleQ$$ = False, $CellContext`\[CapitalMu]$$ = 9, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`kalQ$$], True, "KAL"}, {True, False}}, {{
       Hold[$CellContext`mleQ$$], False, "MLE"}, {True, False}}, {{
       Hold[$CellContext`mapQ$$], True, "MAP"}, {True, False}}, {{
       Hold[$CellContext`\[CapitalMu]$$], 9, "order \[CapitalMu]"}, 0, 16, 
      1}, {{
       Hold[$CellContext`log\[Sigma]\[Xi]$$], 0.5228787452803376, 
       "log \[Sigma]\[Xi] (KAL)"}, -3, 5}, {{
       Hold[$CellContext`log\[Sigma]\[Zeta]$$], -1.1505149978319906`, 
       "log \[Sigma]\[Zeta] (KAL)"}, -5, 3}, {
      Hold[
       Grid[{{
          Grid[{{
             Button[
             "RESET", ($CellContext`\[CapitalMu]$$ = 
               9; $CellContext`log\[Sigma]\[Xi]$$ = Log10[
                 Sqrt[1/0.09]]; $CellContext`log\[Sigma]\[Zeta]$$ = Log10[
                 Sqrt[0.005]])& ], 
             Manipulate`Place[1], 
             Manipulate`Place[2], 
             Manipulate`Place[3]}}]}, {
          Manipulate`Place[4]}, {
          Manipulate`Place[5]}, {
          Manipulate`Place[6]}}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {450., {141., 147.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`kalQ$3735$$ = False, $CellContext`mleQ$3736$$ = 
    False, $CellContext`mapQ$3737$$ = 
    False, $CellContext`\[CapitalMu]$3738$$ = 
    0, $CellContext`log\[Sigma]\[Xi]$3739$$ = 
    0, $CellContext`log\[Sigma]\[Zeta]$3740$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`kalQ$$ = 
        True, $CellContext`log\[Sigma]\[Zeta]$$ = -1.1505149978319906`, \
$CellContext`log\[Sigma]\[Xi]$$ = 0.5228787452803376, $CellContext`mapQ$$ = 
        True, $CellContext`mleQ$$ = False, $CellContext`\[CapitalMu]$$ = 9}, 
      "ControllerVariables" :> {
        Hold[$CellContext`kalQ$$, $CellContext`kalQ$3735$$, False], 
        Hold[$CellContext`mleQ$$, $CellContext`mleQ$3736$$, False], 
        Hold[$CellContext`mapQ$$, $CellContext`mapQ$3737$$, False], 
        Hold[$CellContext`\[CapitalMu]$$, $CellContext`\[CapitalMu]$3738$$, 
         0], 
        Hold[$CellContext`log\[Sigma]\[Xi]$$, \
$CellContext`log\[Sigma]\[Xi]$3739$$, 0], 
        Hold[$CellContext`log\[Sigma]\[Zeta]$$, $CellContext`log\[Sigma]\
\[Zeta]$3740$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Module[{$CellContext`x$}, 
        With[{$CellContext`terms$ = \
$CellContext`symbolicPowers[$CellContext`x$, $CellContext`\[CapitalMu]$$], \
$CellContext`cs$ = Map[
            $CellContext`\[Phi][$CellContext`\[CapitalMu]$$], 
            Map[List, 
             Part[$CellContext`bts, 1]]], $CellContext`ts$ = 
          Part[$CellContext`bts, 2]}, 
         With[{$CellContext`normal$ = $CellContext`mleFit[$CellContext`\
\[CapitalMu]$$, $CellContext`bts], $CellContext`kalman$ = $CellContext`kalFit[
            10^(2 $CellContext`log\[Sigma]\[Zeta]$$), 
             10^(2 $CellContext`log\[Sigma]\[Xi]$$)][$CellContext`\[CapitalMu]\
$$, $CellContext`bts]}, 
          
          With[{$CellContext`mleFn$ = 
            Dot[$CellContext`terms$, $CellContext`normal$], \
$CellContext`kalFn$ = Dot[{$CellContext`terms$}, 
              
              Part[$CellContext`kalman$, 
               1]], $CellContext`bs2$ = $CellContext`mapsSquared[
             10^(2 $CellContext`log\[Sigma]\[Zeta]$$), 
              10^(
               2 $CellContext`log\[Sigma]\[Xi]$$), $CellContext`x$, \
$CellContext`cs$, $CellContext`\[CapitalMu]$$], $CellContext`mapFn$ = Quiet[
              $CellContext`mapMean[
              10^(2 $CellContext`log\[Sigma]\[Zeta]$$), 
               10^(2 $CellContext`log\[Sigma]\[Xi]$$), $CellContext`x$, \
$CellContext`cs$, $CellContext`ts$, $CellContext`\[CapitalMu]$$]]}, 
           With[{$CellContext`lp$ = ListPlot[
               Transpose[$CellContext`bts], PlotMarkers -> {
                 Graphics[{Blue, 
                   Circle[{0, 0}, 1]}], 0.05}]}, 
            Module[{$CellContext`showlist$ = {$CellContext`lp$, 
                Plot[
                 Sin[2. Pi $CellContext`x$], {$CellContext`x$, 0., 1.}, 
                 PlotStyle -> {Thick, Green}]}}, If[$CellContext`mleQ$$, 
               AppendTo[$CellContext`showlist$, 
                
                Plot[$CellContext`mleFn$, {$CellContext`x$, 0, 1}, 
                 PlotStyle -> {Orange}]]]; If[$CellContext`kalQ$$, 
               AppendTo[$CellContext`showlist$, 
                
                Plot[{$CellContext`kalFn$, $CellContext`kalFn$ + 
                  Sqrt[$CellContext`bs2$], $CellContext`kalFn$ - 
                  Sqrt[$CellContext`bs2$]}, {$CellContext`x$, 0, 1}, 
                 PlotStyle -> {Cyan, {Thin, {
                    Opacity[0], Cyan}}, {Thin, {
                    Opacity[0], Cyan}}}, Filling -> {1 -> {2}, 1 -> {3}}]]]; 
             If[$CellContext`mapQ$$, 
               AppendTo[$CellContext`showlist$, 
                
                Plot[{$CellContext`mapFn$, $CellContext`mapFn$ + 
                  Sqrt[$CellContext`bs2$], $CellContext`mapFn$ - 
                  Sqrt[$CellContext`bs2$]}, {$CellContext`x$, 0, 1}, 
                 PlotStyle -> {Magenta, {Thin, {
                    Opacity[0], Magenta}}, {Thin, {
                    Opacity[0], Magenta}}}, 
                 Filling -> {1 -> {2}, 1 -> {3}}]]]; Quiet[
               
               Show[$CellContext`showlist$, Frame -> True, 
                FrameLabel -> {"x", "t"}]]]]]]]], 
      "Specifications" :> {{{$CellContext`kalQ$$, True, "KAL"}, {True, False},
          ControlPlacement -> 1}, {{$CellContext`mleQ$$, False, "MLE"}, {
         True, False}, ControlPlacement -> 
         2}, {{$CellContext`mapQ$$, True, "MAP"}, {True, False}, 
         ControlPlacement -> 
         3}, {{$CellContext`\[CapitalMu]$$, 9, "order \[CapitalMu]"}, 0, 16, 
         1, Appearance -> {"Labeled"}, ControlPlacement -> 
         4}, {{$CellContext`log\[Sigma]\[Xi]$$, 0.5228787452803376, 
          "log \[Sigma]\[Xi] (KAL)"}, -3, 5, Appearance -> "Labeled", 
         ControlPlacement -> 
         5}, {{$CellContext`log\[Sigma]\[Zeta]$$, -1.1505149978319906`, 
          "log \[Sigma]\[Zeta] (KAL)"}, -5, 3, Appearance -> "Labeled", 
         ControlPlacement -> 6}, 
        Grid[{{
           Grid[{{
              Button[
              "RESET", ($CellContext`\[CapitalMu]$$ = 
                9; $CellContext`log\[Sigma]\[Xi]$$ = Log10[
                  Sqrt[1/0.09]]; $CellContext`log\[Sigma]\[Zeta]$$ = Log10[
                  Sqrt[0.005]])& ], 
              Manipulate`Place[1], 
              Manipulate`Place[2], 
              Manipulate`Place[3]}}]}, {
           Manipulate`Place[4]}, {
           Manipulate`Place[5]}, {
           Manipulate`Place[6]}}]}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{505., {244., 251.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.729192135929804*^9, 3.7291922278453083`*^9, {3.729193547075082*^9, 
   3.72919357029303*^9}, 3.7291936494538317`*^9, 3.729193835844892*^9, {
   3.7291938917022667`*^9, 3.729193913601519*^9}, 3.7291939518583193`*^9, 
   3.729194031604315*^9, 3.729194077471689*^9, 3.7291957523055468`*^9, {
   3.729196352157159*^9, 3.7291963729616833`*^9}, 3.729196414663275*^9, 
   3.729255939509426*^9, 3.729552302952733*^9, 3.729557877054325*^9, 
   3.72962983964937*^9, 3.729642874169162*^9, 3.7296429101726303`*^9, 
   3.729643940550147*^9, 3.729647187004492*^9, 3.729711729117857*^9, 
   3.729711766418165*^9, 3.7297782664869204`*^9, 3.729779235817174*^9, 
   3.7297793102436247`*^9, 3.729792075793706*^9, 3.729894701595381*^9, 
   3.729896007432908*^9, 3.7298961543952217`*^9, 3.729897297071055*^9, 
   3.730140356712283*^9, 3.730240273471672*^9, 3.730380092501981*^9, 
   3.7303857432766647`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"a837876e-989f-4c51-b6aa-2d2fd6bbbc95"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Appendix: Particle Filter", "Chapter",
 CellChangeTimes->{{3.730309566049403*^9, 
  3.730309571418981*^9}},ExpressionUUID->"3169a658-391d-4481-8853-\
308bc394f7b2"],

Cell[TextData[{
 "Each particle ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Xi]", "i"], ",", 
    RowBox[{"i", "\[Element]", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"1", ".."}], 
       SubscriptBox["N", "s"]}], "]"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e490040c-7e31-4b6a-b5d5-a8c18b448239"],
 ", is an ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"\[CapitalMu]", "+", "1"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "4f718f3a-944c-4fc5-a8f2-d4bd89aa5091"],
 "-vector guess at the state, i.e., the column vector of coefficients. There \
are ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "s"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "b871d66d-3b0e-4c80-bc8e-542f40e4645f"],
 " of them for each time tick in the simulation. "
}], "Text",
 CellChangeTimes->{{3.7303106632251043`*^9, 3.730310803482277*^9}, {
  3.730310867446988*^9, 3.7303108703318567`*^9}, {3.730311282159844*^9, 
  3.730311285160948*^9}, {3.730311333616426*^9, 3.730311356500394*^9}, {
  3.730313144881275*^9, 
  3.730313157480541*^9}},ExpressionUUID->"e3567f63-cdb0-49f5-871e-\
418d0b9d962b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "\[Sigma]0", ",", "P", ",", "P0", ",", "\[Xi]0", ",", "\[Xi]0s", ",", 
    "importanceFunction"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "Ns", ",", "\[Sigma]0", ",", "\[Sigma]", ",", "\[Xi]", ",", 
     "importanceFunctions", ",", "\[Xi]s", ",", "\[CapitalMu]", ",", "ws"}], 
    "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ns", "=", "1000"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalMu]", "=", "9"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]0", "=", 
   SuperscriptBox["10.", "6"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Sigma]", "[", "0", "]"}], "=", 
    RowBox[{"List", "/@", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"\[Sigma]0", ",", 
       RowBox[{"\[CapitalMu]", "+", "1"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Xi]", "[", "0", "]"}], "=", 
    RowBox[{"List", "/@", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0.", ",", 
       RowBox[{"\[CapitalMu]", "+", "1"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"importanceFunctions", "[", "t_", "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Xi]", "[", "t", "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{
         RowBox[{"\[Sigma]", "[", "t", "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"\[CapitalMu]", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Xi]s", "[", "0", "]"}], "=", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Xi]", "[", "0", "]"}], "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"importanceFunctions", "[", "0", "]"}], 
         "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"\[CapitalMu]", "+", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "Ns"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<\[Sigma]\>\"", "\[Rule]", "\[Sigma]"}], ",", 
      RowBox[{"\"\<Dimensions[\[Xi]s[0]]\>\"", "\[Rule]", 
       RowBox[{"Dimensions", "[", 
        RowBox[{"\[Xi]s", "[", "0", "]"}], "]"}]}]}], "|>"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ws", "[", "0", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{
     RowBox[{"1.", "/", "Ns"}], ",", "Ns"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plus", "@@", 
  RowBox[{"ws", "[", "0", "]"}]}]}], "Input",
 CellChangeTimes->{{3.730309581049458*^9, 3.730309615913123*^9}, {
   3.730309695551532*^9, 3.730309794625188*^9}, {3.730309986287401*^9, 
   3.730310031081099*^9}, {3.7303100843211937`*^9, 3.7303100878137608`*^9}, {
   3.730310148990505*^9, 3.7303101892066717`*^9}, {3.730310237600898*^9, 
   3.730310291926539*^9}, {3.730310335701906*^9, 3.7303103840752783`*^9}, {
   3.730310571768824*^9, 3.730310576192645*^9}, {3.7303111681986427`*^9, 
   3.7303112740923223`*^9}, {3.73031144784251*^9, 3.730311468679291*^9}, {
   3.7303114989372272`*^9, 3.730311545273479*^9}, 3.730311578090163*^9, {
   3.730311625478706*^9, 3.730311927538033*^9}, {3.7303119723211718`*^9, 
   3.730311991597039*^9}, {3.7303120282791862`*^9, 3.730312051017926*^9}, {
   3.730312620887988*^9, 3.730312630038189*^9}, {3.73031324418159*^9, 
   3.730313251336158*^9}, {3.730317358979414*^9, 3.73031739373138*^9}, {
   3.73031886584109*^9, 3.730318882420773*^9}, {3.73031897850744*^9, 
   3.730319022674303*^9}, {3.730322928985365*^9, 3.7303229582217913`*^9}, {
   3.730322992183887*^9, 3.730322992256905*^9}, {3.730323247202938*^9, 
   3.7303232680725927`*^9}, {3.730323319605565*^9, 3.730323319825152*^9}, {
   3.730324015972673*^9, 3.7303240301319723`*^9}, {3.7303801111815033`*^9, 
   3.730380112027327*^9}, {3.7303812672502203`*^9, 3.730381271550727*^9}, {
   3.730381556792259*^9, 3.730381558018606*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"a73eccfc-7ced-433f-9ec3-1933b88a7b7c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"\[Sigma]\"\>", "\[Rule]", "\[Sigma]"}], ",", 
   RowBox[{"\<\"Dimensions[\[Xi]s[0]]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"10", ",", "1000"}], "}"}]}]}], "\[RightAssociation]"}]], "Print",\

 CellChangeTimes->{
  3.730312051488349*^9, {3.7303126239657373`*^9, 3.730312631363284*^9}, 
   3.730313252081458*^9, 3.730317394487925*^9, 3.730318987546782*^9, 
   3.730319023757545*^9, {3.7303229375642138`*^9, 3.7303229600517607`*^9}, 
   3.730322993235654*^9, {3.7303232583973913`*^9, 3.730323273754943*^9}, 
   3.7303233207392187`*^9, {3.730380069957816*^9, 3.730380113394902*^9}, 
   3.7303812723781977`*^9, 3.730381415560006*^9, {3.730381559190649*^9, 
   3.730381584112602*^9}, 3.7303856131058187`*^9, 3.7303856431136703`*^9, 
   3.7303857435940037`*^9},
 CellLabel->
  "During evaluation of \
In[57]:=",ExpressionUUID->"859d9088-11b5-40d1-8602-25d0588f8180"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{
  3.730381272387334*^9, 3.730381415572866*^9, {3.730381559204625*^9, 
   3.730381584124818*^9}, 3.7303856131229973`*^9, 3.730385643126198*^9, 
   3.730385743606662*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"d597fbb1-f1bc-4913-9e5c-06387111a425"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check Covariance", "Subsection",
 CellChangeTimes->{{3.730322890573641*^9, 
  3.730322894133196*^9}},ExpressionUUID->"edfbc71e-e1ba-427b-a171-\
be70e151d2b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]", "=", 
     RowBox[{"Mean", "/@", 
      RowBox[{"\[Xi]s", "[", "0", "]"}]}]}], "}"}], ",", "\[Mu]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.730322219052698*^9, 3.7303222256071367`*^9}, {
  3.73032228706205*^9, 3.730322311681993*^9}, {3.7303223590666723`*^9, 
  3.730322587049919*^9}, {3.7303226414574757`*^9, 3.730322685809826*^9}, {
  3.730322733258218*^9, 3.730322737159099*^9}, {3.730322842741798*^9, 
  3.730322845388371*^9}, {3.730323022499826*^9, 3.730323045196677*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"88892e91-bf4a-4dde-b1c3-1a61a775069e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2665.6588088412973`"}], ",", 
   RowBox[{"-", "92581.67185379048`"}], ",", 
   RowBox[{"-", "38266.50295677131`"}], ",", 
   RowBox[{"-", "46331.11876459506`"}], ",", 
   RowBox[{"-", "9093.584548449247`"}], ",", "41357.40668304871`", ",", 
   RowBox[{"-", "11458.323040219957`"}], ",", 
   RowBox[{"-", "15171.109016247246`"}], ",", 
   RowBox[{"-", "292.0112689358741`"}], ",", "13838.450735185568`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.730323025818746*^9, 3.73032304584706*^9}, 
   3.730323294473716*^9, 3.730323329043951*^9, {3.730380092828538*^9, 
   3.7303801217582817`*^9}, 3.7303812865664883`*^9, 3.730381418624381*^9, 
   3.7303815841984997`*^9, 3.730385613371688*^9, 3.730385646881836*^9, 
   3.7303857436625977`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"e7bbcc44-ef57-48de-a487-09aeb044b3c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]", "=", 
     RowBox[{"Mean", "/@", 
      RowBox[{"\[Xi]s", "[", "0", "]"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Xi]s", "[", "0", "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "All"}], "\[RightDoubleBracket]"}], "-", 
        "\[Mu]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"Diagonal", "[", 
        RowBox[{"r", ".", 
         RowBox[{"r", "\[Transpose]"}]}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"Ns", "-", "1"}], ")"}]}], "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.730322219052698*^9, 3.7303222256071367`*^9}, {
  3.73032228706205*^9, 3.730322311681993*^9}, {3.7303223590666723`*^9, 
  3.730322587049919*^9}, {3.7303226414574757`*^9, 3.730322685809826*^9}, {
  3.730322733258218*^9, 3.730322737159099*^9}, {3.730322842741798*^9, 
  3.730322845388371*^9}, {3.730323061249672*^9, 3.7303230642876873`*^9}, {
  3.730323340074586*^9, 3.7303233426937313`*^9}, {3.7303234016610117`*^9, 
  3.730323401918603*^9}, {3.7303235701161947`*^9, 3.730323573200016*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"8da7ec55-a034-45c5-830d-39821bac6afa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.0012634586841924`*^6", ",", "1.0241917255473342`*^6", ",", 
   "1.0102442309588167`*^6", ",", "1.0146772626618051`*^6", ",", 
   "988636.4100143525`", ",", "1.0067707778132384`*^6", ",", 
   "990312.1463654676`", ",", "998214.3473917801`", ",", 
   "1.0082387348949111`*^6", ",", "1.0121468434169275`*^6"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.730323066536668*^9, 3.730323303742634*^9, 3.7303233437627277`*^9, 
   3.730323404650215*^9, {3.730323573589549*^9, 3.730323599124888*^9}, 
   3.730380092901782*^9, 3.7303801242543573`*^9, 3.7303812881625137`*^9, 
   3.730381420154091*^9, 3.730381584227551*^9, 3.730385613427857*^9, 
   3.7303856490131063`*^9, 3.730385743711954*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"2fe14dfa-4a0b-4ca7-94a8-b94fa8014d71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardDeviation", "/@", 
  RowBox[{"\[Xi]s", "[", "0", "]"}]}]], "Input",
 CellChangeTimes->{{3.730323363440913*^9, 3.73032338725931*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"7b1fd37c-df4e-4400-9613-a0e5a97501d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.0012634586841922`*^6", ",", "1.0241917255473341`*^6", ",", 
   "1.0102442309588168`*^6", ",", "1.0146772626618051`*^6", ",", 
   "988636.4100143525`", ",", "1.0067707778132388`*^6", ",", 
   "990312.1463654676`", ",", "998214.3473917802`", ",", 
   "1.008238734894911`*^6", ",", "1.0121468434169275`*^6"}], "}"}]], "Output",\

 CellChangeTimes->{{3.7303233880520573`*^9, 3.730323407328034*^9}, 
   3.730323582765842*^9, 3.730380092967248*^9, 3.7303801285090637`*^9, 
   3.7303812888401127`*^9, 3.73038142207648*^9, 3.730381584282048*^9, 
   3.730385613477837*^9, 3.730385650349573*^9, 3.730385743759878*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"1aed8982-0b62-4721-b108-b4672c7b578a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3D Point Clouds", "Subsection",
 CellChangeTimes->{{3.730318774385722*^9, 
  3.730318778402279*^9}},ExpressionUUID->"14c0c48c-552b-46da-9a8e-\
0142fdbfe345"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "threeDPointClouds", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"threeDPointClouds", "[", 
    RowBox[{"\[Xi]s_", ",", "\[Sigma]_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"j", "=", "2"}], ",", 
       RowBox[{"k", "=", "3"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"Graphics3D", "[", 
        RowBox[{
         RowBox[{"Point", "/@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Xi]s", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "All"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"\[Xi]s", "\[LeftDoubleBracket]", 
               RowBox[{"j", ",", "All"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"\[Xi]s", "\[LeftDoubleBracket]", 
               RowBox[{"k", ",", "All"}], "\[RightDoubleBracket]"}]}], "}"}], 
            "\[Transpose]"}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Axes", "\[Rule]", "True"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<i: \>\"", "<>", 
             RowBox[{"ToString", "[", "i", "]"}]}], ",", 
            RowBox[{"\"\<j: \>\"", "<>", 
             RowBox[{"ToString", "[", "j", "]"}]}], ",", 
            RowBox[{"\"\<k: \>\"", "<>", 
             RowBox[{"ToString", "[", "k", "]"}]}]}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"3", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "\[Sigma]"}], ",", "\[Sigma]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "\[Sigma]"}], ",", "\[Sigma]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "\[Sigma]"}], ",", "\[Sigma]"}], "}"}]}], 
            "}"}]}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Grid", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<i\>\"", ",", 
            RowBox[{"SetterBar", "[", 
             RowBox[{
              RowBox[{"Dynamic", "[", "i", "]"}], ",", 
              RowBox[{"Range", "[", 
               RowBox[{"\[CapitalMu]", "+", "1"}], "]"}]}], "]"}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<j\>\"", ",", 
            RowBox[{"SetterBar", "[", 
             RowBox[{
              RowBox[{"Dynamic", "[", "j", "]"}], ",", 
              RowBox[{"Range", "[", 
               RowBox[{"\[CapitalMu]", "+", "1"}], "]"}]}], "]"}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<k\>\"", ",", 
            RowBox[{"SetterBar", "[", 
             RowBox[{
              RowBox[{"Dynamic", "[", "k", "]"}], ",", 
              RowBox[{"Range", "[", 
               RowBox[{"\[CapitalMu]", "+", "1"}], "]"}]}], "]"}]}], "}"}]}], 
         "}"}], "]"}]}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"threeDPointClouds", "[", 
  RowBox[{
   RowBox[{"\[Xi]s", "[", "0", "]"}], ",", "\[Sigma]0"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7303176073971786`*^9, 3.730318181654797*^9}, {
  3.730318236094146*^9, 3.730318246175606*^9}, {3.7303182774444103`*^9, 
  3.7303184472761*^9}, {3.730318484396112*^9, 3.730318603519816*^9}, {
  3.730318636419531*^9, 3.730318741660398*^9}, {3.7303187885194893`*^9, 
  3.730318793417272*^9}, {3.7303189277505217`*^9, 3.7303189323693247`*^9}, {
  3.7303190832539988`*^9, 3.73031910778214*^9}, {3.730381021068585*^9, 
  3.7303811221641083`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"246b9295-d5de-4e9c-b619-c977f1992771"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`i$$ = 1, $CellContext`j$$ = 
  2, $CellContext`k$$ = 3}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
       Hold[
        Grid[{{"i", 
           SetterBar[
            Dynamic[$CellContext`i$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
          "j", 
           SetterBar[
            Dynamic[$CellContext`j$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
          "k", 
           SetterBar[
            Dynamic[$CellContext`k$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}}]], 
       Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
     438., {207., 213.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {}, "ControllerVariables" :> {}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Graphics3D[
         Map[Point, 
          Transpose[{
            Part[CompressedData["
1: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

             "], $CellContext`i$$, All], 
            Part[CompressedData["
1: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

             "], $CellContext`j$$, All], 
            Part[CompressedData["
1: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

             "], $CellContext`k$$, All]}]], Axes -> True, AspectRatio -> 1, 
         AxesLabel -> {
           StringJoin["i: ", 
            ToString[$CellContext`i$$]], 
           StringJoin["j: ", 
            ToString[$CellContext`j$$]], 
           StringJoin["k: ", 
            ToString[$CellContext`k$$]]}, PlotRange -> 
         3 {{-1.*^6, 1.*^6}, {-1.*^6, 1.*^6}, {-1.*^6, 1.*^6}}], 
       "Specifications" :> {
         Grid[{{"i", 
            SetterBar[
             Dynamic[$CellContext`i$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
           "j", 
            SetterBar[
             Dynamic[$CellContext`j$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
           "k", 
            SetterBar[
             Dynamic[$CellContext`k$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}}]}, 
       "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{493., {292., 299.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.730381126235525*^9, 3.7303812964286537`*^9, 
  3.7303814277320747`*^9, 3.7303815844882298`*^9, 3.730385613561804*^9, 
  3.7303856580529222`*^9, 3.7303857438374853`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"4c5d4f92-7f01-4003-aafb-e1d32995b9e9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Inspect the Initial Particles", "Subsection",
 CellChangeTimes->{{3.730381321102253*^9, 
  3.730381343446248*^9}},ExpressionUUID->"c614e1cd-5ba6-4a38-9baf-\
484ccee08549"],

Cell[TextData[{
 "Get a columns of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Xi]s", "[", "0", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "8aece158-c094-4cbc-8099-1b64f98fb100"],
 ": "
}], "Text",
 CellChangeTimes->{{3.730315881330007*^9, 
  3.7303159093820133`*^9}},ExpressionUUID->"06f27e96-df14-45aa-938f-\
b961eb587335"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\[Xi]col", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Xi]col", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"n_", "/;", 
      RowBox[{"(", 
       RowBox[{"1", "\[LessEqual]", "n", "\[LessEqual]", "Ns"}], ")"}]}]}], 
    "]"}], ":=", 
   RowBox[{"List", "/@", 
    RowBox[{
     RowBox[{"\[Xi]s", "[", "t", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "n"}], "\[RightDoubleBracket]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Xi]col", "[", 
   RowBox[{"0", ",", "41"}], "]"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.73031578739823*^9, 3.730315859651759*^9}, {
  3.73031592312326*^9, 3.7303160169997587`*^9}, {3.730316301961196*^9, 
  3.730316303501944*^9}, {3.7303192450584917`*^9, 3.730319252583686*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"1a0178b0-6036-484b-91b9-6475a82c76e2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1.9688152362738387`*^6"}]},
     {
      RowBox[{"-", "1.723914558349502`*^6"}]},
     {"1.474573842561694`*^6"},
     {
      RowBox[{"-", "2.465416598290555`*^6"}]},
     {"1.1889724676200186`*^6"},
     {"1.1887658572506837`*^6"},
     {
      RowBox[{"-", "1.2448892687342428`*^6"}]},
     {"1.1554353284281674`*^6"},
     {"762772.5962630535`"},
     {
      RowBox[{"-", "426261.3645892206`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.730315851118787*^9, 3.7303158603742657`*^9}, 
   3.7303159117120533`*^9, {3.730315978172*^9, 3.730315987097087*^9}, 
   3.7303160175706043`*^9, 3.730316304023273*^9, {3.7303192472999277`*^9, 
   3.730319253964961*^9}, 3.7303800935696373`*^9, 3.7303801696912403`*^9, 
   3.730381447160857*^9, 3.730381584651071*^9, 3.7303856137300863`*^9, 
   3.730385662375503*^9, 3.730385743979109*^9},
 CellLabel->
  "Out[77]//MatrixForm=",ExpressionUUID->"73c0226a-725b-4669-9720-\
ab2ce7555274"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"partialsFn", "[", 
     RowBox[{"m", ",", 
      RowBox[{"bts", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
      "]"}], "//", "MatrixForm"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "1"}], "}"}], ",", "0", ",", 
     RowBox[{"\[CapitalMu]", "+", "1"}], ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Open\>\"", ",", "\"\<Labeled\>\""}], "}"}]}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.730316122444306*^9, 3.7303162799477158`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"6fcc3160-1040-4ffc-899d-a85d2c57a3a4"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`m$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`m$$], 1}, 0, 10, 1}}, Typeset`size$$ = {
    137., {102.91754150390625`, 110.08245849609375`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, $CellContext`m$3797$$ =
     0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`m$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`m$$, $CellContext`m$3797$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> MatrixForm[
        $CellContext`partialsFn[$CellContext`m$$, 
         Part[$CellContext`bts, 1]]], 
      "Specifications" :> {{{$CellContext`m$$, 1}, 0, 10, 1, 
         Appearance -> {"Open", "Labeled"}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{361., {174., 181.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.730316146347814*^9, 3.730316224883396*^9}, 
   3.730316280387918*^9, 3.7303800936335783`*^9, 3.730380179886977*^9, 
   3.730381448885002*^9, 3.730381584717258*^9, 3.7303856137791357`*^9, 
   3.730385664532387*^9, 3.73038574408637*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"17ce9135-961d-4dd5-91c9-b46c6563a4a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"partialsFn", "[", 
   RowBox[{"\[CapitalMu]", ",", 
    RowBox[{"bts", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
   "]"}], ".", 
  RowBox[{"\[Xi]col", "[", 
   RowBox[{"0", ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.730316316187313*^9, 3.730316348549077*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"2ac7211d-fbe2-4a0c-a19b-ac53f0f41926"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "324717.58426106605`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "320455.2907018824`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "334951.7448404694`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "369190.0919402214`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "413263.8143033691`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "431017.63668765244`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "329354.7326499696`"}], "}"}], ",", 
   RowBox[{"{", "98669.11753184324`", "}"}], ",", 
   RowBox[{"{", "1.2725302230611532`*^6", "}"}], ",", 
   RowBox[{"{", "3.985906147789549`*^6", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.730316349721109*^9, 3.7303800937354927`*^9, 
  3.730380190196931*^9, 3.7303814505451736`*^9, 3.7303815848175707`*^9, 
  3.73038561388933*^9, 3.730385744158042*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"458ae3d2-9f84-425b-9786-f219f8a263fb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Observations and Residuals", "Subsection",
 CellChangeTimes->{{3.730381357604554*^9, 3.7303813590875483`*^9}, {
  3.730381480909913*^9, 
  3.7303814836403103`*^9}},ExpressionUUID->"c7b51503-6a6c-4887-be83-\
112940424c06"],

Cell["\<\
Observations are constant with time, but we include a time parameter just for \
fun. The particle cloud changes with time.\
\>", "Text",
 CellChangeTimes->{{3.730316823411021*^9, 3.730316838355496*^9}, {
  3.7303168699607697`*^9, 3.73031687723841*^9}, {3.7303173238587303`*^9, 
  3.730317339509391*^9}, {3.730380197491593*^9, 
  3.730380198774478*^9}},ExpressionUUID->"0d77ad90-153b-46ec-9e7c-\
2c7c6c185e85"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\[Zeta]col", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Zeta]col", "[", "t_", "]"}], ":=", 
  RowBox[{"List", "/@", 
   RowBox[{
   "bts", "\[LeftDoubleBracket]", "2", 
    "\[RightDoubleBracket]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7303167103329144`*^9, 3.730316767788656*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"ab4afc85-cda5-4ccb-9d8d-a5841e90b722"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "residuals", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"residuals", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"n_", "/;", 
      RowBox[{"1", "\[LessEqual]", "n", "\[LessEqual]", "Ns"}]}]}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"partialsFn", "[", 
      RowBox[{"\[CapitalMu]", ",", 
       RowBox[{
       "bts", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "]"}],
      ".", 
     RowBox[{"\[Xi]col", "[", 
      RowBox[{"t", ",", "n"}], "]"}]}], "-", 
    RowBox[{"\[Zeta]col", "[", "t", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.73031679314316*^9, 3.730316799479423*^9}, {
  3.7303168946352987`*^9, 3.7303169552598886`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"c70268c1-e8b2-4e50-92a5-18f9f14fd1e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sum of Squared Residuals (SSR)", "Subsection",
 CellChangeTimes->{{3.730317194789525*^9, 3.7303171997993803`*^9}, {
  3.73031973934348*^9, 
  3.7303197410221453`*^9}},ExpressionUUID->"c05ae3ce-3535-4067-8ab0-\
8cde7ddcbdb8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "ssr", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ssr", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"n_", "/;", 
      RowBox[{"1", "\[LessEqual]", "n", "\[LessEqual]", "Ns"}]}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"residuals", "[", 
        RowBox[{"t", ",", "n"}], "]"}], "\[Transpose]"}], ".", 
      RowBox[{"residuals", "[", 
       RowBox[{"t", ",", "n"}], "]"}]}], ")"}], "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.730316963293236*^9, 3.73031704753382*^9}, 
   3.730381497670987*^9},
 CellLabel->"In[84]:=",ExpressionUUID->"468e60c3-02da-4454-9009-2fe528627c54"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "ssrs", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"ssrs", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"ssr", "[", 
       RowBox[{"0", ",", "#"}], "]"}], "&"}], "/@", 
     RowBox[{"Range", "[", "Ns", "]"}]}]}], ")"}], "//", "Short"}]}], "Input",\

 CellChangeTimes->{{3.7303191875671253`*^9, 3.730319200307765*^9}, {
  3.730319409387887*^9, 3.7303194535208473`*^9}, {3.730319493559132*^9, 
  3.7303195064380817`*^9}, {3.7303802338887253`*^9, 3.730380239316378*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"6c7d905f-17f7-47be-9c25-962a24382f25"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"1.843818359197991`*^13", ",", 
    RowBox[{"\[LeftSkeleton]", "22", "\[RightSkeleton]"}], ",", 
    RowBox[{"\[LeftSkeleton]", "996", "\[RightSkeleton]"}], ",", 
    RowBox[{"\[LeftSkeleton]", "22", "\[RightSkeleton]"}], ",", 
    RowBox[{"\[LeftSkeleton]", "22", "\[RightSkeleton]"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{
  3.730319201047407*^9, {3.730319401500107*^9, 3.730319454522135*^9}, 
   3.7303195070347967`*^9, 3.730380095714797*^9, {3.730380226628932*^9, 
   3.730380240265792*^9}, 3.730381505461239*^9, 3.730381597195113*^9, 
   3.7303856140872173`*^9, 3.730385744449336*^9},
 CellLabel->
  "Out[87]//Short=",ExpressionUUID->"278ee1f7-6bc1-43b3-bbf7-3e5019c35a01"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["New Weights", "Subsection",
 CellChangeTimes->{{3.730380271464697*^9, 
  3.730380273487821*^9}},ExpressionUUID->"ec31f146-8931-460a-9179-\
6321edf47a75"],

Cell["\<\
Larger SSR means further from the observations. Let weights be inversely \
proportional to SSR, with divide-by-zero intentionally faulting because a \
zero SSR would signal an extremely improbable situation, most likely a bug \
somewhere else in the software.\
\>", "Text",
 CellChangeTimes->{{3.7303195764850483`*^9, 3.7303195807271347`*^9}, {
  3.7303196690961723`*^9, 3.730319691300754*^9}, {3.730380281450466*^9, 
  3.730380361864835*^9}},ExpressionUUID->"e4b89aac-4a68-43c6-87b0-\
63e96c7f4a10"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"ws", "[", "1", "]"}], "=", " ", 
    RowBox[{
     FractionBox["1", "ssrs"], "/", 
     RowBox[{"Plus", "@@", 
      FractionBox["1", "ssrs"]}]}]}], ")"}], "//", 
  RowBox[{
   RowBox[{"Short", "[", 
    RowBox[{"#", ",", "3"}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.730319516451455*^9, 3.7303195599192657`*^9}, {
  3.730380373923058*^9, 3.7303804040219393`*^9}, {3.730387396974444*^9, 
  3.7303874002914343`*^9}},
 CellLabel->
  "In[242]:=",ExpressionUUID->"3452abe2-a755-4fcb-9a96-a2b58f83b933"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"0.0002809864763568382`", ",", "0.0008553617640512233`", ",", 
    RowBox[{"\[LeftSkeleton]", "996", "\[RightSkeleton]"}], ",", 
    "0.00012510798822424344`", ",", "0.0013710726303514198`"}], "}"}],
  Short[#, 3]& ]], "Output",
 CellChangeTimes->{{3.730319520452462*^9, 3.730319560653799*^9}, 
   3.730380098835906*^9, 3.7303802481364603`*^9, {3.7303803996269007`*^9, 
   3.730380405441545*^9}, 3.730381508718525*^9, 3.730381600382276*^9, 
   3.73038574447234*^9, 3.7303874013941402`*^9},
 CellLabel->
  "Out[242]//Short=",ExpressionUUID->"b58e869a-a3b8-4e16-a000-d54a73477eff"]
}, Open  ]],

Cell["Check:", "Text",
 CellChangeTimes->{{3.730380449470887*^9, 
  3.730380451339777*^9}},ExpressionUUID->"b3c35773-e0dc-49c8-beb9-\
9a567dedff82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plus", "@@", 
  RowBox[{"ws", "[", "1", "]"}]}]], "Input",
 CellChangeTimes->{{3.7303804265864363`*^9, 3.730380444082206*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"e39a6e62-ad25-4aad-a1eb-341e8c2fea69"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{3.730380444545471*^9, 3.730381512201549*^9, 
  3.73038160239725*^9, 3.730385744528411*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"7fea39ae-5e9d-444c-a860-d153e91c1849"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"ws", "[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.730319606365589*^9, 3.730319620202126*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"3659a9e3-93f2-42da-88ea-69a146dd6b56"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
/qnQLNkzcEw7+YsKH+FTeq+pcCT80uAjccACzv0PhA/afGR/1xgRpUp4r8dH
WuOxyMqDVO+x+ODH28ljTWnehI+e398u79Ql/VnwUbe0vrXXKdrPho//xuYq
AgSUr8HHywzjpm/ZFD/OfFzPnBl6LpaJJz4yFBa3ZpdSverJx9j4nbr7CglP
OHyUH7ZbWtxO+g7snh/C7mt1lvyJy0fE2uhn1dbE/3jd49e+F4wi6b6Jz0fg
NT5rSzPxPTEfeT893ML9yd55fBQMiP54L5P2y+fjq9VJ9m4+02/j4+osUcHl
ZYQfhXw09PTL+TOO+vvFfHy2EBuPi6LvlfNR+zE9/cEvwncFH/0E6W82WhOe
VvHRFHirwNGTzlPLh2xnW2vCKcLnej5um0YVzTxB/qvkY8yy+F+TtlK8tfLR
qrmhvdKW/KmDj4C1h/cVTaf6u5OP4b/yoqKvM/dPaXjvWTzBtj/hj0Yarv3a
HRUzifBcOw2bz8aW3T9F9tZLg+m16Mm850y/LA0flK0lQ8OpfjNJQ/+y+whl
7gMs0jBiZuViK1v6nk0aHnpVxyvvMf31NKRJ5F9vaVE8OKfh64Mbvydbkf+w
0zDM12CDVSvFp2caAtL/FfBB9SQnDfpvh3/58Jjq68A0tAvCzlW9pvjgpsF6
6rlP1ZcpPnlp+DtYMbr/cOY+PA2GH8c90hlL/VhxGnbO3NM5ClQv56Vhbefw
5xGtlH/y01BseuXNEUPKx/I0rHc/WhC5lfJDYRq+214sM06k+8fiNGjNyHUS
nyM+VJ6GIxllq1b2ZvqTaai13f3WxJbipyoNMZd/2lx9Tvhem4bUzhrX9iOU
H+vTwHnN4m24ytwnpOHR6xe6K48w9k/D8tA1L7eX0/uEjjSUORnvHefC2D8N
PXupTaqbxLxHSUf+Q771KQ2qTzXSYaxq+OKpWQLZPx1Ty7swewjVy3rp6LCT
6dd0MvkxHcIeib1UoskfTdIhXvUr+E4EyWORjjYJ+41XLfmjTToOnd3zbO0V
Og/SoTHD6eOQp5RPndNh6trc+NiAzsNOx4up7zc/O0zf90zHL/meuy+LaMxJ
x98vn/qv3ET+E5iO6LKdJsNPMPVmOkY08r+xZxDe8LrPu8HBtu875n4+HaX8
vgZ7NlM9K05Hq+vw6Y79qB+blw69T+reO+VUD+Sn49rzM/LNOlT/yNNRctxO
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
      "]]}, {}}, {}, {}, {}, {}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1000.}, {0, 0.0027921723935677915`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.730319614065364*^9, 3.73031962095732*^9}, 
   3.730380101797727*^9, 3.7303804180255013`*^9, 3.730380465950617*^9, 
   3.7303816035753307`*^9, 3.730385744584837*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"dea80fb3-600e-4162-8495-27448d2efacf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cull the Particles", "Subsection",
 CellChangeTimes->{{3.730381376705008*^9, 
  3.7303813803694572`*^9}},ExpressionUUID->"f4e6571f-c400-4851-b8d4-\
c95c41505bd0"],

Cell["\<\
Keep only the particles that \[OpenCurlyDoubleQuote]do well\
\[CloseCurlyDoubleQuote] for the next time step, by some criterion driven by \
hyperparameters.\
\>", "Text",
 CellChangeTimes->{{3.730320000210891*^9, 3.7303200566684647`*^9}, {
  3.730380470751771*^9, 
  3.7303805003656673`*^9}},ExpressionUUID->"518ab8b7-5d71-4353-a3ce-\
7966b98966ab"],

Cell["Pair each particle with its index:", "Text",
 CellChangeTimes->{{3.730320059170012*^9, 
  3.730320082569851*^9}},ExpressionUUID->"906f09d0-7826-4047-8444-\
2381da0e96a6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "indexedWeights", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"indexedWeights", "=", 
    RowBox[{"MapThread", "[", 
     RowBox[{"List", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Range", "[", "Ns", "]"}], ",", 
        RowBox[{"ws", "[", "1", "]"}]}], "}"}]}], "]"}]}], ")"}], "//", 
  "Short"}]}], "Input",
 CellChangeTimes->{{3.730320085598336*^9, 3.730320155944872*^9}, {
  3.7303805240316753`*^9, 3.730380524780716*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"66070f2c-5dda-47e5-8835-b555adb4833e"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0.0002809864763568382`"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "999", "\[RightSkeleton]"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{{3.730320132893977*^9, 3.730320156291453*^9}, 
   3.730380104885646*^9, {3.7303805118427067`*^9, 3.730380525529358*^9}, 
   3.7303814032601757`*^9, 3.730381608030278*^9, 3.730385744611867*^9},
 CellLabel->
  "Out[92]//Short=",ExpressionUUID->"b554ef0b-0c32-41bf-865f-66d04da50e6f"]
}, Open  ]],

Cell[TextData[{
 "Keep the top ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"p", "=", "25"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a5e1813e-890c-4681-b52f-5c7ddf0ee09d"],
 "%. In general, ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ca9b3176-553a-4b98-a75d-87e10d6cdb54"],
 " should be the reciprocal of an integer that divides ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "s"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "eb312803-0e27-404b-abdc-6f6067203301"],
 " because we are going to copy each survivor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", "p"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d5439d05-4671-4610-8ff0-bc3fe599d62d"],
 " times to make a new sample of size ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "s"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "5ea66099-a1ec-46a3-9e4a-efa82fe8ae66"],
 "."
}], "Text",
 CellChangeTimes->{{3.730320176109355*^9, 3.730320222108515*^9}, {
  3.730382473282424*^9, 
  3.730382541686295*^9}},ExpressionUUID->"3235eeca-a7d5-4d46-b0c6-\
7a4ceb38073a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "p", ",", "sortedIndexedWeights", ",", "topPWeights", ",", 
    "topPIndexedWeights", ",", "topPIndices", ",", "topPParticles"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<|", 
  RowBox[{
   RowBox[{"\"\<sortedIndexedWeights\>\"", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"sortedIndexedWeights", "=", 
        RowBox[{"Reverse", "@", 
         RowBox[{"SortBy", "[", 
          RowBox[{"indexedWeights", ",", "Last"}], "]"}]}]}], ")"}], "//", 
      "Short"}], ")"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<topPIndexedWeights\>\"", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"topPIndexedWeights", "=", 
        RowBox[{"sortedIndexedWeights", "\[LeftDoubleBracket]", 
         RowBox[{";;", 
          RowBox[{"Floor", "[", 
           RowBox[{"p", " ", "Ns"}], "]"}]}], "\[RightDoubleBracket]"}]}], 
       ")"}], "//", "Short"}], ")"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<topPWeights\>\"", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"topPWeights", "=", 
        RowBox[{"Last", "/@", "topPIndexedWeights"}]}], ")"}], "//", 
      "Short"}], ")"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<topPIndices\>\"", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"topPIndices", "=", 
        RowBox[{"First", "/@", "topPIndexedWeights"}]}], ")"}], "//", 
      "Short"}], ")"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<topPParticles//Dims\>\"", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"topPParticles", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Xi]s", "[", "0", "]"}], "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "#"}], "\[RightDoubleBracket]"}], "&"}], "/@",
            "topPIndices"}], ")"}], "\[Transpose]"}]}], ")"}], "//", 
      "Dimensions"}], ")"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<top 3 Particles\>\"", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"topPParticles", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "3"}]}], "\[RightDoubleBracket]"}], "//", 
      "MatrixForm"}], ")"}]}]}], "|>"}]}], "Input",
 CellChangeTimes->{{3.730320225768507*^9, 3.730320244162834*^9}, {
  3.730320346901327*^9, 3.7303204345008593`*^9}, {3.730320491684826*^9, 
  3.730320584172364*^9}, {3.730320718953677*^9, 3.7303207421003017`*^9}, {
  3.730320824024774*^9, 3.7303208248114634`*^9}, {3.730320940813198*^9, 
  3.7303209473494997`*^9}, {3.73032100996704*^9, 3.7303210381014843`*^9}, {
  3.730321095899629*^9, 3.7303211173687887`*^9}, {3.7303211647920523`*^9, 
  3.7303212841624727`*^9}, {3.730321358055728*^9, 3.730321557388921*^9}, {
  3.730321605933663*^9, 3.7303217028134413`*^9}, {3.730321790572888*^9, 
  3.730321917877838*^9}, {3.730321962455139*^9, 3.730321963662384*^9}, {
  3.730322028609877*^9, 3.7303220386414957`*^9}, {3.730322163794339*^9, 
  3.7303222017733603`*^9}, {3.730322327923113*^9, 3.7303223344411097`*^9}, {
  3.7303805477178307`*^9, 3.730380819532074*^9}, {3.730380875318795*^9, 
  3.730380913534286*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"5924a2a7-9b19-4683-8ab2-4daa41e1a542"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"sortedIndexedWeights\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"214", ",", "0.07726432263772684`"}], "}"}], ",", 
       RowBox[{"\[LeftSkeleton]", "998", "\[RightSkeleton]"}], ",", 
       RowBox[{"{", 
        RowBox[{"809", ",", 
         RowBox[{"\[LeftSkeleton]", "24", "\[RightSkeleton]"}]}], "}"}]}], 
      "}"}],
     Short]}], ",", 
   RowBox[{"\<\"topPIndexedWeights\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"214", ",", "0.07726432263772684`"}], "}"}], ",", 
       RowBox[{"\[LeftSkeleton]", "248", "\[RightSkeleton]"}], ",", 
       RowBox[{"{", 
        RowBox[{"144", ",", 
         RowBox[{"\[LeftSkeleton]", "22", "\[RightSkeleton]"}]}], "}"}]}], 
      "}"}],
     Short]}], ",", 
   RowBox[{"\<\"topPWeights\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"{", 
      RowBox[{"0.07726432263772684`", ",", 
       RowBox[{"\[LeftSkeleton]", "21", "\[RightSkeleton]"}], ",", 
       RowBox[{"\[LeftSkeleton]", "246", "\[RightSkeleton]"}], ",", 
       RowBox[{"\[LeftSkeleton]", "22", "\[RightSkeleton]"}], ",", 
       RowBox[{"\[LeftSkeleton]", "22", "\[RightSkeleton]"}]}], "}"}],
     Short]}], ",", 
   RowBox[{"\<\"topPIndices\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"{", 
      RowBox[{"214", ",", "878", ",", "748", ",", "460", ",", "806", ",", 
       RowBox[{"\[LeftSkeleton]", "241", "\[RightSkeleton]"}], ",", "112", 
       ",", "978", ",", "484", ",", "144"}], "}"}],
     Short]}], ",", 
   RowBox[{"\<\"topPParticles//Dims\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"10", ",", "250"}], "}"}]}], ",", 
   RowBox[{"\<\"top 3 Particles\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"38863.2033947038`", 
         RowBox[{"-", "12181.362576588343`"}], "310729.6135638999`"},
        {
         RowBox[{"-", "181551.16473568592`"}], 
         RowBox[{"-", "465409.4272408857`"}], 
         RowBox[{"-", "1.3397993582839235`*^6"}]},
        {"429609.8155899013`", "2.6969657349675507`*^6", 
         "1.2216270774001272`*^6"},
        {
         RowBox[{"-", "978019.4639285833`"}], 
         RowBox[{"-", "1.361789765258635`*^6"}], "294411.7617454489`"},
        {
         RowBox[{"-", "597097.0366964486`"}], 
         RowBox[{"-", "1.0646819959902365`*^6"}], 
         RowBox[{"-", "142637.54279088834`"}]},
        {"915922.2974838598`", 
         RowBox[{"-", "613055.7797727949`"}], 
         RowBox[{"-", "676983.0925786481`"}]},
        {"761507.7959753798`", "221283.5108642644`", 
         RowBox[{"-", "552445.1591711892`"}]},
        {"403762.77002241963`", "680131.8058655815`", 
         RowBox[{"-", "452022.93207286834`"}]},
        {
         RowBox[{"-", "1.3390638301110095`*^6"}], 
         RowBox[{"-", "735032.831677968`"}], "117459.35506999624`"},
        {"510941.9217821101`", "702612.3205202343`", 
         "1.2052700228545866`*^6"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.730380766603587*^9, 3.730380820424242*^9, {3.7303808911611347`*^9, 
   3.730380914648041*^9}, 3.730381611194687*^9, 3.73038574466264*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"e923533a-fa92-4143-ba9a-d9d62d473c40"]
}, Open  ]],

Cell["Structure emerges after culling.", "Text",
 CellChangeTimes->{{3.7303811968954887`*^9, 3.730381222920342*^9}, {
  3.7303816182931623`*^9, 
  3.7303816354093447`*^9}},ExpressionUUID->"d6e3a490-0e2b-4544-a435-\
08be90edac02"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"threeDPointClouds", "[", 
  RowBox[{"topPParticles", ",", "\[Sigma]0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7303811509298573`*^9, 3.7303811755922813`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"e1ac0146-439c-44f6-8e50-91cbbc7503e2"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`i$$ = 1, $CellContext`j$$ = 
  2, $CellContext`k$$ = 3}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
       Hold[
        Grid[{{"i", 
           SetterBar[
            Dynamic[$CellContext`i$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
          "j", 
           SetterBar[
            Dynamic[$CellContext`j$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
          "k", 
           SetterBar[
            Dynamic[$CellContext`k$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}}]], 
       Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
     497., {227., 234.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {}, "ControllerVariables" :> {}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Graphics3D[
         Map[Point, 
          Transpose[{
            Part[CompressedData["
1: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
             
             "], $CellContext`i$$, All], 
            Part[CompressedData["
1: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
             
             "], $CellContext`j$$, All], 
            Part[CompressedData["
1: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
             
             "], $CellContext`k$$, All]}]], Axes -> True, AspectRatio -> 1, 
         AxesLabel -> {
           StringJoin["i: ", 
            ToString[$CellContext`i$$]], 
           StringJoin["j: ", 
            ToString[$CellContext`j$$]], 
           StringJoin["k: ", 
            ToString[$CellContext`k$$]]}, PlotRange -> 
         3 {{-1.*^6, 1.*^6}, {-1.*^6, 1.*^6}, {-1.*^6, 1.*^6}}], 
       "Specifications" :> {
         Grid[{{"i", 
            SetterBar[
             Dynamic[$CellContext`i$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
           "j", 
            SetterBar[
             Dynamic[$CellContext`j$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
           "k", 
            SetterBar[
             Dynamic[$CellContext`k$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}}]}, 
       "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{552., {313., 320.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.7303811769165277`*^9, {3.730381614508522*^9, 3.730381638095634*^9}, 
   3.7303857447097797`*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"6dc34e0e-784f-4fd9-89ad-c7040536e542"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Means of Top ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ad90976b-7d0c-4279-9ea4-3f2e932b8e02"],
 " Particles"
}], "Subsection",
 CellChangeTimes->{{3.730323878625125*^9, 
  3.7303238898131237`*^9}},ExpressionUUID->"5e0711c4-924a-458c-b3ce-\
33e9085fe1f1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"\[Mu]\[Sigma]", ",", "\[Mu]\[Xi]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]\[Xi]", "[", "1", "]"}], "=", 
  RowBox[{"Mean", "/@", "topPParticles"}]}]}], "Input",
 CellChangeTimes->{{3.730323902433716*^9, 3.730323961890944*^9}, {
  3.7303809762845917`*^9, 3.730380982744611*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"fe51d88c-4b5b-4b1f-9d04-9c267c58e0a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"20209.739391716135`", ",", 
   RowBox[{"-", "49304.88319298914`"}], ",", "36643.105709368174`", ",", 
   RowBox[{"-", "15241.088550337554`"}], ",", "3375.9705949405266`", ",", 
   RowBox[{"-", "68166.73906585293`"}], ",", "68179.8083161422`", ",", 
   RowBox[{"-", "97197.09603307674`"}], ",", "29244.75589152815`", ",", 
   RowBox[{"-", "47599.07290941663`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7303239079246683`*^9, 3.730323963070541*^9, 
  3.730380105087784*^9, 3.730380929623701*^9, 3.730380983848637*^9, 
  3.7303816453727694`*^9, 3.730385744813698*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"b3d07fd6-6d16-42a3-bb2b-1f8f70c4591e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Standard Deviations of Top ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "193b669e-5281-46fd-a614-348f12bf1909"],
 " Particles"
}], "Subsection",
 CellChangeTimes->{{3.730322243751857*^9, 3.730322253704605*^9}, {
   3.730323660665772*^9, 3.73032366512368*^9}, 
   3.730323894476655*^9},ExpressionUUID->"bb382692-3328-41de-956b-\
ff1f5a361472"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\[Sigma]\[Xi]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]\[Xi]", "[", "1", "]"}], "=", 
  RowBox[{"StandardDeviation", "/@", "topPParticles"}]}]}], "Input",
 CellChangeTimes->{{3.730323634846899*^9, 3.7303236425478277`*^9}, {
  3.7303239671346807`*^9, 3.730323987088757*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"a2b33a60-16ef-481e-b201-c903e1c2bb81"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "504781.3941614377`", ",", "920604.5402343203`", ",", "942764.6037581412`", 
   ",", "958065.0633136444`", ",", "940329.0762059656`", ",", 
   "915635.0573212513`", ",", "997908.0110570492`", ",", "918637.6212551203`",
    ",", "962428.8649827032`", ",", "991365.4312708892`"}], "}"}]], "Output",
 CellChangeTimes->{3.730323643359034*^9, 3.7303239875104237`*^9, 
  3.730380105170742*^9, 3.73038093453181*^9, 3.7303816480687723`*^9, 
  3.730385744861915*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"d48c4389-b093-47f7-8649-6b874af1610c"]
}, Open  ]],

Cell[TextData[{
 "Replace each particle with four (",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", "p"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "1958363c-bee5-4088-8389-2b6dbc69605f"],
 ") copies, each perturbed by this new ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sigma]", "1"], "."}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d5e5c9ee-87ae-4caf-96da-c43468e7588a"],
 " There are other ways to compute an importance sample of the top ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c4441f20-0568-48b0-9c93-6d92a5a957f4"],
 " particles. One way, possibly biased, is to keep the original survivor and \
add three perturbed copies. We first perform this latter sample (original \
joined to three copies) to check matrix dimensions, but proceed with the \
former sample (four copies)."
}], "Text",
 CellChangeTimes->{{3.730320839259514*^9, 3.730320914539872*^9}, {
   3.730323712122744*^9, 3.730323774906492*^9}, {3.730382450158559*^9, 
   3.730382463078106*^9}, 3.730382972133883*^9, {3.730383236254312*^9, 
   3.7303832852976313`*^9}, {3.730383361170046*^9, 
   3.73038339161796*^9}},ExpressionUUID->"ccf8f245-133c-415a-a38c-\
e7ef630de126"],

Cell[CellGroupData[{

Cell["Check Matrix Dimensions", "Subsubsection",
 CellChangeTimes->{{3.730383320126973*^9, 
  3.730383328075759*^9}},ExpressionUUID->"6fc39140-533b-469c-8bf2-\
a5a014b90f82"],

Cell["Exhibit an example:", "Text",
 CellChangeTimes->{{3.730383409352274*^9, 
  3.730383416077334*^9}},ExpressionUUID->"09b8fb5a-b4ed-40cd-8f18-\
677999cea3bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"topPParticles", "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "41"}], "\[RightDoubleBracket]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.730383013356051*^9, 3.73038301538297*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"e8ba52b7-f774-4c3b-af84-a5bfb0b1ffcb"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"113768.58418999932`"},
      {"1.1185022852622573`*^6"},
      {
       RowBox[{"-", "1.400544691806722`*^6"}]},
      {"457089.92975378165`"},
      {"154946.4617518404`"},
      {
       RowBox[{"-", "374151.92944179307`"}]},
      {
       RowBox[{"-", "354136.21910309023`"}]},
      {"1.405089478079133`*^6"},
      {
       RowBox[{"-", "1.3051895652703329`*^6"}]},
      {
       RowBox[{"-", "478637.6128714405`"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.730383007404861*^9, 3.730383016054151*^9}, 
   3.7303857449118834`*^9},
 CellLabel->
  "Out[101]//MatrixForm=",ExpressionUUID->"e8d60376-c5f8-4bcf-8b49-\
c874d97375d6"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "conjColumns", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"conjColumns", "[", 
    RowBox[{"m1_", ",", "m2_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m1", "\[Transpose]"}], ")"}], "~", "Join", "~", 
      RowBox[{"(", 
       RowBox[{"m2", "\[Transpose]"}], ")"}]}], ")"}], "\[Transpose]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.730383060407649*^9, 3.730383120917873*^9}, {
  3.730383209695719*^9, 3.730383216764379*^9}, {3.73038344887706*^9, 
  3.730383530842847*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"dfaf568e-30ef-436f-affe-78618d51d348"],

Cell["Check that the original appears in the first column.", "Text",
 CellChangeTimes->{{3.7303834242088423`*^9, 
  3.730383433048386*^9}},ExpressionUUID->"96ce34de-e7c9-4134-81e7-\
6e70a5023717"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "make1OverP", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"make1OverP", "[", 
    RowBox[{"\[Xi]_", ",", "\[Sigma]\[Xi]_", ",", "p_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", "=", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{"1", "/", "p"}], "]"}], "-", "1"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"conjColumns", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"List", "/@", "\[Xi]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{
             RowBox[{
             "\[Xi]", "\[LeftDoubleBracket]", "m", "\[RightDoubleBracket]"}], 
             ",", 
             RowBox[{
             "\[Sigma]\[Xi]", "\[LeftDoubleBracket]", "m", 
              "\[RightDoubleBracket]"}]}], "]"}], ",", "n"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"m", ",", 
           RowBox[{"\[CapitalMu]", "+", "1"}]}], "}"}]}], "]"}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"make1OverP", "[", 
   RowBox[{
    RowBox[{"topPParticles", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "41"}], "\[RightDoubleBracket]"}], ",", 
    RowBox[{"\[Sigma]\[Xi]", "[", "1", "]"}], ",", "p"}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.730382434451152*^9, 3.7303824459180193`*^9}, {
  3.730382557290863*^9, 3.730382876372209*^9}, {3.730382909360773*^9, 
  3.73038291081068*^9}, {3.730382947883396*^9, 3.730382948848579*^9}, {
  3.7303830409041452`*^9, 3.730383040991829*^9}, {3.730383128893631*^9, 
  3.730383195735268*^9}, {3.7303834947353077`*^9, 3.7303835190365067`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"ec1e2672-5646-4519-ab39-09b8c81c1892"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"113768.58418999932`", "813537.1984058765`", 
      RowBox[{"-", "364421.4937240761`"}], "288311.9633320306`"},
     {"1.1185022852622573`*^6", "614706.7541769382`", "828797.1915272998`", 
      "1.6435553724471875`*^6"},
     {
      RowBox[{"-", "1.400544691806722`*^6"}], 
      RowBox[{"-", "2.3695384588411255`*^6"}], 
      RowBox[{"-", "722736.6176796833`"}], 
      RowBox[{"-", "1.6298213436272552`*^6"}]},
     {"457089.92975378165`", 
      RowBox[{"-", "1.2809505982513684`*^6"}], "1.5494677174255014`*^6", 
      "2.3367175895650564`*^6"},
     {"154946.4617518404`", "1.6142385684862828`*^6", 
      "1.4578663411349747`*^6", 
      RowBox[{"-", "1.6552858844196482`*^6"}]},
     {
      RowBox[{"-", "374151.92944179307`"}], 
      RowBox[{"-", "1.6578618455448223`*^6"}], 
      RowBox[{"-", "916922.3155301942`"}], "384679.3509496481`"},
     {
      RowBox[{"-", "354136.21910309023`"}], 
      RowBox[{"-", "36900.70845473453`"}], 
      RowBox[{"-", "608899.1898526758`"}], 
      RowBox[{"-", "518885.27281467005`"}]},
     {"1.405089478079133`*^6", "1.5791213421825124`*^6", "789881.4442231804`",
       "2.0226069732306283`*^6"},
     {
      RowBox[{"-", "1.3051895652703329`*^6"}], 
      RowBox[{"-", "1.826921450815114`*^6"}], 
      RowBox[{"-", "1.3562738306529468`*^6"}], 
      RowBox[{"-", "1.077909592125263`*^6"}]},
     {
      RowBox[{"-", "478637.6128714405`"}], 
      RowBox[{"-", "561122.8136398506`"}], 
      RowBox[{"-", "140113.8849845833`"}], "546610.0632090293`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7303830433078823`*^9, {3.73038315866811*^9, 3.730383219470324*^9}, {
   3.7303834963300056`*^9, 3.730383533953497*^9}, 3.730385744964766*^9},
 CellLabel->
  "Out[106]//MatrixForm=",ExpressionUUID->"fa19cbd6-5eae-4f48-a239-\
1bc50e84d806"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unbiased? Importance Sample", "Subsubsection",
 CellChangeTimes->{{3.7303833353642473`*^9, 3.730383343150861*^9}, 
   3.730383552510256*^9},ExpressionUUID->"1071a97b-9de3-4dd8-91b1-\
585e6733971b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "make1OverP", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"make1OverP", "[", 
    RowBox[{"\[Xi]_", ",", "\[Sigma]\[Xi]_", ",", "p_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{"1", "/", "p"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{
           "\[Xi]", "\[LeftDoubleBracket]", "m", "\[RightDoubleBracket]"}], 
           ",", 
           RowBox[{
           "\[Sigma]\[Xi]", "\[LeftDoubleBracket]", "m", 
            "\[RightDoubleBracket]"}]}], "]"}], ",", "n"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"m", ",", 
         RowBox[{"\[CapitalMu]", "+", "1"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"make1OverP", "[", 
   RowBox[{
    RowBox[{"topPParticles", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "41"}], "\[RightDoubleBracket]"}], ",", 
    RowBox[{"\[Sigma]\[Xi]", "[", "1", "]"}], ",", "p"}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.730382434451152*^9, 3.7303824459180193`*^9}, {
  3.730382557290863*^9, 3.730382876372209*^9}, {3.730382909360773*^9, 
  3.73038291081068*^9}, {3.730382947883396*^9, 3.730382948848579*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"1898fa7b-8dcf-4e0e-aab0-0e629781e321"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"413087.96149077575`", 
      RowBox[{"-", "130084.76826525992`"}], "515787.96251074877`", 
      RowBox[{"-", "483381.8709003806`"}]},
     {"1.10461869669919`*^6", "155184.21437542746`", "91592.91944571771`", 
      "1.0585301984765404`*^6"},
     {
      RowBox[{"-", "1.318154234180176`*^6"}], 
      RowBox[{"-", "2.245143291375789`*^6"}], 
      RowBox[{"-", "1.6112855689336683`*^6"}], 
      RowBox[{"-", "1.8898031829798655`*^6"}]},
     {"197282.7469632941`", "1.3512603641878176`*^6", 
      RowBox[{"-", "153601.78428901406`"}], 
      RowBox[{"-", "1.1632916070879274`*^6"}]},
     {
      RowBox[{"-", "531961.7677726311`"}], "645760.9195429448`", 
      RowBox[{"-", "260122.17518667973`"}], "899926.0819807287`"},
     {"1.5561441501704536`*^6", 
      RowBox[{"-", "516224.2616355485`"}], "523551.5936155703`", 
      "526978.2495428789`"},
     {
      RowBox[{"-", "806094.3705682368`"}], 
      RowBox[{"-", "646648.5845753099`"}], "176048.52640314994`", 
      "1.7733828502629667`*^6"},
     {"1.0372420183330606`*^6", "1.6593275363849476`*^6", 
      "1.5343035753255673`*^6", "2.8538472804177776`*^6"},
     {
      RowBox[{"-", "2.606833139333257`*^6"}], 
      RowBox[{"-", "2.614430094476142`*^6"}], 
      RowBox[{"-", "1.115635154374146`*^6"}], 
      RowBox[{"-", "3.6061094266367704`*^6"}]},
     {"21218.51251287863`", 
      RowBox[{"-", "89448.66716881632`"}], 
      RowBox[{"-", "1.4844056519348253`*^6"}], 
      RowBox[{"-", "713941.6630302259`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.730382800571287*^9, 3.730382877345191*^9}, 
   3.730382911745121*^9, 3.730382949966806*^9, 3.7303835549143457`*^9, 
   3.730385745013245*^9},
 CellLabel->
  "Out[109]//MatrixForm=",ExpressionUUID->"85f3fe88-61d2-44d4-886c-\
41b89d48ab7a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["A New Particle Cloud", "Subsection",
 CellChangeTimes->{{3.73038357758184*^9, 
  3.730383584912326*^9}},ExpressionUUID->"d74d286b-7b01-4745-b903-\
b61a103503b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"topPParticles", "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.730383712981835*^9, 3.7303837179242563`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"3b15fa89-b72f-4d3f-ab5a-974e7c28b2b7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "250"}], "}"}]], "Output",
 CellChangeTimes->{3.730383718767002*^9, 3.73038574510378*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"a4ca8ecd-598b-4963-9700-e3f224d06726"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[Xi]s", "[", "1", "]"}], "=", 
    RowBox[{"Fold", "[", 
     RowBox[{"conjColumns", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"make1OverP", "[", 
         RowBox[{"#", ",", 
          RowBox[{"\[Sigma]\[Xi]", "[", "1", "]"}], ",", "p"}], "]"}], "&"}], 
       "/@", 
       RowBox[{"(", 
        RowBox[{"topPParticles", "\[Transpose]"}], ")"}]}]}], "]"}]}], ")"}], 
  "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.730383603738851*^9, 3.730383700612975*^9}, {
  3.730383751206147*^9, 3.730383786660882*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"1e6028f6-c334-4c5e-9c10-7808a3ae30b1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "1000"}], "}"}]], "Output",
 CellChangeTimes->{{3.7303836860614767`*^9, 3.7303837016429567`*^9}, 
   3.7303837574223213`*^9, 3.73038378758365*^9, 3.730385745162033*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"7ec6597b-f960-4456-bd76-6dd2a0d8e34f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"threeDPointClouds", "[", 
  RowBox[{
   RowBox[{"\[Xi]s", "[", "1", "]"}], ",", "\[Sigma]0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7303837902430973`*^9, 3.7303838179937887`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"5bd0e76b-5c66-488b-b734-b4caf94d7ee0"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`i$$ = 1, $CellContext`j$$ = 
  2, $CellContext`k$$ = 3}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
       Hold[
        Grid[{{"i", 
           SetterBar[
            Dynamic[$CellContext`i$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
          "j", 
           SetterBar[
            Dynamic[$CellContext`j$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
          "k", 
           SetterBar[
            Dynamic[$CellContext`k$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}}]], 
       Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
     420., {206., 212.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {}, "ControllerVariables" :> {}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Graphics3D[
         Map[Point, 
          Transpose[{
            Part[CompressedData["
1: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
HBz8cZBfUgYtPgnQtJ+XxxCh2NbNUkPsGl1t6xg1wr40pYxTAUp4L9Jr9Kyz
JhpKTX4I1lqg9DCH2zZfUIT2NsaOM3t5oeXR0sbGMwmwZaUPFvlAhpITjp9q
ZSRwVr/3rNWln9QIW4HoBE9z1Cvi6icPkdG+SubppXY5/NbNYUkxFgOhkGOf
S97xw0vlNg9I0wW2J8dZCpW3cuLrj5MlJGmI014fvyxIAlNsOZgQbQFnhgyP
B/2lQMSIryqbrSgKaNN/4NKSxc7WOOvECB104FE4xCNAwf7WM/p9Ajuh+0VH
Vc4tc4jXWR4hLdlDbtzrTJN6E2CTLipPqTLHgEQj/awzuujsSoQMJzIe8Pps
d6tBBg6vZtD/pVUAEZYQy4it3N9LC9EqBmp48Np9H/OFFepXnRMeBSUkCOzz
+Fk3b4bLS1Mi/NcJmBJ869iVVT20Oqr1tukzG3CWOtq+eysDf/cLcNnHKIFf
oGvThvCW79E+pGeOIUNXoobhAzMVaJr7ffrRLk784PGnjMVaGmIOs7TUn+SA
Y/MPyvh92NDsP1/zgS/8cK2QJ/r9Nxn4I8P7eN9+DaCy03hwj8hBxX+/Xr7m
4cHOl6rlXvY8kH5pxG3Xza39eiCSV8W6SHXqC71rS9XF+JigvF5fMog7vUm1
4Jun2J3TbRO9JYiZPyWb/cNFcFUUq7d1ieFi8/gTGNSEeYYHvuUPCRBTQ1G9
s+MpJT+48/CwTx9lBwl9BKNJIH0vlNdhXRoFyRuuGqoWIPSS7+btzBXqBZjI
9a4h4NOeOEuCDCOc/nbYz/mTLL4M+3RwhFcaadwOb6isOeAuwy6u+y5WONVn
Np8uv9X75jtSj5SZY/LXYtLuEjkcKKfGaiQpgejuz26Eh3JIqOj7G9upiGcO
lLzWE+GB8BvLbB4+8iiot2dX7CtjtH9q3j20qoDiGsusaQBYNj/D+OuSDD6t
ZNl2p08R5kudB27HakPaD/1rZeoGsEZPLNzlq4YabkuS3iPiMKTEteZcpweV
/PbjnI8MoE7nTYF1LhtMdC0UeFqSIOi119NsOTO4dnZvTvJbesg84fbCVG+B
Uskrquo4pAxE585mtrLtaPNOYptPDT9GqzmNpubqQol+n/Tqdjl4eH6nfupO
LnRVUTPf08kNviu1+dfi9cEvu2H86zUxkEpm+vtBGSA+UcgkcYMOp/btHI/b
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
PTjr+TfulDOGIuqj59VZipBHJ1vtdtOH0YHj55XmRZGZ/8Gl8SdGmDe8cGU0
4ButLCLsZGCnAWpvHvMJfKSNAi4sHN9AB9xN29WLVHjh42eGprc5DNi6Ipgu
92idzmsixFb0kwdynrM/NuESwIP/eG30D6ujTXK/pi0ow+6XqkyMArpAXjrr
+PWPIohKrXyPpyoCQXtEftXZCB8cP3+3yJwdrapW2J7wyMIpNmGe5fdE2KZw
T+boRQ3Mfx04qedkiWq5u2Z3GWtizPuLv9wnqcj5JDpquIWCzbGVYo87VJFN
oZy90Wuj73IDl6/amKDtf5ICx679pbmy77hZddoYGtg6Lk5q8cMY+2EW2WJ5
2C1wafJ5vTJGbO1suqSgBXO+z0rKVGTxlr/6qm2nJPDv6QpYVlBA06gIXQW3
PzSfscZh4oVf9HjDd4/zk9WgZH7vf+/KtYHHpKm98KMuuLw3OE+YYkdiaNEb
CrcRSPpSqvcd1AWZolhq421FUC06Ju50WgdCrF3s4zjUIP4esYzJWxdbRyTm
021YMCAjMeTpbk6Mlm4xuWavhTPmt37Pq2lDppEj2WWDxzavSJyp2YY4sThv
XPOAgJJplS4n+BVwhjHdNjdaGRbX3UgDkVZw7H2cC3uGNA427Sg+Y0in/5f1
YCfXI3FUFox2qpDUQe1xxgdpbnKYJjilr/hLGdjbXp5fv8yC78J93y5XEzBA
N9vl8QAHCPoc6G0qAWy3HvmLERxA7zEUTdrWRa/elN5P/KmJIg7uTUZsuiBc
yZIksqQHfAPKgfmhyrjjhe5j439KIGx6uy7QhATsnjzhwrrWQGkwOEHfrQoT
J27MTxygwCu/t3Yml8jovCsn2DFfEusERr/1nbTBhYy4d89jKJh3uH9/ZOF7
2s2ldOqFgzRYay0z7lxTgwuFnTenvojDKt+Mg+BZYzBhMvS4OmMGjTz++fhV
Dr88PrPwtIAZysRzf06d44Blht+UkBdqcHrvtRMltSxQ/0Q5ufycOMwNNOAA
iz5+4PU5SNBUwbcRL3pYubYie9X20bfCijg8MxFcrUgCSrlJk4e9FJaHa6gF
LevAdZu+45d82CCZq+Hb07jftINdmsHpQ8KosNSwz2F1M4wkO54TE1ABda5z
Jesf5KFWq471Ij8V1Gp0LX7OqoDpyqNLKc4kuJYZx/DcjojG298M8VL5UNTc
XPWntTXSJ+rlk46zwxvNT5qeRVQQmu0uC/WWgky1UkkmLXVonp43TY7ngop7
Nn5BfCowm+R0KddunLZPxbXYmocXl5v6ft1N1wHGwn1PhnuJcPiHGXOXqiqK
RtUuFbDJQVmOTYvx7Xna5uTf/FdPagLn6V7G+HZGyCFcWHv7jAgBcarOpsZi
uPRMhnvxyyxd+MZJK9ODG90r0xv/Kc0QVCIuzCblcGL38cNCbS46YCMmIO2x
sZsfXnvJeDhQ4KtJncixCjKwmX4VHlYhIP/Tw1t590ngoUqYCz8sj/M2ideL
yMZ464mmca6oGbCkVcY/FFeEjpG2/Vsvq4FtcACl0HCR3ndRMTsw4ge9l5g6
w+Ogi8KzniXbsmRxcdtz/22cVJyL6quMVlbGSPtC4eNblZFpSrfpmbYh0EXL
ezT+AoxOSJQfeKOD39/ZnnG2omKEN1XmugMfqKUNeF2IJGKP0KVtZlWAvbkp
w9LqutjzmJdcW0ZDt8Hqv/WNXPhYTyJgU704BASsH+JT5YO/v4PF5WY54PT9
voar0Zuh9MHSK+02dRzpdp999U4a/b9x3ZLMU0LrnmXTS3ya2DkVpbBZShBd
24XXtuRrg9t75i7T5AV6KsfNtspjE/QchpGRsBodzIs/GqC6zQTPH/o82e1L
ReIYT+7V5iHapPVvncO8AIGxQ4GJORrorsN4pMRVAPbnGvi6JstiZeXnlH+v
NDFnIvhJc4kmNm+Rc7q/nQqyqqNb/byMMZu9+VSrAR8mKtzclr5FCDPusCxF
lBiixp3I/b9kbfD1r6Iau3oJqF7YB43ZFPAePm8b5WIM9SYPp+0E5eDpHoMB
1wMkuOz85bP1Lwn8YDiRKv5BDevV+Cmec3pYcz1E6GiGBpxeW+vg1tbAuF1s
vPeXVMDqaMPbWh0KfldqOTQvYYEP6bJn2KX0MbosmbNOYpJe++TEie5Hqqgi
5CUwWWeKbD/ux+kZL9PMU3Y5j24iwcRt37ytb+Rx+PCeqLLM/3+Xo0389vtF
/ytz6iCDixTwHlzoETw9SuN9vzXi94UlWizzi2A1Pg5oPRdZf/TUGr1p1Mvl
hCE3OovVuN28u0abHIfUbxXm6LU3NTRGSAjIN84m/32ji0VLQTHVc1Q0n+mN
Z97oXaGyxxwfXfTxoUo9f60yBbXGv+6JjzOAC9n875/aycMXgbH9i/zaYB/+
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
gLfgWdEubVCJ01JXruLDz0+jKJv5JXAtJoAnXl8XpZfbFqptN/znzdz88LGN
Ac/7buJ7xAS5xVOLDZK0kBIiFeJpOk8vlA8XUF3SA6j2ZysxUIGggs4r/vU2
EJ7NcclnQRsWZrbfHiWowNqEomP9HYCV9qOFIwnKsNy2/oOmawFHv2itO78k
Yg35YvfsAQ18m8J4ZpKbHcJ5PQIVrITx87Y/LF5xvGi4Y1REvlkTRuacD8tx
k6BiKT7QZ0kHzfT+e3awRBoj+FTzu6q3oOKUvo1z+Ar9QvGXr+abTVBbenO+
cj8ZMkYa2usMGTEvtdHHw8gMijR2+dzpVwYhCxHZwQoh1ClrT/gXJI5P+7Yo
Feoo4BPV1xaM18QxftCfkCckjg/NEuTqAgEfPTm+hzZki0bCoquT3wB9u7k9
mD8KAV9l67nfb0gQVy50+IL4Blp87OtUTxHA9aXtfcXnBPwncumYlaAIMoza
5Fv9+kJ/tD5TUOysBrK312e+chnCFdZdj57TbYEh9RMHb20z/Y7y3D1GE01I
js+LNHzIiZResY8VvwnAGXJyTIJEA1eFTyGGcpLAtmnwmKqeIb66waQ8fJKA
+iJGlWUpVKwgvLI9sIkb/yRnNUnEs6Fgnc6iCycDhL0M8R9YNoemgLHyHFE9
nLR/YbVVVxyffFhJuq1vgplXOn/cJWjh+7qQU87Clmg6PFtIiJOHT/+Y2Bjf
E+CYU0Fv+FlxMFqILFH1JUL7UMNQ58bOhTrtc/8aKg6vAiQ73Z1Eset9Z/w3
Zx2QpRyhTC3pYo2JvyRe0cQuYQbywZPy+L+KzjScqq+Nw+Z5JvPsmKdznINj
Po+ZDCWJQkiRRpQhKUrqT4NQChmSIhSRUOk8KUMJhUiICKlkyhR6vR/Xh33t
a629fvdz/z5tna9F0p3cZEyqeDoft84LAT8qkhfZxNF/9P7uXfu0oVS5PEnx
jyBIBl23ZXXc4Fh3pcwaJw0E5huOvFu3AN++0k15gibAc8HmEWezNh6Vst5y
XUsWH130ErKsVcdXB4ck5/Xn6BXe710Et6mi2uJH/6Qfy7SjDsqMTeXz9Osu
V51+yOoDx9GpriWSAbzyW/wXEi8EK6sVk2V6JqAjOxEiPk+EmC1aT8xPyYG0
ECthLJgVmNYW1FeWFDGz3DkMjovjg2bjU9vKLPF347LqqUp1zNtN/vK7kxdU
ef6tBNkZojxHqeEbg3X63/TewDAvA/iwo+GlJJsCfGypGq9cEQWB1zM2d/r5
kOx1bnyqXwsjeDuZVGaVoG2Ip2rTZxF0lAmlv7hvApkGoq7a2Qpw+N1w6NpV
Vpx6HtIp77eR/yiSUDqTLK5+cZrz3SeC1h5Pqu5NC0OcM/f86ZtII+5Y5hzv
V8KhrdK76lvGaVu3tg0OiwMm7h6hbntJxuwQ88phKRWc7ry11uJohSI87f5L
w3roVfW1qCWViicFmz1b2YSBunzaKrXAGNQ4Cd2r+ptQ7YPp2L5b2uAZU70u
Kc0OgZnaJy4X8oJUpKCrdsImhB8BzzTcFSGippHFQUMEKXlFmy83UMEnrCSo
ToWG6CSk43PGFMJ67EllKWYY0p8b6B1GgDiq/GYX4790iYePbchtgjiY/KEL
19Vhh6pUigszCVzTXxBdRuQwdZkuwRO0Sm/FgBc8ETJg+gd0tXqVILFshZbd
SgU1vva5i2EmMMZh4tKmqwy7DQubVOkbc+rbBdGlX9JYxf7ztdorPSjSynEV
8TNBTb0ewSR3E7QOKc1n4TBBN1GGpX4RPUxuj59bC9OHib6Z9p6ljfs4hIIF
jBZg6vjhTsGqKuxV3HFgup+Mqxd7WD1cnNHSyIO8RDPHwNBZsaEyQGqIp96v
CHNku7wz4y9RC2UvBj+pDZGDzCivmKxTQpAERyo+dRphvaO9Wd1FW/z58+5W
NQMrVP4udKZxjyNe9NabKPuogXpm/4zcfDeeP90+d3eTHubnng2eEyTg9O8r
nXMPSKjAeqnjZj4JD0txPP1eqwfmSmIlWewU6GOdGi/mMoW64fVTCuuqmKsx
NGRwTRUWPvbUi9WIQ6Xol7eX0g3xxHGLPyn96njKQmj/thJJ1IoTowSMsKK2
HS2308QSjGo7OJYyDKA/84hbk7gteG766MHApwPsP2fO3kqjAKEn9sqDphm6
9zetRylyXNi3w3855ZgQmH1r+fXfGVN0UDBs7zhihLaiPx6wWNnhUQWPc1mn
pmlOUX7tzWQxvK0bseTzhoTb8taz97VscOHQWe2MVn3M/Xx0LrNYBAU4d2QZ
jA3T66XNFzNltfBwXTjXJE0QmY96XBK9oYp12+dKKi8Yw90DTu3fQkgwMZCs
UyUzT6MqX/8WgHr4PcC1coukPojfqKXe9daHoQZVM34bFvz8t2jrtSAp4Lnk
pqa+woT3004ltlsQ8HiN/v42gjye1M04pbTBN+lUs2QeLxI4X3HN6/upAtTM
zo9nHxBwhkPF8vUbCtApSS1TSIGqoK+H+G6QwHelTqmCZA6OFhwvGlVVQCXs
kN/rPk10PDpUPPxBATWZ0p+VJlhA+D7L/AKSMebdyREKesqLL20yRnqjLNBk
s8LxwS1E/H6mnKfOQBzOSZez3ZGQQMPBNzvFKoRxVaI2Ukp/jD7eHRY/vZOE
IqrHB6cm+ZHW9Czw53UxJA2/E//YZIDyxHbZTVOfaI0UGzWXCnUs0z+2+xZN
Eevj3zTlHtaBBKOugLTLZDz4VMN4JVoPD9XV3JlW0UWOO7dbIyIUkMVg5kp8
nzZ0nicMSw19pr9tuBGbN0bFcOESyuUeClYbEik6/qaw7rhNIKWICKosnasz
Wy3h0Oy1++ssalAV8ISlZpGG5Qdl5Wz/sYN52JHgX4FEpG+XL1/2Y4WEF72E
2i1y0HF3fTU8iB8/6Vw7W1ZqAtfNSewim0jwwEne3aCbAz9ITbAeVjGAgzXB
WnqSusj7pvMPYZcO0vSNdJnSvtFHK93yDGVFUbRlwvsvkywEqGHTWosp3omJ
Hv84x4VfT8vWjT40hPUhJnXdfipMNnXqJTerg9ybLj/zMTIyb5M1tzkihhei
kv6bfb5AO7mLf6jgAwFDRnuh4SgB3X9bjP0Q1sR6dWcfm6fLdI9nx+sFVEVx
S3XUC+KLIRp/6paViRPi6GudwHno///nTnCPyTnEhNI/zO7v9tbBOLFQ2iWC
Bjql3D78Md4S2T0Onu4VMce9jMzE+EVlYBr6T/bwIR04qLL11+FUK3hw4lhL
qBMn1N87Ir6fRwX5B+v7OjbmpV9AxN1mq41+d+inC6+dPrZcr+wSZ6aB+Mnh
qF8kHWje3qn26Zwz3D/yLN8gQRGCTcfEor3MQdjt1fN37y1Bess33tlLCzT5
vztH1I9x4OWJU1x/Bjmgd1Kd9+8uAdhZrFEgIiCMzaNObAbZmyDVOMTr1AV9
FFk29OC485fe/KNi7FT7NN3SbXrBm9sA7N7yrj/LsganxXG++98sYT1feWB+
qy0EpV+XarUG4An9es94UBYLhB5uvrBoiitsh6VEqxVAQShXetVcB+l9/MuC
m7rpQFrjU3spAENnBCMHSlfoxsupj2jiFGiao2T27TDEl9arMRzvpfFCgT6/
yVVzePh3WpQ7RBW+FUxdP7rXBrQMiu+3qBiBtKhvnlGaDXR5K/Ne89GHosdG
zgflOEFe0sHZpUEZVu0KMs2WldHayuGpZfHGPS3M3eThZYzT55UrXajGyHDj
FXdFOxXDejR3P0sVBTWPq8vJSfzw1NivaK5HCoZOeWpMFK7TJO01s367b6xr
0h1JXwm48PCjX7WGNqaxqby5VUBE6+j9ds8TN3Ll//x+zaoV3LnJ//mILzNM
Dr2vIE1qQe91lR/KnyTgbU/++Pp2A/Bjsnu/i9sQahanxspCjUDc23rVVYMI
S2ZDXZXBhvD9n1Ox7XdzGP90bnGZywiKVEouHHTgxlPbVGPZONWh2f57rpE9
D5jUcPk8FSGjUHNxbUaoJhK/149sDQfsurL9mt9pSxT2zB6RydXCz/dbdn5S
tUS1l64jlCwnTOU7VeldYoMnE52ObGmRwlx/ry+H+01QLVm/8IucKBqrT6tX
24ug6dEWb8lqRtQscp/1LtLDW2Wcmt0u6hAiKBCmpCoCwbSRYvkOawjvkmR3
2kYEMdeVgoVBC+zrWly/nCYNn1+fCu0ZFkMp0odLfFRTFAqwed1bLIgiQsy1
2lYDtIbmD2mczsLAErhZxmqOACIOjfryHvZAqQ1Vv5GoD3zc50zf73MFitqr
fYujEnA7VO3BMhcB5/IZlOmtJCB+4uT01GXAmjvLw8RYRsyNLeH8d8waZill
J0pvsOGz4yTpaQ4KchR07kn2nqFt0bKtt1QZobkXx4VL/ccKivUi+yvjjNEk
6ENFzaoSfDribOAuIo+ZNx32TG709Tuk+BePMlhwyeH690TSKF07YemO/qA9
2l6OPd7cb4/3xKjU6Y17tHOUz7cn2g4frii3OGQaQaZcYUGJ5AafavvWsyP1
gMPw6rtb78zg+k+r3BVxRvj0w0UY7pKhfNErwO+7HkaohOoG2k7TEw9kuHE4
EoEpIlicNYgZFmr2kR7/U4Fqx6adWiG6WJsbk0v7pgCq2bn44owK9jYEHR33
5IabF970TQqTYfgMUznfPiHIWxSc4VvWRZmIarIzOwV5V2ieKQqGQMyx3bzz
xCiNJ9PkZIIdP/KwNua4dqvC0ROxtN6tFKDR64PYgrrp9YE5D7c5KcF8pSPl
p4UEPC5+sXovXgF6tbonZrQUgDP2lZ0+szTK+mtGkXw4Qertyx9uCWSYNFh+
pl+jClO2ct9VHKWBQLx5uD+UBH2ifBIX2yyh6b3/fv0EYzDkuF16LQXAemcz
gXXD8z4+cwk41KwKJ1N1LSVJCtAzaeprzEWD7U+s9TnqbWDzjqnekxd0QP3r
ZDLzPksA/dthn09wgmfF3hsoyIdsXwQFVm5Jw8Fs2u9CISMkhG8JWvhrjVY+
FYmzmoYYPDq/TXyvIp54WHrlYIA6/u4c6dlG5AC9Rtdjl0MFsXskZtEgZxME
BLfuH54VhT70aPbx1YCod4Znkw+Lgngb/4D5xpxLqAGGIeoSnV2aSzG9VAXn
pxN26kypw0Ef3Yf6ZqwAAcKvk1JNoO3YLQHf05IQZ7WU7W7YRDv1W8y07iIJ
jbiqYtU1SdjFvyR3yFsft99UP/HFlIB1msJNrA91kOVrVsi1j8pQKqynS9zH
hPTUzX4v7f/RI+Sii/hU1YH6ROLPhQVl4DCuWs82+0ubNn8TVrCTE0tfTe10
rjJBD8vrXvdHNVG3cfv3L9JUKE8Z4t5cIwRxgVmHAt4rQsdfntKXqX9o9xdu
NZ4/KoBlKZpb7l3SA/mPkaldJmTkzmIC2j0yCrvVN7dZkZHT821hESvgLO3O
o7ZmDfz9/hSD8iMNyA4MFt7xzABSlCvCyONjtHvl+73c/UTAr3riz679Srj3
18HN+urUjX5AYlSfMADf3XvP8z9RRvnAe23igrq4Ne7GFvEgE7x/N2PbMR8i
uhTbWx/QtMBT/e99pGKsoOyL58HPIwB8ekqDWifVcEIpg6fhDA/UG5Lpv0gk
5Aks05FyJeFq/O4oj21aOG7KVBD5Uh0v/ZOUaLGUAcliqxOes0QE66zYXIa/
NN5sebYmTV1ILDl0pD9RGYkLqqcrVZXA7/QB/RUbHbQ//6nt8eUeenPy8Mmd
i1TMLb50IAsM8XnsapbnBRN0XP1wnX14Ky6FNGeLUUbozDfDjYPahaDh7Nt8
P4I0vp5f9pfaT8ZF0t/AfamWuBbwMfZqlD4Wxbg1P+fSQxGJhv4Tdi6ovtoi
E1NpiI/+Lu6xLTaFjt78qgqxKVqc4ZHMlxdK6NXemkraNpq4fbNIrAKXOpZa
7P+S2UHB4xb3mRit5bA3wPFJ0F1TTE//8/uPnxDe390p/CHXDF1uJsQ8aRUF
yp833Vw1BrCUFdgTrS0DDH3LnELRI/TshQgds3ppuLOq/7CUXxP1It5MV+QY
YtzKi7pVWVaQP9jEmlmsiV8NerYoBouizHA6j6CEPpS7KrpMvCYB9bJPaMoO
bmzjT2NlNleBw6+/P293I6K6zq3t2sNKQGjU4lRrVAcG8+OSgTu66YGnOFBy
pzLKEl6tHh3nQIvmjUyNCyHV5FYgmX+K/mBJd0dujDwmdqg/iz+oikluSsUN
vATkfewfHn5FHV/f/3SjxFYVPmsyPO5rW6ELLBcfr+eUx5293mtrDir4rOEq
w2eKAr427brnXsWPhs/27GUIEEAlkaep+2NFMC9WG39Sf9LFLgpbVRwwxa82
fo1sVwSxQqdkOEyWCMe/FqkwcmjABfF2obVX+mAT/sUrP4UEtitlB+QaRUFm
Xu+tjK4GJgb1Xv0cSUapZ1teBfkq4LB/8TOeJ2bgw8x62LZZE8prRrx3Jmx4
z9zHpF0WVpAuXVUd+8kMSket5YpHFbFU5Mqpgv3qICrN/0SgWRdiD/XXGylp
gumcTXvHoiEuEEWem3w1BHuDe1phGTSUeF//Pp7XBA/p/Hg3U2cAa25l9d//
ESBomulvtr0i/vShcaktyWOOuoVMrDkVlFJmDMVUyBjPqEmZtReCXGPDklEJ
PRBa5+mx3awO+60VQ833mQMt7G741Tl9VI9o1Y7PIsJTerCJoYw8mHDczLz7
kAjxk7l9vMdMgIE4bdKTUEK3WKvJSg+1hsTQqTS2ORJUc6So+PEDjEYdu/CB
WxAopy/cv77Bz9vzN7sOqmpDpILgX7KLHjBMjwX4myfQBSYf56ynKsLsLRae
4EUzfDV8LYAtRxxbj8Xt6NlEgQ8cZ/+dSdJGLwmy7T43A6xKnfrjtWOGPiaw
V8SomR/pa0lXC28TscMmoKxOjQQ51uU+Uef4kcVp6B1hw0sEHud+8uzUAMuH
RffDW9Rwh+HocdXnNKTerGJMf7JKZzE8IBVFMoQuRpX47ilh3EM4c/fOggTQ
Q95c2/NmE9B/ba/oztcH+lanSMvbesgw8EC44fo92pzbpc67jwwgisR45fmG
l36akCsJ8NSGbN74K/U79EFdYGqEdTcZLS62TvIxUZBH7up/U6+sMHGB4dIB
2w3+bcn/mheuggeSr59RuioBMyHaw44DZBSRHqJq7CVjfYpYohWnHORprE0w
aNTSvTe/PyLwfuPcogzdO3Qk8dwRhrRwYVs8Xf77ve19K1R5ezCPSxswLnXl
JWn4J32a8iXRhXOKPpBbJvZgnoTXzmS7b1pRxFW+2i6nEmXIBa9koR8U2P7v
1FTGTwK8Snhkqu2mBHSXm5kRixKYrXvNuCCFG1cLmp4uCxGh3PfTl1cnKZBH
GxHm1mKFlLUhvdeBiuBaWi4Ut6QCjLZDF24pq4KuMHlb6C4yPmJoEA98bIbN
v7iPCLSs0SnyRUnODWQc+K7oADVEvHGi2zO9Whb8sgV1DvwHoCqdIBmcRoFT
0kpnFoPMoTpss6CZvxr2rofO3vJYpG2JOl8iuKgGztEqK6M/ZOErsfUhz9vN
IKL65SQbzQgE1iC/aGKeJv6qLzz/Bx/SOA2FQvf00DpfrZUIX9UDxa1EtxRv
Ksir9bMmJY7QLbNyws4JmGLcr/3yNwqHaG7zMVdKb9ptzH25xxcENuG3Wwec
/zgRYcuudL3t619ohO6e/O2zm7CAz/VhpTkv2j/VnjgrRYZLavJyx5wlMVl0
ZtjyqxYyOkh67r+uhUcd4g66PWKClLtzs6WVQsDEJfK9RQ0guu+jR8p7MzBd
3KpnEucAQ15C8YV7YOO7ms7G3pEAyyxn2R0+ZJDViDMrrlPEj6unPzy5KYBD
p9+N8OXoYYkRQXr6oxSqtJGqYEQU547wRGvVE9FJ1PSySpYsNOf+UW4btEQ/
Ckf8tl4NKJz/x2x7hYy6zZxKMyCIrdF7fci1G3y4Rv/hf4IGL1N3HxPspYFd
UqsJL4c6BAxdltleB8Dy8Jqo2mdltFu0vUyeMQTHgASnphucaHximGXHaTXY
Nreef7iVD3xDArvK/mnCKFO9V7i3Pozr3I5cMFdBNb2Ok54iukjzs3z1uFEM
iTcWykac2IFDLjzhzCVVbH1qphAsPk8T2P/twOHGTdi/+0AsuwYvyjOP/14o
0YEL9/waBkR4II+o30Zrs4WQ2pq3HndsIZWF+dRlcSowJYW9KjgCuMWp6mfq
zSX637v8QdFNaih/keWEJLcDPjzl/a4xQwiqGQoquu1YgdPlwsW6PRSMtLS5
nnN/E9xn6DMuqhLE0SQpqZ3H1HFIWnsp9z8+EHQu9ty6XwEuL9z225OnB0OS
/nu9rbTxt4annqWPGrA03Lg9ZkJBq781JrsVtCBCaa/2ZjM1pJubP87wuk+z
iPx4YuKYIvZ+uTn7SHWZ/lJwx9bkIBk0fX800ninIq6f//FnIVMNgu18rYqu
aICa0smG6Cwj0HmUPFnpqoW14fyvqictIezo88Zd+VR4GJPpl9BAhbve740Z
TU2B5+tbS8F1Ntjv7pXvK6ABMU/a6d0HhdDvcIoqS9QanUaXopf5SmOYunwl
Mw8Jptmty2c8jUHGQ8TuxHtmqD0n2J5GomCMuWNlj4w2FLjh2eEBTajZVkVP
2ioCSjdTXfO0dIAz+1N/24oJOL6mZPgQVNFqn8RoLpceGK6lUKxV9aFFj+OR
IKMp9FsmX590M4LXSUL9V2NpcOo2w4SljQaev8nfb1FDhkY98vmZF0TIkPO6
usVLH9mODLny7NICh/9eZGaG2uJR/M5D1FXBM/JPK/MppphHbnx1c8MvqwyS
l393GIDgxfrgWnYi2Ob2L93LV4GTac17b0kqgl9Q6tz5Hho65gy1FMqTka59
xz9G/h2NaUQ6YVZeDz3w0dfASDvQacgUfXTLGqKzwwS2vjWHHF7Pju+X1UD0
8e+2GGUl3JwuQLglqY4puXdeq40KoRufrT/1iApQDlv+vaLAigKRl5gu+xth
8774kS/PjJFjMFr+qLI+mvtamX7e7Qr9+zqkD5ULQLLXrDa3/EZ/45YaWOy1
gEmtxep98fJQYHaA8XySOShzFj2oeaEG0nWv6h9mGMIj9h3KTn/4YXfit2Mv
DXRwi35b+usEVrCJn79WlKaCWmu1v2W382GMGGV0iA6oNka5Te0zw1tdeoY/
xLVwpdykXm2XMQ7tpBpI9LPCSltH9uqwOSYETm/51U1BvW+nLj3qJwNNPPnq
XR1RfEi4xtpM1seZt1P+O/YaAl/hm3jSgBhyuJYHeObQ4MMvoSkXZwrYK3SH
h+5QBfHLbhZFfwXwuglPt9pRMuoEk/O9ltWR4eLBama3TLp7bK2kQqAgCLk/
P/vWmAw36KZc4jHG4GB2IlKx2g5OnuNqYt4uBYGn8u/flyDhmbvHaE+qiDgm
7ZTC0E5Fq+T8T7szJKHklKHfpmRroFteFCMXDdLlVzWQ4jRGly5V1zw0QMVr
f67x1lk4gHzUkin/AAXKjR784H1qAHFGSSqqvc20onKlqwdvs8MJus2Dxs2W
6GHUsebaLQ+Gzyy/StxRx/Lehk96zlYQtIRC7O80sS/9fL+HsgRaKpKfip0l
Q/yC3s9HZ0VRaqcmgaFPCD3DkzVKfJSw7tPwzoh0c7zbbJ4tm6YDXYQD3RWl
OphbUfRxFycRaUnR7+bOm+IeHgHUiSGid5vklZxOCtpWKdb6922CX/V0gdkL
YsjQ5+1TTG2h83/KC5CXJKG4l6fTobBleq/z4cb8cTUQiL7e4f6UC0rDulcf
7dqYs319dQHuUiigraNc6MS/MS/Wxbi5tHB2T3Bt/ZoqerK78IzZAv50/jFx
+ypgYEO8XUalNV6kWb8M/kPAXc/HGOkSZHzoMsUaXKMEg9s+lLRGa0Fsoev5
8U36EJCyxSeFIAHTnAuNdj+VoP34uFxEuwzQnc/VFDeIY3lMK7XIWwtYJq5Y
+MoY4ogWp7fTcQW8dLLwdN9PPrxYzvnglzoJRwM4I7VlCRjR37VT7ZwWMoQc
2UrKJWLfygNsJ5DxMecSk2iXAZbnnZnOmtFHE5mV1qKrBuhG0q8irishIdJl
9PMPabxw526PTOcCjYH2n0NA0TvanoR/EfIMm9DK/7NC0iwFRGjvSmsOKUCZ
czDv1GsK0n44Jcu09NNPk0PoS6LOYIzPvLpfOED6l17xvY7aIFi3ddMgkxX4
tlnoECRIMPVzN21/Ag/KZ7tm/PYlQ8SuppBJCzZ8ORejvnWBF7ZUXfdzaDaH
83djuzW0eDD4ueYuk78UPPup9sGHTn2c25aVYu9D29ifubLOwgJN6MOD3o4S
Law7X2HKRzED26CaHfPmxrBp9O/8jj5TYN78Nsks3RyeC0xYubgoQ72LaK1Z
uDo+KGD/2liuiPqhQjrZOoYYeO3jZ6+vQrheFwBHPlqhuMN9xwgvZWwbYL30
dV4SV6p8DD47KeF+d2rQq/tEoD9Q/sOeukwrp/62uZvDgjdOBioznBYHnovC
QT5UNfjJNWT/bScH2P+3ZJUpyQ2l1qLxLXkrdD3J2Q+PGUlYxKah6cKy0au/
uH7gqjHHiZIrN17xr9Bc2POi10b04CIr9fYSauPRtKPLE+EccFD6478fxhvz
RvzswEtbeVgzGElJOKoLs7JCw6qv9SHjT6nJg+NisJvu7fHLVghqa3t6lgKl
ocdjfdbQnQZMk2bS5V+1YOJQcW3a6jKtronR2kiIGYNXeyWdB+Txgm+fwJ4W
Q1QtYb8WudUEUxoH99r76EHxkzOu6yqScOJ13n8VdmRkqvKKvRWtjj325Zkf
94qjv/O2GR4meWDR8R7a/maKfvnKvcLgADnsGHmqdfuRMnyO0j5NbmBBbVO9
Tf882VFy+cD57ptiqI/dOXoOaihX0zqITyQwT/hu28/8AdrQRDPTbkNTELGz
cNYhEPBpavzmXVVmOO8zHJS+YAQsqfzDvhwUKP7T2Hh7Hy9y61z2i1rUBuug
OhmV6ww4l+e0+sXYAj9S9hA0gwShRjNCzeuXGKTbs9z+ctAKnI8/KX/tQYDG
w6RRz1VzKDdvyLvtroRnTEcpDs/0kDTPVuHBS4NH/g/GRZ4Y4eNxm9+C/QS0
jzqjZ0FkAZ2uas+0JU0cSo4Y2nNSFqp2P81KdSOj9e2aaIFZPhT/vSdGa8YQ
qxsOi04bCoK4UHPM0YvrtPm/n2vir7Oh+L78fRJpuiA7uBrWOSSOR7vvyr9y
VQclkSnOz8Ma2HqhRHq8zgS6+GQL72zktnL7zLX3SpZ48iqDiMBnNZzJWWg/
+VkLvwrbn/GOVEYew9SwtRke3DFe/L5JXAc3gnvk5p0hOu2uDUeNzzpt38+f
A7Hr0khUZzsr6z1LH+9cVSA4KWKf4X9z36ddcWnmw+IOKVakMzDtfeqqiNmv
zgdGT5LwqDt3dVPaJK2uJbY/WEwRVWIH6V8+6cDs5D2VxzY0YGFzl6t4YQGm
OtzrwG8D9DmWSY7aRZqkF/WYB5MeLNAfhPgYb3iymkb+aelF2qTPRM+rvUqg
M3C8emGfHqh9fvhHNIeIzOdOScYJmuD6udm3HDOWaD95qs09kIpjZUNvrWJJ
2H/cwrCSWR3zJjMqTkct0k6Z7x/4fZIJV26JnqFfVEdnb8nDqdukwePxjvWy
ixveVPmsxumNJoj99dqTuccSZB0kFxtZTIDtwvubCrIbvS/BUmMoURmGZuv7
B7obaRBdtUm+Rgm1W7asc/Eqgvi8cianxhRt7q2EiRCQgWzxYuDnXgl4YB0x
cOUIBT0qmm5M7LFAs8WbwU5vjXFtr2rB0Ucb+1r5c+FGuBT+urIrIHRQCzjq
v934FsGG227maHezCMKjmhYu6lEi+P4tGolNUwbzIIfYm1wbnEhcK9TiNMVn
2gI8P7pIsK/zauXXBRpS3kiwyKmrgtmDqy/TFKj4RJvhmcozAFL4aFc/vzpe
FPJ3c39GATbvbMNYLUW4eGggmDfcHruiMs7khQMmnq1ZulKsjrfbd7z56q6O
fqEs/jUBM3TTnumxI4QNjge+0bNQN4X9rUqC/KGWYHNQh528xxi3vM0Wj01Q
RguemvO9EorYvFXh15tCMbgvu+PD9adqGGbnaF/DTERJ2ualn3XqmONuL7Fi
rYU1pjGm70qX6Z9Zkg9+WJPf2CfTh+PFksA+cLmhn4GE3mSHpcz983Q/Vmbu
aRllMJVzaf/SSoLS2m07f8f9o3HdmrIpf2wNx14O/siZtYJD/qytF9EIVs6O
5GZ7ycAXBsOPWfHqKH6AdmwmCLAqv6nIk3Wd3mEkkLFb+Bct8bY5zzkXaXxR
oxjZyy0PHu/TuoauGkGJAFfglf0K+DObVbkmzALzhi871LbLI7nV06f9gR5s
9rgtwvZNEOqd7WJ/+ytAoch9hl8yymgg+Tck+c5mvPzMueh5qz4OTgn+kJUz
QKZVCbbOQQoOvrvmFrxPBl6eNbyfl2KB8U05LYp5CqDmev6zt4wu+JFT+b2D
RYB1vc7UvmLD50yWqO8qlTCQl8raLKyKIVNWWTuemeCdJomZRTcZ+FHrfD80
Sw/2/33QS9VUhosCkS52okzI1xzTV1suj1LXW83rfSyx955G1OmnVLh8pvfA
ISMjLI9X+XerZ52W4Gk/bJGrjSdidAemysxQftPgV3afYXprReV4WYEEVnG9
tF2vJuDioe+3X4ypQdFxwaUaOQkMHeMactqpCiF/4p//zjKHg6cznqgMGIH/
lLvnng3PT8n8YqtZaIhseYom28QssLl+LrLwvQUmvnsrmKcKSJ1I6qqM0UJV
u0eZQ8kC+PZg49noBgLeEg8hG2zwPUfbotxukxpWRNc/yxcTB87ajHxvORIE
eS+Wft8sB6qO63+cm1Xh8Nf5qjMKGz5qO+g7FiCJfX+fsEatiGFym8AJHWZl
zIm1Wc2sJEKFzf0LvLsVwMGj9c09Pz24L/eGx6SLAH5637bYnmXH0PSnWe8S
DVDyn+X3nKuGeEHF4+7bDnZwFFiaYY8kg87SEw83X02QD/UjLzCbQLTI0YNh
0gqQOb/XsaWQCK5sU76fBYzgzvPbh9jiaUD4UFZ5cPdm+HZ6c/XmhzqYGtg4
0P6MgsK6+08QFinw6rPRqE4VLzaEPpepF9CCKYa+tGJBAegPGOwd3CGDo9pd
V0lTJIwzI8Sfa/1Cj2jgnP1y1QSdVdztz06q4w+K3LY3uxUwMMZKKcGejC/1
1ewNhi3xweuRklsq+midwq4tIaiKpl0GJOIvZgggMt8VWmfEk7pBCUz7hEDR
q1M0HURQpHWglZAI0Or6TvBsvhlItnMrMq9rwb4ofqGvfaqQnitvuf+cKPCd
u/BfBIEJ8n5lRdbSDKCJ44HnyBc9YFjLiYyunKDldUY82/2ACRrn2rgCNrg8
1/+fCXuXIgYG8/lJHDIATeOdZSut1pBatuAxE28PvwdFc2NHAf6IsDz+MKaJ
C7Q7txrbN3w8zdnsZxIjuuv++3mPLouJR0m9hx3I4BWfqNv4iYgrnbtinLPk
IILR3mB/pgW4NweE6N5ShON+L8S0ZE3hDf1XrtqKHsQVYNgtoh5IR4TvSw2y
gfVlXxeFQ0pwLvzltYzdViBhZnIprnhjfXLdz+MXARle39MO+aaOTWqErisZ
RPCKfbj2vIUd8MTLNyIT0uhrsLSJOYMTyi9OrR3X4cHGaOV8axoBMj7UhpIz
jZGNi7JU32mJXdMT5w/nmiKL2XPnZh7AMG3zY5YCWpigQk13W9UDkRy7CyZP
9MFFVaTYS1gC6aZZMVkbPjvdRWfp0PlGX12OVWi+Kgnl459r7wzIg3v8MHdH
LCf+s3yxd+WKNvKs0e2HS3UhTiJHo3tTF83Yv1pEZNge6TK6LpOPlUFEcusL
pwkLfKmlM/CsmIq7HNJz2k1MMThyr82/P4zo8KyicuqjAV74cWhkvnMbuvnv
OXqgxRjqIt7lTVhRgO7Lc5nJQQq9B4jZP30MYbVT8+WX8EVaadLjgcD3KrD+
zfJh0h559KuIsTNn0cEzA3Sb/gP68Nc/MlNwWhmYmhwl7LYxYooUn9PmcgKq
1gko7TyiBTd4eQMNi8RAxaPfZE+hBfCr33N9dWyjJzkUnBjNEoDIjKpeRncK
elou/keak8QUKs01wtYSFTVEJneVqSNHa84ep3o+rHwnSp0iE5DlXFk6w205
GBtZLz30gx9T/qzIlfLIAbB9cvGQJuLH5Xa/qK9K6KejRXmoRsWPb89rW3bp
4ZGItM/DXDScIMyf6v6PF28mjv3InCLA2xvjokQ7Lfgzq67EL6QAX0/OpXPN
r9IEvnclDOnJQdGF21JzNdb4o+PqJT5lSRjv+XTw+2FBML0SeAvdqRhfzOk/
y0LGm9X8ZgfSHTCeVfU450VjLPaJCx1b1oMHzdPBi43CcHq523/tswQQ7zxx
NrYxRMuZ7kSxLwYQIN8Q/7FBG5dq0nPZz4zQsq8J6li5KeL64+2138ME0Fxt
fCDXWhz3xCdMMxzQwI7DSm1kmw80Nyv9c7LjdsgUX+O+UmyIx6IlyjUGtDFT
90O55qIlPuW/qSq3j4JHAudbb5huQWexRBamEEu8zQyn42ypmE702vVpXR6d
/ypPB6TRYJWPLrz/szy4DG23TbIXRSKjxzXHw7JwSUkz5Iq3NC5HHNB6bikI
Pj85r2cMqcO+hPXa5QEjvKP9QDH3ljjcd/C4g9q6Gx7h+8SSVQ1drLkjF77Y
YNTH0m0FE4IgtxQ3suOJHbaa5qvcS6NhcMPskkYMC8wrmBV2qpgCmFCH1bI0
4Zn8gqe9Jg1uHE2aVmyXg3NRKvNjo8Lg0uX9xlaZGfkGT6aQAyxQTSfjA3uy
Jp6TF84wXwb8PRWqxSphi7khmkvepY7op6ZTw4i2UHXrM29ggg14Rkkp/ny8
BdrLQnUNnPShnAmKbLnNYKUz6J2noj7c4bARpH8iwaPtTUuqZ+Uh4bhG1gy3
CpT8+7Dl2lltWKqvjMpoAfApVvH9cpcMhNFnN5J+bMYk1wBRpndU7O+xvXmA
ZoqJIbl6UhJE/EP/j6S7oIo1LCUZH54CRpmVrclU26Avf6hVMQcV6e88GC5t
G6dnaMY4+eo6wsqS74GsDGVIPcH7csxTA3Qqn8bn7/lHr+N46UPUIKGraJRP
K4sBbg11LOb9Tw92cphysyTrYYn7kl3wBm9P/el9bt2mjZuIAoKN1wyhSNWm
gUVIE7iZ7MPfDxuCPYleqJ+qg/Yi21J8f6uiWpp4lmuaMhbuHW+LplshwXah
VL11M2Z6TkqO8RiirttcL/mkCC4HzgzLyunhLtXIxooyIqoxySUPDsvhW3qk
NF+lPvR7cdlGjTGDUM8d71tR/HDez5Tl1GU9iEjem2+bqARzRxbPRs7ro4GH
Y/RxeQowiF82/+eihD3SecxWP7TR3siLR+4kAQ1shbhl68n46oRYaaexFZp5
vB2uyFGCCyY/zdokNjjFH5NFMDIGV34upm/ycqAxoH6LJ1kZp9evexUdkYSh
2D9pjPzCWL4YLiCRyomTTXNH2bQ1od4t7dVrChWH+uz0h3woQDDSf3rVTQEV
rtj1+bPxYGJdt3tivhUOqlk3pydq47cTMm6T7QKwcs3/mZ6kPgwNv5VlbmJB
nmWvlLmrVuB0rj9QjbQZzAP4/qlKbOTuycrvs+KWaD7tkcJiq4nzHzs07Da8
zFRV3EHqsDHuklQPnLdSwhvTjw0u7dbD5/u2eSclGWGV/9zf+VfC6EA+UGBz
zhakH30Imy2UgMvrb1lswq1B692/gSkwgklx33u/hclg6O4T/mLGCAern3mB
KgF0Qo/ELO9kg6X7k2/ehJExz1ZOOnJojr7vn8zWY/pMkLo1nD+10wTFTU94
jtSYYPyIx+h/KYACcsL3pGTkcCpi5Oa3MEvwsjsZ469tA9Ovc63OUlhRhb6g
x1RsBoXfaDfevRdGjf3H/vat6KHoZlrn0KIUvmStl/6crYVB+m0Hkzfe68hy
/FxmnQ4obPWqE4gygUyr0eu/f7Egd/zjG5xNjLDjU843fiFpmJUTcv2nagxv
XmpWOD5nB+/o83M9b3nwyu+KIA9rWThXtCMFU6wgQdtNIqCCB0n/sVye7RfD
f06HGKv5iKBLcZOb3yaIzxS+hGQcJ4Lhh6DtedrW0NZ3cThdUR6qugqFL3IT
gZwmHnmxhwKZlkrmx9o1cdXWv2DrNUHkbdGZWmRRxK3RApvzMwlITK3uGrtC
RVWz3br95foY15WarDC5To/4tU896RgJtD69ePH7lgQ2X/Nh0rYgQcqlx2eP
tQhDSPL6VhUBIi5yMpSI3xfCFMOw58mvDfF69tM0czUh/Ney9DW8Vx5ON/ff
Xb9OgM8Nj3MOcFlji1xIZzW3IcoeKXcQ+UbF8gH13RYb/uEhlVr/dVwfPS+U
MPEcU8WG7yF8jR7WQJHgM1embsL02pgUf1NesGe58ZgQboZJRDK7k6Uwrtzn
CS1RZoW8OwEn/tYO0/8EHpdU5NBHQ83bWkEmFLBsTTB/4muAe6MlI69VUTEg
UPPqtmkxfP7r+9cOTk18bJDQ2degBUf2SCcZJ+sj5eiWG2xOzPDQ5d9/WoxE
ZNSc7HA1ZcWUuJ2767IVMDSc6QiTCRHdvw7XTAVpwEnNW3p+cuLYu/BgeeWu
GGZ3T+4M/2YCKlpsn6cOGsBdk6DHs9LGwBrkMW58Xgg7FGNy+QpM8KSHuJdy
iBoQf3LUxHSLwcnL6SuKGz4wnLdwQIHVHLjyvXkKz5sC8Zn4ndwhZdiSeGiv
624epLAGbI15JI+fBB5NvzZWA42U0dsdhpIYmxDwy5XHEg86/hciZssIdFkr
X5s/zfQaI57RYXFpSKee0ytw1wejsLZHThVGsF/24LHsGxQQkhGoXp2VRzpj
WmW6rg7WZtfyB+5UxZ9u9g9Kburi2X7Cd/M4e5jqqtk+GLwVWIq7yA1ltkB+
W7Tt04QVyJ2Kd7uiZoKFcl8yprfa4ey4bOI2CzOcq37IYX6IiC+4todvTqFi
r6dA3MKG/8xt938XZqGIKUa7yq8HKEPMd2oBrYmIbbumrt0bBuSow7PvRAFX
f92LdvdVQcuFeXhDUcRrPOHRacb6eKW7W2b3dQt0uKKTP9ZugoE7hqILd1qi
y3n+My+qSSAonHGiz4OCVN6xtZceOni0dubBlXOqMLQt3Ji2hwc6d7Wf6p63
QDm2C8wvQlVgaagxns2VA3hkjsql3DDBiYKrDUYq9hiadfAYX7oaBoX8u70o
Q0Axpyh+Uo4gBjN+ak0/JotyWQwFTfqqQLVS8LNX/kePG15jz2KeonPVuZxN
oBFBheJ+g4emCznZ003XtxpAA1/+g9PJWsCg9THs6yUiMHpNSMEfRvhNHr2l
KG8HVOF2SLtvB3lxHy7lLmnB7vVOgtB7KhzfXn+iypyCs2am32UiXTCzfarP
mUhFF4fptokpW2R4xVLboUanr3UJ3o1Rp0HQgW7n0UgVSGA8dM0m2Bj6Nw96
DIzP0N74OJh+mlaHHQYiY4qPtMA391ubF0UPX3l9uu/ZRoEgfJK7bSO3Zm9W
xlaK+dFW9t2+zGUJlFnjUXi/bxOGP/T677QWL35pC/oWn05Dv720q3MlP2jW
378W9I2SYWYc/4uh2+JqDNsJlU4z7Hj3gST2SwYjylN49R9seMauw8tMr7kh
4NSmR5//k4aLn97sOHuOCIU+Rtev7uWGqDGzRVNeDiwXG3juqGYKAbxcxVWb
RXCK4efe4ogx2use7Utm8TqQWr2JrcOdChF9+2Xatc0gcvFb9TlGJ4wT70+z
yjLHD8pHLmsnUTAu2Ughf4CKmnGJgd81lZE2QB1ydWii0Ua/sjnHG6OANvlk
//h3Wv1D2aC4F4aoc1fWUyFNCC/utlZm9hZGBqtLHGPvymicF775t9NJeLiP
/buznxLuouomXbKzQXp6vouNwhrdNTGErynGDH7NVXNts3eGZpvBl1GxdnD0
qvu4uKI9BBwWYhoNE8XlIaYG4UJ1vPdQ5TjtCgWUhVNLbxcKArvy6T3vGWWR
4a2ab2X1Ri+53unPMyCPVW94X5VFUjDsn+b4vvuS+EWiQKNbjIj9AlJ/jvoS
8O7JFmTPUYUZhsHMy7s4oKZn+EcA5ziN6JN7vLR/gK5Ta5btOsKCW5jBJ+HZ
PL37s2ADWjjgeuqVzLYMS2To085zYrTDYzbcbqGFTHDZ4dHCpV2K+IW5bOlH
BwdaDHO4PyqkoGWIzO2CBhLeVbWXHBGxQXHByQXxnZtgcP7pmlyUASY+Uk/e
ryMAaZ02Nz75WUJkGamq8K88HH7i7nKmRAnWNYZ9xh4K4eTmR57RYxJ4JPZN
ZUsvCSwrtpNO/hFCe6zd28hrD1odFzIcx7fCa/Hvt5rNqUBcSVitHZSFrymP
6o/46CDDg09V+1qraRcds/++6KAhR2BITsJNMzwf/9mxz2kTqr8Tiz/yVwO/
dDp4zKWT8J9aSc30XQn84Sh+mnRHAVckima6OshYee1toOAGl55Iv/94UEET
1ci3flMEmbGf806qgjcBLHJTJ3Vr9FBN+GaZ/AsKbjFfeXi7nQKtVXWSu74r
4q/+r+chmQwdJQVvlhJ/029qKEXbzRtCsfNb3tzdBhjU+oZ2PZ4C1y6XvrrD
SoD/Ac416kc=
             "], $CellContext`i$$, All], 
            Part[CompressedData["
1:eJwUmXc8Vu8bx+09HnvzeOz92JvnslVGIkJ2ooEykpAGpayMUiGphKSihKTn
0o5KhdTXzg4hsvn5/XH+O+e87vt1X+fzeb9fRzog3GUfHQ0NDdvWNUZPQyOw
y/HLo59MeKv4xL3PJnJw34alNdWfFyNi/IzpWZhA3u0yj/ULCaQj2qw9PqMK
JYGKpxndSXjD7Hv64gAv7qar+OUgKASqNHueDqzQwyP6nuWvPBoQs3F4+Ou/
BUrgvnh9TlDA7a0NH9bucIEeP83V5m8blBOOKVklDzRhps6TK91KDU6Kr10L
WdEFwbJXx0NKRaFYWNcz8wULdsj4Z2kf0MQ3NYRQhmgZfGOy8XuPpDi2WS1O
5dcoYbej27DDJht47T7q88CZH8PcF/b/nSRAxpigwpe9bJh2X8W7j1EATWzJ
96fqWXHxKIPmGUcaePmw6MoXgjwQZZP0fsdMUbmUOYZiDeURA8Qetrppos2b
MBGR6xwwZknplm9UgrnM86x+OUJIFA48bvWYDSaTQhftkASiHuh0rF8USpkk
5pt+6IHqehKpuXCeIqV+xO2bqBLc4OHwyufcpOqYHv4Q+7SXauaiPvbqrghk
JLJWnEgSxrlJzQDLdCVQkDTRan/LAO28ldSC1FFqccKPy+PTTygbh7QaOVhF
cNLipsrZ6wLoP0rJpWhxAIn7X1K9XBfVu1KmR/o7F4x195bJ/1ujjtp9q5hY
JkJt73XPEFZ18GcrPiK9SoBX0VIeymkE2DevMKW5RAOKjA4mZtVrVGcj/zO1
H7ooPKxebLHPteGocOV0JkEVMuIUfCN0pMEg7BenzH0iHv3Jzifks0qdKl/N
HegXRBMkOmq+kkdn8aTYe+Z80BbI3LpUoQhJmfff51NFIa4wenLFXBQSfjwy
vn5AGioe7uw0VuTDob+TXqfY+CEoz5Hn3DMZYPN2er1rUgNLVctX+2xV8A5B
y3X1rCpuP/0onEFLFjtuUE2uEhWxM8XT8EO8Kh78b76d6ZIU7uTWKY/k1cGZ
XTw9p9bZMUJWp29QmBd3hibGrbarQdAT1td789jQo3d/nPooN77qWDujWCcG
kVk+5hJSipDhqP1MUkYGH675/2K+IY62KwFRixvcUOp34KOEOhvYuB89TPt1
gdLfpG+w2aOIQ/+C0uOiCXC+8U9PV5I42JR9U/55TBrE3yW8dzjKB0Y5f28M
yI5R7ggWKX35rQgkgdnVP36b1MYTNHfsJ6SBJfSnR87cPLX1cKVGbj4TcMdf
Vn4hIgoemhq0+v/1UdOz9t9vpdFBrsnVD/LhvBgS9kn8nTIJVXo8GuzusqEo
4UqMkRM9rPnof52+KQqUL4MObhPFFF7uz5GhaQKQNMOj+a9GAEui6lMdZQlo
Qet1BbsUYcS7a4ZGjhevPZMU2itJgAMKE4YtRQrQVvkhxKFeEI/Q7TOae6gO
rF1h1raMG5QV3zM7dR/R4kTw8/ONubTgGRguVibMBzOvnTnvNDFDxqmVT2nn
dZEzIWd+6iwPli1kXjzcoYIbLzLyR98LQC59i6xorAJWExaazohKI2lv/yMt
B1ZkIEc9Lq/nw2uulLr/+uVw2qWn7Ml/Mpjns3JbcEIT1c/u4Ol15kCW3RcN
Pe7wg8lRTl6+HeMU5Ydnaj2Os6IIg9919mgyTMW90kuekQDBzDL1TR4GLOXt
93Lcy47Ut39P86x+oBqcUK+5EzlGyTa7I2+RKYKLbV3mHl/VMKJQL+NrrwSc
q/7lTC+tCPKM5eQSNnpM4rAOsi2UALvyS8O7fFco4Y9Hr9NNjVJumag6p/4Q
AfGipxXnuzXBRTl2OOeaEAQUTAU572MFA7oDto9u0ENhvPKRHgN2WOFbZqhr
EEbth8MsxtnC2J+Rn5vfogDb+HTivjbwoePf8opuDRIIFU1/tWnlB039uppf
WbJwokw7KuKkARTqsXy+1soKof6st3utFWCIbadVaeE/Sqer64+1WiKymBdK
BDPPUzna5HZNewvjYKTgQuEANxYI7jcwG2BDv7XLjgVzckiTdXetQKaSGuZ+
cbcijwAemZiYDhKXwVX3pzsjDyti+8vd9BPNHFg8ZHT41S0ZNLa4cnTZmQ/+
9Tnsz3ZRg/+YzouUPFaBpJ6U8AcxOrAnaTbmniwJhQIWLxN3EHHo2LkGgRUW
EAmQrWitVMa7R3KDN9rIuJFcV/HCgYyP/zbci5gyxjKT7JTz6wpoxyGhrzSu
DYwPRx7lxSnDCPNGR3UIL9IENMizDFyijHzXu3Cqihe+v8x8xP9IGt5mRudb
3BGDI40muxLc/1EiPW/ebPmphE4RdizlW+e58tag3+qnCIqGqf/9xSyKErnp
B483cgHTg/aMD7yLlITj8k6qEexYNBq0JCemBiu3XkWYxkpi1tGIx3lEdjwZ
RzuscXSKctdKmXzzhjgMzvs7te8Xh1QvTVLpGw0g9pdXgvB3ypLw83mXJ6uU
kfArPB35RIwrvvLbq1gJyZ9O22Xk8OGMWBW9jyYj3B1VKXWhcoPqpX8DX6ZE
we529caJPH5sjQrTvf1ND6rk9Lbl2fLDMYc7wmaRoqBmEi3D8EsJztPKrJd9
MoC0W2ofmUMXqVdGtY6JPifBvlizXRw7eLD4lyTj8VOsSGNsSuPvKouH3OqY
nV6TIDtXicb1pSoSSteEHmu3U/rFT9o9TOymrFTGsBaYCkPC5NmJ1EEFYPix
u0x6SRQIZZ7Wf+T54MExzc4QQQ4cEnsuU32dHxV1vnqvfdNEVrucRwu569Te
KtzeVEVEO8GQD65LPGB3tqruhNkAtY/4ZzyUWRLpvqddDSk1wJ11hsNh9+Xw
yJ4TAT6gijH7+mIEOZkxI2bqzsUNfnz4Jvt42JcJSin3+5ygTCIeKFmLCSJK
IK9xbGZIvgE+rJTaYf5EDJn4ellU3BRAVKpFznVYHtI32rtpv8mh16RqO2EX
Eza1sShNPiOhqGnzQeabDBCR2lu7cpsD2u0Pn26TkofMEnHxUScJSKZafMuf
4AHRAgYXBwk+HHvAW/XfTmGQXY8r2XypCXeEvjv+zCGhq3uuZJjhGMUz4s/B
s8/ZcWWl/EmB/Tr1TE/B9qdqClBB+m4i4SgPBhOPL4z91YdDp7b/+t2iAWlJ
zwTVE9kh/GrApUMBEng+d2flkoIWPH3kEyWYpIjO1wP3ppQKQvIj1VjuCB58
+fX63LZbsnC8gK+S0EqA3Z/5HotdkQOPy7YedGFS0Gbyq1wziIyRihlKTXU0
+EPpjPzyOWV4GGTWVFcnhlqilYJHPJnhts6QxcADQSh4Eyy2VMEPZ9h25PA/
4AfzmJI9Hw3FUNR+SvjhMzoIFnX66XlcG11OWh9ebFJBQoqEotK0KpLrTPZc
3c6MxGfqugwEYVDlbz45nmYKc5aXtVzNaOBRU6ZsuYYgUP58tsq7K4S1NCLj
TUVkbD8byv1SUQiV8hliedTlMT5Lbyalkx1+f9rp33JHE8LLd3ZmupIxSazu
zqCqMOZfs+sdzOaBR55La+cYZbHUQ6lOkESAFfNgyS/vFVFP7e09vhERVKQL
3CYSI4vt40zJNySZ4InZYYGjLsqY9OuPMP3VEurZYzrvmQ8qQV3XoIbuNxZI
q9xDy7mijsTvvl3Xto9TRl548sa8UEaa1Xf+SUfN8Gv9eNXkUR2Mqwg4GnOA
jHVVXbcDimQgbeRcivB5bvhxyHb+jaAo7HKele+jLlBpVC+NLZUIINOhi9HL
dQSYTmDhDgmTQVlPhvxxc1ZkLnmBCTUMWLJfZ/fjSVrYSKANOqInjXaiaq73
P3BjR03qBa41BthWsevO9G8tmJkIfH3h1hg16uelCzoEKQx20XC/Q8+H29aP
mtCdokU79tW94o94ISJfCPhVNeCehGpEbB0/9EoWyVyQIMBNh23bGsu0wU1x
b+KrnVx49uy8ddoWt6reEhbpOcsPVa2fWNh96eEcuYascGKTasGb4V9UIIGG
0U2/RXyXqa39rfJvOqXxIT+dbKrNGqUdmhc8AtspFe0tCr7zcthD2PTz0BPA
jNo7NxsHdcBefTY5QkYaXj76sNf10daca63Y26mxANWtde85rzGKQPnTPOWD
kjhhm0J/y50P+FX4T/t4kzCBeM7plbI2Nlryrs+mauJIxL6zpExe1F56y6OV
S0bHXQXWij/54ffh/WFx6SQMOMncX/WCjPGeIz/WGkSwTH/B1dNeHKiq2TdP
s8mCgc9YElMpPRi/4Kile05A3733UuXXlUD259lk7xOCkBCsGf3dSQFI67a7
LPZpQi04X7GwIkGPiUxP3G0yWBrWzyu+UwdPvgHKLQtTaIsW+C/prRzkBh56
rf93lUIjJGkY7fGZQlZSXBWVHKbGFp6pKdJlxdPO1L/M7JKoJ5zP8CySHdfc
SVxyheJYpMej+HNTDDieC/+9ncID3UZ+ZyOv06FtPJu3jqk42LZx33x8XQY/
1BSZM2jx4zeiqRD92FZ/FTLrhyl/p7wNHiAniAkjiVabV61hnsorZZY0/ZGA
IvSXk41LmGHmfeHnKIIcZO3Vu/xmRAD9/K5qM0l0U8PnDr3Jj9PBtH1m+e7i
Gqg8ctz9U4gypu6+xl2rrYEbUwsiekc1MXycs3HeQhZS7TMOn0xQwSovxQWH
j6Jgta6XV+KmjChIJh6ml0PXWYOS1EQe2NhWOKQzJo1BPGmZj38LQJtf0ofd
PipQdtf77rcuIbCYGeWsD1eE40+7/g5teZYFSaY8XdoELLN0rDfYNaCyKmdW
IJkNSO+uaw/HasDmf59DRo+rwBxhQ0zmiDY09VbtMnTRAt6L/U9T/0oCU529
cI6RCkyVx4RjCj9sXH67nrSDB8SpYOdiKQb36SIFM7NE8HV3YJZspAIw/1Z3
fEnPDb+vXeN+qy0Bv0niM4PjJlCdI8Kmz6cKXp7ispdTVYHocda2MnqB8lAl
st4wb5OiMv5M2ZpfDDo/vTBrYFLHgJXRPg8mYcxyuapovSgAVRRp2/J6FSwp
H70vsF0I/cydzbpYPlP1iiwGi902KffuX1TfNq2IahXrfrycJCAmmfediK2j
pNo9k33IxQ7HVKKYdi8PUnQJvsLldbNU9fu1XmcKOSEkJftQzfmvlH+bhtHS
bhJoxphzITtHCSR4dosl7meCc6o3Vcsn5UD49a5l67sr1DclB4PdJQRQ5OfI
w8JjGrDD/mNem9UC5b733f03RBjg2vibw8qFwlBp1lb/J5QMfkM8/nFbOdd+
y9njPxv9La/xf5E0wId+jEdOadasUbPPBfUXHGFGb+ufYw8KNyjyhj5MrQeE
YHmRyFKkJIVJwr77Ow4i9by6i1BXpAqOjq/u9nsuDdVZz58dZmSFLhF1JfaP
fygPudi4C97LwVq4+eMvj5lwZJP2Cr0OD9K8jnrRcj6CQlrm8BHlVIQZLY0H
fK+0YfG+/hOCoiA4KU/RVY/rYxf/LjIMiyFhfm/jbPYQlUarOe7n/kvUiW/h
XyWoukhzJaw1bQcNXt4hivu8lLDfs95p73ZVfK995onAL00UCtru6cMvgje5
eB5FOZLgWvjMFJeVMOqZ3XkfZ6KCHH+eb6/8S4Oc7xpeN8yrYvcp9nu3/Mgw
1lm7f/c6EZPU2/x3r9BBce14pIrnGmXySO38YQ8FNEh/5KPZI4H8xLQM2iIB
UBzYz/NkgRY9lItil1do8b1W4m+nBQnYm3n5klWhNAxZsXS80WEC8//0duds
14S6M2X3qKPKUBY1eOaHohZ88Mw+9vq9EkS93+veJbRIsXo2nRhaLw0/3C/e
yFTSg6453g7eNC1Q7KA7NkTQgItxs3kXOkQwn3iyuIrIALHRdWbVqdLYd/LC
mduWcuhtMLv+1kEMT34/ADZv5KC/3nyE1W2Cwn5F/m9oOwnv0Gi8/XJNG/ff
yaspNtJHz/WuuVFNTSR6U4ZYA6SxM+2cxak4QUg7cqehx4kNyj4t/EkLXqXW
el3U1WnlgT5zgvpGrxh29AddtmThhvjFM7PDHTSYcshptnyaD1gud6rdWjRC
EyuTNF92bdQy9FDzPSKEqXfaSt1IargtOHxSkCSELHb6QUPzRLx2Trv0irUQ
mPLxm4/wc+G9wJiwk29pkEekhD+cRxqKD2rzaZi9ozikxnIP56mClebq+RNR
AuBhL+JeIzxN8TjYQj13QRHMjgWfvHdbGv/dvB3xdMvbf7Mqbii90cKss/vf
8v1RR0Mh+m7LbdI4dNXB8JQaI170VqRdnrbC4PT5xA0DbdQI4N/x00ID4x0/
xXFHiwPc8nIoyiMB+3HDKZ13SvC4mCEhd5p765y/hrPrMOF00LMX6w1EJNU9
dRwVF8C44Rf+FgqcoCazXqEhqArzLolv7ogQ4NQ5EW/rVD1gOeTyIQYZUJrt
d0XtMxnYORnCf8OTACf0k1+oJ/CAohePpLmoGJzpvPuPQUwaPGQr0Tj+NeX5
dS8PUfUVSpz9CK2ygADeaFzMWDgxT8l502nJmSmKYUu720JlVVHR3x2j4+ao
FqR/TLryXNDYH96qxUWGeOYbTTEGPFCnPzjARxqmMpywVvjnLwvbfJJf0j8g
oOjH9v1rGspAnF0w+fuREQcT7L44RG953rnykScWUpj9KK37kSoP0Ed+z22N
44AA1eibd6OVoZyRhc4yWhZS2O6kVinogT63s9SJwzowV22ybSBPBHfYj+ja
P5LCHQsnfsSdYMahBq4fn6rIULHj99J4BBm5nRto97+VxbG9f1QGB9Wxi7Ht
2kCkLgrzMe9dVmaCqIYAF56kVaqQa8wtnBXH88cvT90KlUFr37XZxrd8sLIZ
KLbF7iA2pzDgTGEELYFHchKpcuCUcmPsnKIckK6SfrfK8sN5xp/msZ9JUCff
delCtRio7znEfLdbBymrVi8nnMk4MXbPczqDHk5fyV/vaaCBJFunhYj/dDGp
siLqYeJtypuGwU3PYkl46EK/bJJCxBFxPdbIWmHMEAw23J7CB4acPn77QqUw
V9Gz8468ElLMNl44Vj2iaqYx7efy4kHC7PLrazH/KJ7qk3fjPs9Q0ypCqqMk
16iNr07R09rLA2eWwrGRc4Lwb/qGjfddXpgZ33HwyvdhqpzjodNdJnL4r169
V1BNGa+O5b7lkRLEiHIgdplo49yGeaTBY2F886Fy7FkxLx5lc0vPfSCKb8X0
908YsaGuoqiOOds8JcuAIeOZuiioONF0kwjK0JtUe+WQmxzsGHscfebxPLW1
zrsw46ECcpfvZmbwFoFcd17HhqvqKD48svn7zCqlgO/YruQ3GujLrSEn+lEY
XdwmQvWfcMLhxd0ladFKeJHg4b+jRg4XirdnUILmqE4ZNXEuLErow6UVdoKi
is+awq7svqqAP48H/4xt2vKwpdm9bkkGMNFN16c8RIafndHBfioK8PCUf9no
1jqz7NOvGubL4KWWI2X9x7lhSKroyhdXfrjMF1X9qWeYUpvJ4HHirSLa+mv4
k/cq4YLR56kWCzlMVvL6WVynhHGGp9Yd+kVw4lnKg+8vyVhNYemyq1XAYtus
a2H1XOgd7hfPUC2B9A4PRtXnSHiC9PQrvTwJ7jX6i+47wArLAWElU695cadl
yvxH4Id4TW6P/5jUgK1y8OjFwAEqoyQMfsmThlFfpharHySQKPw+Fh7ADMHt
T3wYn4iBD+slXVppMbhqamrIaj5LvZaRs3vFWBjHuoxjf/1VxKC1AeL27cpQ
8DXoqVKiEgj3nq/psZCEp25rH0wtdHE7qYNnbZsYEEbpcp4ICEPbgmKjjqcG
NNTe6uVV1oOIcz24bqODH4+PnQyeIiNfSwUj+aUKcl6GA4fF1fHh0j7JIoV+
yjXBmNmRFTEUujDx8sw7MmprLSTcD5VFDccH+QQWMp6Q6JC5ry+NVuebdblS
+NEM7/SmLmsgi/iTtWEucciaFiC8ppEAFd+ssM56NfAbDgjr9GUGl8ZFVws6
IgTc2NEbrE4E4rahtc1HLyl+l2K+hho0Uu8e/xER7C+ISS0JngkcMiD37Wb6
qZtqKFBs+LpxYitHA73lK3fooHP877zAWWFof2K08fwDERSJlxUuf2TFLxJ2
KFOgiysVBRtlyirY/rnyuAn8pVh2VSRX1nVSBgK+GCmsLlP2HD2r2cYpAuzp
+cGEw0RYedCSeiNeDJ9eWXf9qyGGP/TpM26EEsCglLOChlYBnUfLzU+pbvHa
lR0x2d0quJZXzfftrgwqFxd1Pi6QRXFdN52eCQkcPlkVtdosiczdlwUGA8nI
b5G4rv9HDfv3Ok2IXORHukcpyvRGTJCQP5K+j1YInQvtn533lYEkBReer/yK
gNHDmrdjZfHe2mKpY7c+Fr+5Y9nV9I/6/qtX4ZqtCHy6OSHYMGeIhKf+O54a
aqBFfdO2JmcDLFKVC6yklcF5tsvZXYe10aKwSy/4Fw1cvn4j/HWsONJwK3uH
K0uj0tK5y9YtwjCR6/5jd4IOBKW80sYUGfChhf5PkYLQvNetwH5BF6wYXevv
lqqDzZd/l3s0NWEi5f093jwVcKV7sXM3iYTPnfxrhNT4kEJHWLp6VgTMbRhk
xZYV8IL7opUmvTyal3f4XJdZpgZYNLYvsGuiAY0Ivetdfrxga5e9rY0MX+b0
WH8fFYTja7Z7bWTlwOpWyZMn8TR4fDnxzDtBafCVc5wPPq4Mro4Lr7pv0oKg
XsCpI2+V4dDEcsSwuxa2Z1s9c/kkh6Sf+rVVHHTI31ZVJxC2xTUmfvcFFEQx
M4X5uLi1AjTKipjmXVABXif9w1w3hbGEWia43iuKHMEDiyy7OUD5AfG2UoUM
dofO94XRCMByD8d3lkEi/HmWIZFziYjRzofdriqJgZVpfkz6Til0ltDqSjws
gD45OuO6n8QwduczhwtdHLiSNut2c6vvR47eCBhQJ0HHqH2ZYaEqHEgXmDYh
bfWo3+JMY6g8TDtS7j0wVIHy4cGyf/v0wSjkhCa5hAOSEo2Yx6r+UD7xKbZe
WSQigTGsy7CTHXO7MqllAjzYWmLzJT3TAO3G423lWJaoWX3r+ZlNyjCZPTvg
JCEDRb8+Zcq9IGDSY+lLRvKCsMRS3pkpKwvEv3HFumudVBqO/nLRyFLKBeNy
laU2ebz1ZGpKel0dTX+fZZf9pY99H+PHLA+pofKLnSlzW15D+a8zTLWvkfqP
4V1RhbgCROVOnDPnIkBVB8qlPGPH/BePXrT2CsKH2XV+eyIDpq8av28/Lw9n
Xuo6Yog09A51jmp5M6H0ld0fcgT5Meen3OPte0Tg2rF4nOgWgIa+fV/DgqUh
5NjgVf8fOqB69TlOWijCbUMi44nHi5Q1TaZLh4+Q8DH3WLMCLQ3YscYnVM+I
47DTkoXYPl6gnEkZL47lxf7CC1YLv5Wx+auMjC4fL67dqt+b60oECgO90tuH
7CBkIrC5f3KLXy4pBF9rnqCQlHZ6cebrIdXu3N/xdwQcHHqpeK3XCAuL0Xsg
VRPD6P2UfhHU4ee35mgmSQlQO92S7RWvDSOvto+RXwuDnuH3/fvXVOCZrWY7
4SsROqaYvtZIygKl9DCDegsP3Mif3uBe08VY5yub1FTAWI7yAb1zhtjAck2b
NCyLJlNpSownGYHLnPaiQSU/eJ8tPdyjzwspm0w+wVJKYOkdZBN9kxcTZQ25
T1XLoGF9GXGJRQAW7LrVx18R8GVITW+zEwGG6z8d4jHmRwef3Mi/eTJw1SWz
6RMzAXb49I1V/+NCXgbH8o48YYgZfsZIR+RBolp+65/P05RpnvHwZikCMNfl
X9k4xYoUmaGjv13uUXN8xcXTDrGioOzFhq7/jGEoMLKVh2IMRsTr7qX0RtBs
xHH84qY2WEmn57mWb+V8rejdalDD2H77pNjZeSrTpbhLe5a3+IbTWfhfjCIm
ypgU9LQaoI9YtN1OPgU8Ebjj1DwNGZn4vrhfalGE+Z2LNjBDhOuHbdZLU2Rw
7efxKY9SZlB33/gyWiQL5YHnj9/PU4IqZupog7IIhF9M7e9gI4GRp+T2+ntK
8KvT9/NRIgX6RxjZLo+ZwtC+2wtlxygQsJoVwmMtB2YMTV8VHNVA3+V4BvWA
Jgw+5nf41SwHpVnPLCqvskCngkgT4ZgUVjNG3MzbxQhJp3Wvfeurpqpf5Tpw
IlMJGwIp+qlbflo1u8nxMVEBNVSHC817+cGCHHYv6Tcj8vv3m72VlcN+SpCy
VaUmPu8+OmjDIovKlzPvLzaoIW2up6TR7S1/qPwTMC87StH7Ez7f80YOd5x+
064bLwpndn5ykZjVhmvB8cOzgkqQFF+bsPpLFgLebpvMFtEA2bhs90dbfN+f
n7OzRk4Mnl4XSTSflEa2oy8KX/jIw7/EdtkQWilY/ctIe3xICop7EmeYnrJD
ZXzI/T19W+u6umAxM0rEFfEyu8adOnho8OlNywUC7q6V1BwK0MYr3lRZDmEx
DFx9N7QwyowacidtRkz5kTu9SWc/jRSKrymnzFM18a4KG/95Jlkg7H5DFBnS
whjh4KekeX2cfxWfqaioiy/FHQxlGiwwpOLWkPUfZcxVYUose09GmgpRo9oT
vyn365Yc2aflkPbJ/qGLw+qYUpicr6evgg/uYmp8iArSr3zQVnQTx76Oc8TL
w5rIVipP+9VaD0IGve88+rlKJVTlq0s4kMFd9KIx92s+4DgYxtgtQsHBV1xO
6oui2N6R+Su4iYLz323vaZQr4bT0z4kTQvqg7PXVMfmKHpDE1Mdtz1uAls3d
xw9XNSHUcHHkVc9WbsncjEzzIGO7VPPoxXUu5Nj+e1cIjTkUXT7lp1VjjA9L
bb2ib5ngv0973q6nW+Gjyd8buwrksEKlHNjJwnCnzjePV0IV6w+dJK/sJ+Om
8mH5fU9lIG612ebeVwII8tUWa6yyQ0SUjPyvC0Tsreunn+rQhgdfjzfcawRM
ySZQ3WL1MEqvd0jxkiiKJRTbe0jpIOeVb2VGW/zwx3fz+MMHcnAydX1w+bUg
MH0fWfUiGcAFYpBblq4R3FU5+0rzuAhE1pfY/DlCAFMlv+xtKcKQpPz9CbWR
As4XJWpC5VapNo7V5LRkLZhadGUx8dWA0tA/p5UuyeH5HJuXuKgAFim0wmZP
ZEFs//nKz7ly2CvcwlFopA2PdA+F7KxWxLp9eXZhxzaplJoLj6eiJbH8LYO0
2gVLtH/s6k5fYoeWtbGcm9y6SHNWjvg6pIIaU9f+nOOjJZ79ty9RVswWeza2
2Qsd0kWJnFDlzTZbXNwm7fsvzASotdExLVFaECUxuNP/mwng4et/X3TA1j5L
Lmq4CYHz1W/GOZ0WUBKpvlLbpAqkjMOcI6aGwDYYeKEyVgPjBuPW/P2UsP+f
//P9SxsUbomTHanrttjKeG9y/oAO7BVNa544Iw7L4vXvOLr4QWXfhxwKiyC4
JKRGqldSsIT+y/6OBxQ0TrGUOLqVU6zZNKrpFAPcb3+xM/ypOlQsNvNX7ZKH
nC/nGkfiLSBjKXjxDwK0+x2ylhdWh/rFuTVPDwXM+yvM6S8qC08PlVjrHSCD
3/1HE/nCZLzNoXcqayv/jTRY7+6fNMRieRFvn78GGLFr113iVp59ynGwqcxV
gue6h0MXd8kgQ+OUHbO+Eoj8DIxVpWVArkd8wz+SDDHu8997UQ5KUPnAde2p
Ihm6Mz/cD9yng0l0Cup8W16SJDH656m0OBTfD2m4O64PSdQrptwaa1TyoWnP
S9J/KWnX9P9IMHKi/Z25M4r+yrApEmoeWkdEZYa7hNMLmnDbSoZU+koWLzx6
WkAHJCwJLjTTTZIC97EPtJNEBbBL4Hv0xowJNDgULQYkTeG8XeRVuxQVAF5e
jb0cphDoRtJ+bGMLbaX3rl6emKB6MzxL2VO9NZf2NsIJI2bgHqy/dPqhLtDl
Gb4NV6eATOlts4Y2CtDc/YxDtwSBIZwPep2t4Nxj4fTLXPrAsTNBuJaTGdqN
Lw7vtZLBRsa6mhBFWqy1ziX9uCKPMwryvva+TrA0dfOg04wtDJ4fkg1YswR0
SuZr4VUEi88007bvDeH0prYZ3SgDjCVcDMroYIGApezMN4bySOXJmPyyKY0u
J5v0br80BlLOcb62W6bQZr1X2SB0lSKW/L35U6ghzvJ7cm7TN8agoqzab4Za
cNqJ48ZdL2M83T3Vcs+IDG2Pvlclaaqha/Stl16zWnBo6d6VYyp66Gphk6aa
S8FDtzK+HCMZIA3H7pbof7LQPnWJ1PhQGpN+egYlHOykRA7Z0IovK8KGSHE0
55a3hUjM3s32lYNf06WCO7a+H1Pn0w44poEBtIObD5+qYsPl8qvnZ/S3np99
PW0qAGtvVbQWZCzh2jtOieBDqqAYHwz7Ww0gS37yoISnGPCdP1zWZUeGDyyk
aO12LoiSFiwu7tKBy7oJlkI92nBgn1Gs4AUKONp9576iZo5Fibw6x9PJ8MSp
cikkZYtbCwq0mfiEkWIoXMV6WgWtEsTb7XJ/Uah0agI9htOUmDqnF93BFnDU
oYxP64sGEByUC9YdhiiPxQ8ZqV1coGT8+XShmkTElMYllRZVBfzWmJzbfI2I
skb8/wlf1sWMe987VqbV4Xa1XvzhaDKKVx1DZlc9LJott49OE4VDvNbL2ndn
KXTNhYrxyIBxHlMi7S8I8L3cwutHsxa6+fZWqvKYgs25qKkfxYIw/qi79ZcX
O1zuOKquZaUBp9Yu3mY/qQ0igeVBYtLKMPq24VD5B1WQV319tvw8H45I60X9
ey8Nseho/i1WE7NiTlOXPVXxIRzn5d8PeO5p+Eq0zXYckDgQcJHODK+m0eu/
fWyCGo0GCzxOijBh03TySAUJvXpv6b7sV8M/PfXVf5iEkOdU9uXfR2QwqJeT
R+qvJtJY5Yz7d5rgDokBoy/byPBT7KXy30Q67LM2P7MRSkblb32a7koK4EKN
uhmnqwpHCz+Ia1FlYORSbNbBbF4o8Jo6b5QpiWtZYQp3norB2u8XXc+EzNFu
InDf61wbJHw3OiV2Sh8pLroG4o0T1Nha2uh9j0zBQZ3ZdozREKWOzR7oI+ih
KNO2ENLeX9SdTHHWq9e18XjYl2cXREVBwO3IWbElKVD8evOV5oAU2nx3cWrn
M4WCGFnCiW4dSKfl455b1QeP5JbXrXMW4Pf7Su0y2wiFbNLxcDxzgfL7WVNV
ygNNoNCZaB/UGqFWX/8vklVSEwLPP4u4tS6DG6XD1HhLgDEZ2a/W55RwpJHG
xfqYDHRwVVjX0VjATKKQQdkPTghLzmkqqVOAyqbi05a04jhnndTTwiONTR4L
428KtTA+1ik0dRPQ+fk/2u798sgqImHhJ2uB7fWT+9xvkFEw9N/rCYIyBNkf
3RFCC+DCxtz5kF4e1oytkr7EcePRx5ecZLNJ0BVJjTpzmwc+zXi9eJCiCGke
J5t2tovB7eDuT7v8xHEwg1R0ptQS5V/ERtuLiuN7rfTwxFxtFHXlFBtcE0PH
Ri1j/1/S+JVl6j2jrQSoqk+U3a9XxdmplmcTrApw7Xot43AGHzyeph39J2GG
NCNx7Dt5flJCInlDbx0nA/mDyqsLHTQ49HbdtbJdAnPNzT7KnlygDvc2P+d2
4sFxGxEBurOG4L1UM2Cqqgyq5F8uvEHcOKj4+kJ9oiAoUuqr6vzZYDSo+VX1
qgaIfTsc/ldDE/L1qqs3zPmx8bVi5BNeJUzoqKgf6GeBAmfCGPMbEr67I7Rd
M00ZH8/u5j8wowZZhD16745YwLtxvsj9e0kgk459qnbWsCxVRVs+IoZ6/e/D
TxJUselj0k7xhzLoX7rGxKpmCZM3MpeToywhpXupZezTTrjdk6oxpK8FZYuT
xTW/ANrsfBKG+3Tgt8LIQugnPRBXIf9Y6ZXCN3QZ/j1/KMCjWndIVd0AfDxm
xF8YSIFk9WznzD9d0FA6vfdrnRz0SL/yoPqrQnUM772Pt8TB71wmU/ItGxhR
snpIfkAAh+Sr//QHTTCEueWq2LwVRgxpDrvel8HJ1+ZhktssUcrijv3EDSJw
8BXHCdCb4Ic7HV0riYpgfZFt5fwJUYwTez8VvH/Luxl2Cs3TmQJ/VjWmVzHi
SgpjJDGVByKzk02Ytji0zsVnnj/RGCPLHTgPndHES6HvfOnHhIBNoZTxfbg5
pBx4wMbFqATUgq8td6MtYa0rArVF9ICZJj55UVYTqpmv58m5WcLDmkwlfnED
EI6pSc+aZYTeTWdL+usWYBD0cCcjaYNy7/LyD26iGPAWnPYT6VOGanWe0d4t
X1LvU7JsKbEG+6Sahx23LSCqtrKxZdoejOsZRS79xwWCApmxSiNqMNncxXy8
lBXttPqYt8cLQzX/BmHtlDYSOlsLxBml8L7OslqKJhcwguLtpEVmKGtn2z3w
RgDGDuq8XmbThWcxD57OVujB46azZySjZNFJz7gx5YM+qP8YTnY4pwv9U9Rm
wgQ9/Dr02nooFaCoMK/CR9gYWZQXkj3vLlF7Yny7Wc7RA/FRdo7+9nVqeAn/
jSGtrfuGD3ZaWJNAknZ7V2axEtAcCbD4w/uM+uPcnPdaJ6BHVQRP3CdDtExU
Eg9RsMCBlGPbB+a10NQoaU7xPhmtJo7UDW3KIleBk0njAy1MOkjylCKsUR8H
hniXh/JBTDOzdPM7Y0hNL1UeMtYCw6AbasvZRJDMsSD8igOsy9twy9OwQjP7
ol5GPz38oJJ86kG7Aib2nun/mWOEOzLsipPmTLGSzYTZw4CCr65eu/vXhIzC
e8Ru3mHgwpW2tFKjuxwgq8ZZY6C1QvHSDk4vklCGgQInnd+Wili04H98uzQJ
U/J1aM+8sEQaDy7RswMPKT0VFwzF+tXAyve26tdr4vAs+Nj+pmJN2GvGPR2u
QYEdB588SL5mideuMa/Hqmoiv9dRmr1lEtCtL9s9ICANc7O5NUl+RqBca1AX
UrS1v1d1H015FSDrkF3MPmcu1BBesh++ZYRvmBM5iebiQDzx7qDtry6qZM7F
bbkqZiir4rKnrmGIwmhcLu3HYwQ02emzJGcyMFiGWF66sEBp8X+qr3fSAo2g
Loc7zwKnhe2XYk4C9pW0/X11xBQn3H5/slQjYVvC+MX3GrqwML5S/JReDPwq
ZDbz2f5RiVLpyzSiJOgP6um9+UMDtBTp02ycdXFnU+5v80sCmMz8ryAmyRi0
0qVVXmpZAodjvoFf/SQ1XP+D1ISkOojsmLnyYt0AKy1ndlItNfGJjQJBl156
yytJi7/0xLD55byRhZI6MpSxiRMu6WEEt+E/njQT9L5RkJd3WgMdKZHpn9kd
YJ1v9ui3Le4hfRGRnW3TAbqS1x82B40gtPTRR9U+HcxoT7iuFEQEmo7DlxkH
nlI4Irb/pZOUR4vnPHeAwQBpH8U10FCMMFjV5lajrgYegUrp342qaEPhyR/i
FUY7kcuVFfWGYL4cv0eEURxOX7VtEIvWBcoKucJzyhjbEivUhlqFwaX+xJXz
Rls9lXKi9EE2K1TzTbu/rDVBQc3nBeI7bbDyfSDbo5N2SPByPyFsLoNjTs8a
Q7eJ4mN/HeOj53kxssuXa1p8K88I2rR9GcpgJHNsuzBZHDlEvbOUvIRAMbIq
N7WVDY1sDd58faOPvR+6lFqHtPF6+rLHPlZVbBaMUnLN0cLj37zyvCyN8OFL
Ifcj66ZgsHpbfy/OU9dpTLhfPlBDRxqCbdstGWi0HZO6/V0bx7a/3B3rS8E1
38Lrhtl82MO++jbtiC7m7+cobSLKofp1d2b5UCJK+15oWf9PG2ucYt2D1wRQ
3J7mnEKzLhQPu52a3iRD9vqHxHOMOnCtsMCbbogIOSeqrCUVlDHmhMfYkwUN
LOJytEkrM0b7psj48C3Na7nfo46228D8yw5njfPOEBbH1rgtwwCa1zk+HNtn
A1HRGlCRpIfqxjGjxTH0+OqjVPU5WxmcGI3f4VkvBcs+dky/qWQwMyfydthp
4MVMs4WCRBm47uvO8zhCB5cYG5L1kk2R6v7LcduUJvLOyOwRaBVB8gnD7PZs
HZQf4lqsE9SAOIHXOyVEJfBhhd1B93xjPLGddM3skj4yRa/e3TMmhi5SNaEj
bpp4Q7vHhOMyK9bOUV9cNFPA+GNfHcSyxHDCe/TBDRpZ/OaU0l99wBSn/SR7
3spooeI+7RpvdkZ4yB/y+Gv6Fhcf7f2vI2OcGlzhyP/9pwp8cOA+e+ntlv98
Fq71N90BHu5qWbXOBHD6Thuo+NMAdrh2p6+M6mC/d6sZoxc9vubrdr+yxxx5
ve4unH4njS1UxcCX+QIwGGkVJjWjClTLvTYS6QrApHIgrSZBEc0GnoTuatri
ch27yZNvbKDZ2PhS2Q8LMPl7Ok3mpR38qk/enTJBQTfy7ExoES/E6HaseTIo
A3lJL+rbGRJ0nH6yeJckBKqXKMuh92RBzmL47MYcH5R8Z3wicI8IPk9bjpcJ
scBcl1x2qhI7BKVDd0O4Jtrsc3nxRUYRip5a69BFktGS9dCb5w9kcLn6wtUh
SWMkS84xcpfQQrWn3Z+jKfbQNtkQX2ljDhvVTNE1vQAnWUtYW8stgcAuNXTd
iQ8my0PEx1vEIUThbI0t1ybVbu7P8VsnubBB4OMlwX+aEPNB/vpldmXQ2RHj
M/VEC7ftLmN+3KcHzz+JCL6N0MRRzbDADCtzlCidVqJ1VMZWBVw7sCQL1SXP
IprS9NAfu68aBtnih+n6YRoxCp51Gyhrfi2DdUOXiTGj85TJ808vPff/S1na
VaqZ9EUU/T7vTnj9kQQM5XXuKhoG8DRPcIDCrQfb70S9GbtoANuo+z9qGlrD
hSxJ6kirMejEPhlI0LUCo4uJdilyDtDWtTNAy1ECHtC4Na3+IqHNrIOd4Rlp
LCsezNy/dR4Hotqu77+rgJMywfJrRnZoGkNtmbDSxKSXXLfLzixTt/OLhI1+
V8RcUmqh4n0b7GyzPWlZq46V9yT1ZPts0XVb5W2eHgP8+tFjfvYeGVqLt/d9
tKDF7rPtVoKOCuj6z9m2gkUOdtuVvmD/rosTT8U4ZQw14VPgT7kBIxbseKDl
qk2hgM8qU1fPLS581f7889dPM1TV/Fu8dBUzVLJqLNdRyzGqUarKxkVnI7Dh
qqIPajKFPGkBV/klWbRLL7sY3SgHe287JIgZkJGuuJeXJ90UPdGjq+CiFSp+
PhbY4U6CtvG7WdwVZDy0+y5LZJEBvPnqQIkpVIUL8keytyWaoZ3YJNt/htoo
pKLnlvFIEZw9pCL0eQ1wTMaI83sCBVfeO2gcEd7yMK6vP4iPDdE7pyPH4bUW
vtEfFODTsESmE79MUl5oQKzbeeN8Ozq4HHfO3jhCH2zsTQ5/9tAAbmEWW7ZU
TejnKt0WKG0I0Q3r8jP62mASPsOw/lgB5o6O5PX9m6euFNBZHArapGoWXnqf
YSKDdy/0KjD2bM3nWZ+oPsokdW3SO+6qnAoqGxSPeXaTcHUM72TcUQeOveNp
T7s1IGC8c51bWhPmbUtENUL0YE5zQkNomwYoMWqcj5IzQK3pc5KaFoZQd1Ai
+oqxBtaliDNx/Vym0tzcsNhMoEDKUTezh/pbOVT0xObnFAuEefaExojIY7Pu
c87hQFHguuYj0N0gBx97l9RoneXg7k0XQTU1JRhbjPiy3K6ELg7ywfuMmCFZ
30r216IwTFgJtZ9S3ervhkeSERmr1DAFNZ05NzWgEtlvuswtUdueVBhfK1ui
XJIMUhbl5IHhtzuZZ0gikKWq0H/wnzo8N3v2jHxeG1sT6Bo49lrCjxY3doUS
C7jAxHP0sLEphJjtDrTTpEFXJwfJg326cE7nnqfiSzEgvG2WPRW5RKWzJJ9p
eaoLVwLnHVO0NqltAjYr0fQSGLQa0RIY0E75OvKu7yPnPNXtffz3i6m6kJvP
zpO0XQH82DPXUnd+ob6Iux1eSNGCYYMrr6cltzg+YOOb+KAmvDs3xnikXRJS
Q2jfj+RK4JUxGT7TWku8Hb3GZrY1R7/+s6g0z6Rgm/j8c11Hdfxe3nH4R7Yi
XnUjXihoVsZziZTnst4E0Ph+xOtRMx9syp+buCNIh9kHGsnJ7zVwm7h9/RKt
Gh6JJy681NaGsZg7RgfqV6m0Mmwi/xFM4J1fWXXsihZkH+fIbgk0hS9rpsD3
hoKmph7tfu9VUbDs852uSC2Uj+B5+6xJDuOVMuYYfMUgm86hJSVAHlV4db/N
ZemAUW7afONFCnjl3dvvya2NSvdeKFH3CYJzga1HodAmlcnAOLUmVwleWN9e
E8tUwNsfjj61oZWEmd9KvwNtyVDuemYXqUMFKFIs1z08f1L9JnOmqX0MWNBR
Uje2TROW62hf7UkTgDY6eQvPRWF83eJRP+NERPv6uVbzbn4kbspkpr6cpgRs
d61JHNCG3CDfpsr9yuCmfm5i7ykFeNyhbUdXJYo/fUISOEyYsGLT8wnlqgrc
msJI32xxLGUN0H7nLQTOF4eqpRl6qK0BN/Z95JGHvWml25oDNbDqXNiuPVs5
K+z9n9aP12b4QY1k8PamJvZPCjz9Yv6TWsuZZh78TB6+9V44W7fbFFy1su/9
fLdIta1VWnryTBYibg7e3rglBCPXOqOG7ohi7ItP4Sq8piApGRmo5a8NxFvL
w54MAE0GFa4vt+mhorTWxeSjssDIyTWhWCKISXcUNrW89OFPUoNZ0HYllH05
r0Jbo4Apzm72xVoU/M9PvFrYRQf5up6Kz2y9b5U2KkV4nyzw1elqffE1Bs9G
K2ePFk0Yi1DizOAZodgodvXKaghiq47knqIfCmg4Np3zWl4Jjn47uN53Zcv7
X/bYGPXdpA5G+DMXxm7lu95ez9F3hpjBp3nQpXSR4uNvPnprJz8QfbSyRowV
kM+p7JuMIiPkcp/7qkerj4SiXNbtN0jIpn2/cpFLAYworHsPCixQWQ4pEZkc
zFB7V6jVmzMqQJiJZxVJ3+JNr87AALImjh2sLfdxVMI7tGFq8dsE4YaySkMx
NxvyJQaxqQf8/7+1mXh+jzSw1UUQXVJo0PcUBF1fFMDJXy65T8TpsPG56OsY
Hx1w4dcQvJYsD2WNWvSbTyxhJletxyDbDKrHAm4wHOFD8d7gqYpTMlCsy5RU
uzlCvZ5qQvkbrYwJIxzMF6l08NOvxtfKeJwibhitv09BAs4uDlbmDgugDOnE
2DZ5QZQUv3aFxY0Ppi6U9B/7zgbvPg4zNOby4uF9JxNypB2wpyG+432KEXbe
XyRwVOhipftOI6UvokDXNh0W9U8MxLNkMty3vGm3vsErzjRTOPguwEa9RBVL
HKJHjesEwdz7VWjRLBm2c6hGpfWqgnznk7xdthLIL7WrVlJbG/Va5RpVj2kh
u3eN4NfdJmidPVJnpiIAq3+r/Ny2ep00U525vtVLlesbL9VWeqibU1NyH7NM
8NCRXevfAxTAOSWIMpNMhqE/U47KjUJbPjGvevaIPpxl/XZK9BABBwrPZlat
yCFhLaVQSU0Lvh4Cy1txEhDC1H/q53MuPJN2zFeuUA2NxosepGfxwNl2lmqr
xE3qKt0XNXk/eTwQ5JZ44x03mqSZqL/sJMPZtfjvbc7amMWl7KtdskGdsP7C
xItqWEEl+ucOyCDb9cvuoVQV1B3z/71RywbPkn0tP9yjQNPkr7jIcSGoLXl5
26WMB37eei733EMamhrPdPgpMOLayEF5wzILzArxYptKFwOjW4c//TQUBGre
kmh43jIVcq/kHf2siyJ76o8cf8WDzyblSoe9NVFCZRIVE5WhT//FufO3jXGy
6NW51t9kaDrI4yf53Bg5VCUcQ55bY/agEmcCkYLpL/9L+u5kgtdO6Cu3HjVB
z/+sLu6WAjSpPE6sodhio/fBkFb7bahte1XM9RoZb9gfGKv9zQcHzkysK36W
BWJHs/79AC5sVLRn9BfTxiM0GZ+OyepiAtvqeuBHHihQ86yh2srB+Wwyx0Y8
PdYsfG8zEFbA/AmKLSe9GC713V/9QlihGk1PnvgxJIzvAlaPGb5aoMxUs4zq
bnHdWa0pn6oSgEFiUaY9lRGld+2lql0nQPACp4i5DS/Oijkkjz1mxB2q7+ZO
9irDoKM++2tPw61zPVQVr6EJiXednA/v0QdPiyMpAtZbHjZ5rHYs3xLPqM5c
OihliowytZKfm2ww/jnny9f3RFA8Ir1xtVUTmSiKTQOFtPiAevjV3DZpfGVa
o2f9SwOiFGZWc910wX9B4qnPHz5sf6f1gfKPAcRPl79N2q+Pdwy2faMvXqUu
dHHcPDGjBdfjTP7jNhbA0Jtjq74jVrB9M+6w8l8F0CHFcvm/lQeCwmRwtPcg
1f/6OEeyGBk9VOVY3g9Yomh4KH/p8JZ/BtCK+CQLItFx55z19AR1WCwsvPi+
MF7Rv873S1gW90S+EXz5UAbeDmo5nlrThIaaHQJfTCSh3kvmQAmbAZzXpmZa
lxsBmZH5peM2YZy9mddvF02EV52f7ryTscWNtIOxo1MicIKF9cB/kRTMXhWo
j+ThgQfLBynKX2VBeLvQM1faNUolX4d2/lUxUFs5wq3+VBDVxrJ35GvTYFhH
s9Ok/jqFumLZx6X6jZJWM+RdJaGLaa5S3K7nJSAri9DPYsYO6e9YCnYJSoOd
0Dp5pUINNSUL3jj7EHC6PErbmdcEKLGVrc1bnli1kTIdykjCXTr59TulyWh0
afPRnkILZNHISe0eVocoIaaS3xf0oEuc57vgwjqVxmHO0z+lkbKxPb6JsMiD
1ldXPHrO6kKr098hlgd6sPSW992fvlWKu8R6XziPMRD/rISb1RnCar75jveU
7VAbnWjUImkOYc1MWjeY9CDsqbin6T9Z2CCFNck584Hy+SD9/HQ+eEWfUT6a
LAXpXf/SMjxNIGjgm6BnKBkepJT07WSyADaBuigrOxKKWI7mF+pIw337uOc6
FSSUsMvY06klD6cw4RUvMxG/yc7u6Tm2TtleJ02z/54SxHdaH9BIkIOu0NJO
WtURaqu1SViG51ZefdZJzdyjDMVV4Yl/fukDudldN+OWAqp7SfA2/QfYcKSr
SmaDgHWB3xJ/jVti1dGTh1+5zlHGTl5i+dkrC+M5vxwCHkjj2BL5TbKqFux2
27+rytMKhsJZYhf7DGBqkJT7Z9wC1goOm1yLpsDVIqEbStZ6cPsmf6CEoBFQ
Jec6iBHdVIvkpG8UZwU4oMoitctMH4aF3E8nTOpBMIG7iBKsBe8q45q9mU3x
zL9vHcRmcfxbLZCWfEIYDZ7tekOylQYlZdNOgf8osOdGnMBgnADKJqQblnXL
Y5g5jHU+VsOuT8coZ7Z8ac0lc+GSgjJmRl7uYK0BVBcnn37daozOzmcLnggS
sekn3ZzvuDASOBgff2pUBt8e4vYoY36QHr1kUZwoBvsPG9J0nlf9HwXnGYjl
24ZxO9l77709w57Pae+KhlJoiEQhJNlZlUREQ2bGXyVKVus5JUlCslJmlAoh
2fJ6P97f7us+j/M4jt+H64Y3I6vZrBctUYW3kq2F1xhFy7+5+BcScPmxHUOq
Ghmaq/k39ZS4oHBNw0nUlYQvsxsPgLUypB5PvGNeJwMHq6oY2XQ1IXz8N2ci
sxHEJ28QKuO28vwWi4qe6S9KG3N//U8rLTj8sRr9RA1hufWogt9TFThntDtl
R5EVsq85rCvdkcZQ87Ocd8p08fH7xWoaBwpKT4qwHnigADIms5Mdp8xhwBAX
CLH6IJZ3+NG2NVrIvfNpkoZfFhgW3nt6qWnAdPa3ExNcRNh5dEec9306EPF/
/bVtTB2NpzdVrfeKY11AJ12SmwbYufBZdYyrI/PxxyGN0cZwQNTL1P2kAihO
OTEqBJIgTM2GULhiBoSHvee+2apAxV2JbMu6Ld2ucrT8YdUBdaGQfeRdBLjZ
qRlcyyiHbzL2148piKJQXxb/uMQvKsuksjidvAqu3bIlxX1XgpQh+RR9LUNI
UTHs6iFTwFvEf/jMnBJI2QjqcJB4oTWwUdTZSQcseOZ2mA8RIG+pmT2mXRdk
YkqM9nfJo47hxqvHsQbwouDTwO8t3rT5lkErRxYH2cYLxOpfKhCbSPjvR7gs
iCgFH0oVFIOgNNnGN1P68MVP2kV+uzw+zR5u9fMUgKCH7wcuDatjq58qfY/E
X2po+4Fd5y+QsJeP365eSA46xpk1OX8rYusvLiklfjE8brJ7g8NOCR6vLgyq
LSnD4M8cVho6EzhoLvXvxi5DaKUavL/WsB1olSoe/msWAgnLzc/x4vJQN1dQ
7/pMFmkOWJWnGsxRWFouDap06ELMsubrewLr1LDbKc7rTEJo+7fT7bOMNH7s
UT3GHqiFB5PWPWYCnfD4L3ePyw06WJkWwVNiuEz1oNpeGszZ2h/t6wWqN5Th
hBHDx+QpI8iNWSHrZBGxrWyd1/SLBroqpH/L+66NJbdJU5TfsiDTeC8jXJUD
ys+OOxYtaEKiI0djtKg6HGmJy88xUsAsxun/ljnIaLliNfyCkYSdmafYakAd
LQYTDfzC+DDv9MvE2llVLFhMX6wsVMVlWaar8bcYUKXOZc+DNFbQcpez1uuW
w3mbz7p731PwauP+oYPyRHimeaKfR3c79JqeHHtSaYSMTplG9r9V4US4hmqj
iSz8pB0jdoQzgXLg+NsPWgrAsh4ddMVaFpPX1wYo8RxY8zyngnzUFFs5yDCr
RIFnF8r2pPWZQAT9M7fepwQYWrUzLbohhS3Lxs/Jsvzwdn+4Z9huGWz4wOrQ
MiABnksHlM4vqqPQozXNc68nKZ+vJ9m3L/OhyJddlca7NimGdW/+XLzFjezZ
koY5BC3cDBGYa94NaJfedhdFNfGPG/loarQxhhyU5Ga5pgklm6aL5FBpGKy7
f3nxOcARDK78tlcAk88kJXXx80H3fl2d0r3cyLx2tKr4xCSFyUSqpdAEMKy8
nIfvjwZqidSSGeiksLpCNuyt+Da8MXO5X8TRGPNq20KiuLWh3GKo9MR5Nbjb
usf6L5siyoXosVTukcPbPJZms0cIKDbv+T1AjQVYuL7p0b0XgWTJU5NpchZY
IHrW9fcnbUik466LaFWFgh15sXKuBpAT+1ZkmxcvuLDE8DX/Z4JLQlNjFAcD
PMZdIeqZJ4Jz50qJSk4UpNy8vo+Z4yWl13GXE80pHsz5mB/LPWaAF8UHW+0m
RLG48uquW3usgKNCeTKS1RIU9MnkQ/csIcpXhXaY0QTGT2hqXfaRg5Q9X811
1tYo9Ydeqx1xloTBHm4tb2F10MyRGrp1VB+VNxcZhzRkMJi8a09qtiBOe75j
6hPYhtqsUkd3XOED0avzYXTZeojl49pnkyjY/OqTw9IfTgzx8jjzxJ+Ibgp1
YpsK4vjAOct573kNbJ2aVcpv4UZblplNjSoTnBjQnEveTwJmMS2NVNM/VBrn
2/nt7zopxWrFXF4623DIrc/bKlEMk29f/LbTnhf/zd/LjCWIg1GHgwnPDiLe
73hRTaRThmDbiZnbTTQo+Duq1M6CF1tqbOn5e81h4dZ34TAXWTi9kOL9rJQC
y7bHbYkcCtDXkBP8TogEhLQBo0MLfMjF3nNTs2frHAeSaV6+lUeWPf2zlbsJ
4DOY5dm8Tx6ob692id7aoNy+/N+6cZIMTDVJmvEoc+Pr0u2NxmXG6NBxYEfz
fQLSaMw5FA40U5ZP/FiP1uYEV4kXkr/GRXAv5w7FkBRAkyhxve66dYr4efnQ
PFoDiPFIyotw7aMezjjw8PUJIhy3a3wu+IOAJXyaJg9OGQG/5OtRcQElIKq9
788qEIVrjA1Rx+ZJeEZvfbNx672XrTl+70ubpjTedHC7H8gOGh7OawyNBBT5
/ZZdOlkMi3x0cqbduKGsgp7X310amDeU+qdm5KB6V5a37Lgw/ut3NVzcKwQ1
8ReHL5twIddZ31n+41JQyXVsoYquh1Lz4oPz7gPykMJF9tVyImHDg0PbT9JT
cOKkwPvgL4ByrGOyhxVpsE/N6fm0uBwup8yo661q4+SVcE6dYUAyAzS/EzdA
tqUGAYf9uuh2VvVQx4YxehYclJgQUwC6ZrZum4eLlAnBPMfF58rAQPVp6EqW
QUaydjIrpwS+iNIopq4aYhbxyMTkKCcO+Yd8UD1IhD+atyr/i9CDurcZu1j4
1LB9U9z8o5EWRIacv1VXYA6LgjJEqVJ5NJHurTj8SxIdvxZy9Yyb4fGcott8
n/XxDSOffeReE1zs8+S/5OSA7eqpp4d8CFho/fLsBztdzOqi8d85LYMrIq/v
2s0Y4JOh2uodTNoonXbse9ZHIcx0jSmJCSVChNJZ3dIvhnhs5ceex1oG+OWG
fIKxrQJImyqFD7EzwbNH7nTK6US0UNXy8vggg1Y8/25oWRLALO1OrrazFaS9
SIrgubKV0wqp7A39JPDde77B9aM9PNcqZDx2hR3CSaNX43Tk8S5FW5DmBB8I
qeHK2X380LzMevHVNUusPpWrGsVojmJOr+3K3phhoiWX6WU+c3xM9yiWnK6E
fYm0O9/t3Opt28/Sx12VA4v6R039kwR0fz881HBSFtsb7L1CigxQ6Cevg7QA
GZU0HmdQ7y1TuQKmXnZcnaO2RdrF9FDMMSGL7Jj/2QRtlMc+b+brIn0RQ8vV
WiI+tY3x0fcVg6dP7iWWcPNjS0/iZWsGAjC9owtlUCdhuO270VQXIv7XxP37
aYUojOQMsLd0a8Dm3J3736v1gc414XGJtzkwrd4jGTEQYdv4a3+aA0QYtV3N
eNhmhUqky3KdzLao50G8HapjiyrHDGdrmiiot+ZfVS40TTkvLfP79gNxpOQO
sdXRagCTe2a8XI0AHAsZED/FvpWjMXEZw0x6QP2hdPlvkyJI8AY4ct0zgsmA
QOfpdDL4Fc2PWXUYgF6M05K2kTiUO681mUqbQWS4nY7oDXmoDFyW2hFhBDqL
JXdHnyuBSp1qRXmCIay2HcgmfyICfdn4dFgyBcYdByv6HmxHddXujopKayj9
rglGWvIwd9fq8p/TnGBzavhIuYQc8J967ffQTAZLfnY8XqbngYdrX2dZWvTh
lDPBRv4/U3AL/FF808UACo3Nbx1rUoU9Dvp3tFp50ODlDSbWmyrQIKkY2qIo
hzYXb6U3q+vg5mBZS91+Ala3fctQTVFBqQuzF/L2iaO7T4eJs6EpBnNLj75a
pMVKzg6/GbMFyofyQ+eepZKR64JXS34qM9TNOxz3P2cHKiENLzSJ5mAgGn+E
cTsRHFj2XOdq0cCm9L1PjaQBCUkEZ4qoCNQFdTdcv6qHPM1siVn7jeGVa/FG
nqcN+BbUxNGUK2LDLUv1MAdL0E0oVKyXFQZSGOmKVLUaTl9uePH4zSJV87uu
a7K+CPg2kFRsNY0xLlOiZnCfASaZm9oTPpkh0wHeB0w2eqim6s0V60vC6dy+
8H8mQiD77Pm1b2+JGBe9c+DEPzlk2tBd4hTcem7tZppZY8IvoT6cjlnmaLLK
QNRoNMQnpwqi+QLUMeFeQvYAszS+TdE2i7bURgehnXeL3jLhcf8yS8pDS1QT
J1gaVOigDe1q68xOSwzwkeqn/DNF/6jyJxNvtKG0MPVSzUMjWNfo8flJKwDb
xDy0JyrlwMlH2yr1mghwsSh+oQjLw80HbgrXi9coD2NEqFLNZuDxQuJwYp0E
tvz87vhIQQmbmnhkFkW10N+oaCYgSAjFHuWo/tdBg3d/zBjvP0CLWXV0l12W
NEHkO9Hl9kU2JDyYabymQEShdFbrxyG6WEfraLFoQkF3fqXoV25EFHliLzc8
vUEpl2XsZ79OgtWhz82HvnDgzkKX24/ypCBIg+Bk/GCLr/4k8OTT2eDlM0zF
zvlkNB13zu98boSc4cJlERtmSCgf8Sr3IWO8YWTFfk8Cyif6HeTOksfUudFz
91RMwfWTKfn9F3NALiOpo69MoXeqL2J20Bj0zWYSyCQSnqWTZezcyk0e2hVu
r6skdDjj0K1gyowafrfUHthIIJMhw6haKyec57ETv3mTHQuDhc+TU/lx/f4j
A2sKBWMGOlfuJ36kZhbIrEh8VEUhy8vceHyTIjVqUGHivx106gtKefz1MPmW
UYC+8DZwVc2TquA2w3x3y/3Z5SrYekykj2mHBjg8UrjakKAG/8nYZTyb00a3
Sxl9nE5msHJe2mqC3xxSx219s7VNYaDz9ID4FvdW3Pp074mxKpakvW4/WqsE
Ayrbq3wfGmOmlrVGqdgW3/QXk5PfGaGRBVu0uOBWvzaJOFW9Qw+jci9klzry
g/rdhpuX3eYo37r0qjMvmULE0aMR7yjMoMChb5pVyIPWLw4/FUoThgv9aWLH
z6jAqR5HnxP+yiDHOFPeMqYLjb0HOfeEamOCIPMeF3U5yMq9UFy2oQUfbaO1
rS0VcceFN3yNEmRksD4XdLyChIq3/b+V/f/emtzdMPpgUwx9XjE3en1Lt3lj
Bvw5pnjJvdFSmMoD1DsbJ+t1O6jJRheady9LYm636winsSicU1jyuSOmCTTE
e+3ucpXUopcx1T1hgjDJUCJSxvGNEhk59sixRwrEvdwTif5acKBStDXhhDyu
Vta3X9+jg10pFwTUTGmx+AGfeUq7GT7caRV2xJgXmE59OL3nDxENSdVapjya
uJ1f0H4brSwIHLQ+m5xKgTiryDyPrX1wsY7USjU0BBqG6LvXCFNUoU1PncwR
fkwLJ3Ec+Lwd9UqM3JSvmOA2mp0JGrUUzCbeMP7WS4DjrmIsG0pcSPeuQD0o
Rg2MptzeM57RhaWrnQl/iuWwnaWHp61YH/iLjh23K9rK1eoL6cUsmsAsYGi/
X5MPfjPsHWsZJEPLkOZPvRRBjOVZ+690XgNGGe1Fl9iVsWrawVWkVwabaWVS
V94D6mcOR54+aoUS/wxJcF4djAr8R3arsqHdq591e8z0geW0WXdSIBEs4xMO
///ei9dvC8Oy60pY+0WKlkeSBJ9eLIZ7fSLAUbEHn8kB8kDjaEBP40mGctFH
YY9iZcDsq1JvhqMuMP/KuC4/Q4Sh6abXbp2qUJgXcfuxniZe5/E1IxxXxtSS
V+9exPPAFF9YX3ruFt+Q3A3j/fjQoObm7/u/dPCHTOSb7hkCEg7WyIV/XKPq
zdbK/BpcomrJq9RdFVUF7/aobttXWpjrom69tE0W0klcDOVSRIx8+6tReGsO
s0n/Nu9fNUT+yAtaoQ16WPOLle7HXnkMszvsGh9igGr77k9aX5+jZI/aMjQ/
0IE7FqT5+L084Lg7S9PlBQ98FFt5/WOnNORKpTxpvi+Kt/XOhBv6K+EzuuFx
8cKfFC67Qp+GT2SIu3zSj1xFApFkBcb7+yxxPve0daqkKhx51rXU0KGLcQm6
jw9XSGHocJOgWJoxFqgyzMcetkbn1QmipIgRRCRo5WRL6UBhxz/tqA9EmLl3
IqP7lSQUvlcpv25ugNklR3QsTpLR6tBFx4UILahtv1d0nKiKHi5pkQdjCRjx
1k2QxdIYu9oOrY2IGeBxs/JE8iML/NV0a76fVh6b5u0cPgcRMTO8Wu1bmwkW
GdqL0ccDylSE3AzdLgcNPK2dvFv+Py5QyiYzSsBeh7GLCp8VQer1cgqbPRmy
albUBVR04OChXbFmjFLQ8nP0b+gnAO3mc7GvLmpB6bXzdqxe0qhk/rBK6aka
hERatWfriML0kYvEyyXsmAY9U3r/VEBg51DYqUwREHBWqVOpEUKp/7zbCmcG
KeuuA64f7wpCMtNh0zMbirDse5oSdcUEcitxgijxgxquLqea/V4a/WQMbFyH
ZKBgcrblXwEZ7tz9F7jorYyzvxru3VNgAInUFbcBaXXMEMibbtIm4rMx+bdX
rRcof9uWVE1axPHUxLNVLkkmDBmv9pL5qAafvAK6rQXlQKCvlf9sCx0wvHh+
UX7bEvVG5/PomwurVKHdjRFEOhlssfhU8X1sG+ox1byBnYBD+qvuiXT6GNBQ
aTi++J2qF53PsqNrjGog+p/kTh4liG05V2/IKweWWZKxut2yUJoeykIXrobH
hrzET3OS8ODhB18sullxQIB93ipaAYjMu0VOuqhDrss8q9GwEox86JUxI6qC
pDTbRTYmCpa6HaTkptqiRXn7lNuIFuofYt1P6rPEuRZPyjsOPWgyEH2vIS0I
JYGM18wbuOA0ybRTbkoO9HsvffO/p4mtMSlpvC/pseyklfqPByR8PtI9lVzF
i9F/Zfaf+WEAr2+GRpjEKoLBUiuTaSUZWJKH4m7sJEDn3dVt6Y/0YaRHopLV
lx7mhwPraXV14ZSnzYPrW7qnESLX3OzhQ8a/vPrVCvJ4LJJw/46KMrgapr8q
KxqlVj/6j+pRqQj/1AoahENkIXhTi3/kJgdKBHzZHp+nDTpnmFKKKnSx91qX
DHlSHO9V//SS5VBBC4XTbxWHufHCbLTMtnR1uB2QffqoCiPG5TV2iq8pYBx9
L43kFkftFkm9JZ4jikX3r2lKKemh31eRz69lDXDWONKKqLBGPTiqkBniRoZc
D81/p/V4UDx5j5hXijT4yNa9zjXUh1u2BmIJ4xbwbS1QKmKJAoVL8yxXBPWA
QMlLJi9bwq2lscMBImqQ6Kj8SkrZHAYSIkv1eCVwMt2HlqlQCwjbGcYe/ZDG
8ZTGloQrWqhxNzWBdkQZRmg99Qel+dFpmCl/qoMC3i2KhPajRuBJbZxO/CUI
MX/Pd3bstQWBV48kQpNpQW7ujtDjZ1t6z1/PejUshAv3W04eTeAEPjfWt/UJ
zEjnlVjVVq4Ls2NynDIpW5zqtet+64oitCbwyc+90ENf5rJ/XtNkNHuhvS8+
TQoNAmakRAT0sHDqWWl1jyRQaELcnvf3UXPpP0Q5Fhtg1DvTWlM9dZzQZi4U
tyHD01jzQRcSIM7SidjymwDPDWeLajdJkLmuWmARaAw9NUXiNE+I4HPmTEPz
BSUgyI8eCjOfp/6nVFZuJ0GE/LjnEbEORlCm59NZ68SDDH2W5xRDSTCaq7fQ
KSqLsblmi9H9cmD4Nbji3EczMBAb+zubJIJqilfdP29IQmdE14qOzwKFy5DH
ayeXBOpsL136xGiMfCY5FtfZ7cDd+fC/jb9WIFHFwtp+yhp4Ovfv1euxgQaD
cZOILZ5lPnXpXVMDAY8E8spOnbLHbwoDs7yPLXD7hFHTqvA6VVPwxoOYHBOg
yeGPeO76gVpF3thmKS2E58z7MykfNYDtSj27v5gucJtb8XQd1ALyo/PvjzLz
Q/nMA8s7z7f6fv26XtNWbtrdqTk23KuBRn967+TGaMEjjkQ69dNSkJY/w2hz
3xTLuZOPuNZrI5Wg/91GvpviQw5UrGnixe9ss0yUi3xIlWk6K6ykjmmejNZT
UW3U83pa65EjZOyF7Dfjnuq4+jvKJFafhB2v1Q+wChGxgliTYe2iBTlDkzs5
0Az5ZYP5XBk00d33LLtZswwIMX40eHCdAUb7l3/UhhHhWqCU3BM+AzhFvmc0
f0wGqTnX3ZO2+tYXgrt0SQgXNAhonep+L4ddvMQrReVm8O7UbNjHZ3YQxfOC
0ENjCzvTaZ+YWtmA1VuKd+YhR2iembjIfYuIB18Kv+ZrFQAVC8OaQZUtv71t
81UyyghtsguMH37TAP92pA+7KoTul+zG1Um0UHc098ovgx/UZx2f2FNbuNFi
3+7oHhEu3BmT2cnxTgHPDnmvWSaQcPLG7XMMn43B9fjv4Nd2ZJi3q1ASfqUA
nm6hOkfHlqjH3nDAmKkSPDygq531Rgp4uBcYaVq1YEcFTcj3EXmclteKMrI3
Qtc/t8ldVRxw7rWBzDZvBVR+JHTXppmMR45x5u102g5O5tLfhAbk0HaP08+P
SWpQYSIZmCHJipfYM9USTGzwpEOv9E0bNUwOCSgQ9OGHTOl9O+jTyDhRuR76
76E0OrlkOu6T+Ett215Q0TGljkXPGqL3MgoANeymPauoLNz197oTtAFYoCzv
sCghCMO6ejMKgZJgdVS0MLtDFhZcH9iM6BHwfcD5gWgjbhgTID5nm6eAz/o1
94cvhPH74QY+AWky9rWtVxVHCKPn+1zze6IKsBCtUttnSIAbrgv11xSNQFZ0
JLYj0Ar831n4hG750YOzjRr1wizANgj9bemikP9Skkb/tSK801rJ314kjoF+
BeILW/u5u9irvdlyhXK2/NyfC2lawEQk1BzhksMT3weyT1npQJ1/z+XwWAo8
I6/JS5VagozOpLnCdV3IefXQRdaFAVmYyU8NGym4mrR3u6oLGSVDRTT8YsVQ
z3Us02lokGqkGWLfZsyCkWaHz3QZCKO8xX5L5Sg56HThFzirpgwMZ9lr3LoF
gKGU07d0iYw537wNGFX0MKR2z/pigx7M0r9Mt1g2hb/dffv2+hLgbpWHJrWG
G3itVFqescoCy+5ho5wvAEE+Al+eWpjhm40mwR0pQvBq2i7QmZsIc9Jadx/2
aqJN4CuHpe9vKd990nSj/EXBeiM6q0pfC2oU8jwKpgnw56Mne6EPAdoTYwTj
5haprq8j2zdKTNAnp7kgLZOAoreML7qfJqNopUSt+tAWh742GuMPUEI3/Qta
jaMieEX+TxnjbmnY9z4uMsh9k6KTOBsSFk6BeOap5aBTFHA80XvV4qEl7NAc
r8oLdobPfzxO0LDLgXz3FbWXatqgFFvB/85gijLS90mHDucpWfoM7kaOevjr
9acpsyoiyjzP2hb9wgxv8LOVfVUFHOg+pXOzhheikpMVOsjbwc3SVv4DkR1/
Vzpu5nTLwQuruhOhQVxwYPOB8EKXPqS5H+OtcqODd6Tc89Uj+tiznWKTXcuD
kmavWFQYldH1bWbO2n9EPFsl3JceLov5ilO/6GCIeiDOv1+IUQ87N3nXao3W
KI6J7d8shcVwMo822EZljlq9/2FZjtgfasxOtpQgpz4qS0egvOUWd4ifty+r
WDWHiM1RvlvNBkDLcdVobtgCYu4d7GcWlYDjZzJdjrwhwHjUscDRRT6kNFn0
FhXMU+PScy9nq+lAWtKbR7rOfZSB9WWeCBV1MBmH7YUoDvOEVyLRcyRkzbyz
bP5VFidumsq9FidgrsB9vYcaFMxPPcnkzqeG5RuFv9pSVSExLfiHWYAKiij/
9+KyFAnD/p7Y++iTDIyK0TDSoAKa3g6JX4oiYqMm3YbsCVms+vfcx9abgC+s
BJwJOWZ46Jqdavc7AwxYv/iYGq2ND4wkZ3LkDZFmRVJe8NqW30UKPdsm1ENt
6is+ysGnAfef/xy+o6KC1BCau35fP1GtiAS5Xyyy4D4e/1+tjxEyVV6/tbOZ
CwuvMo/cVjMFyqM90XGe+lDbaJKbVKwOXEMLQRUafyg7wk/9SW5fpE5TXAfu
1Wnj4V2P/pj5iABZRqNtuGuBErxq8M11RRdJpBbeJeVxSmjI9owp061+cIH3
Rs68BBq++fYj4AAXdBo5k6dUZqk+u78wPXKkBzmnv5kMvEr48zFN7QlPbdSY
pu5xO2GIlUtVBReOU5BaOCS0WGaClyL0K8iWwviM0vDI6xM3VJb4JHPKtVL9
GixItxS54eza6Y9H50mgq/JKoegbgErFZZ+TztLwN3jNdDFcG7KOsr/8/sQS
4rUKFxodl6ldx24Fm1kpIsuQ/su5EWlsuqRKkqI1hPb2sl6BHxYwMhb48rTp
Vr7stWIJaACofvJlqJRMwMa+59GlHdIwxxp+6eSMBFATQw6QXnynrlh9dfZh
JSOHmQGVfmseyrO5HO7jeui4lmWp4KyLIUTH289RCxMfH6+3uU3EdPfMQeF6
LWQjeWSHMGliVM1EJoucKrSC+MijmxIwsj+BICu0SH1cUTca7mMAlzyHhTZn
NHBe0s5y27QeNtzuvbh0jRtc818OMO5nA5/+3vzHExIYsEd6zrpcCHtMJV2i
BzUxIrSidKBNGqmbre6Pmzcox6cVXFwvm8Gs1/u/6e5jFJvlI6SwfC0M9r8t
McSqitsd/KrObAI0d36XtUuShfwkT8/K14Lgqz69K/CNPi6QBe2rtQ2w7Jeu
Y/iSASbYBwiRWe2wmq2roe23EjLtT/f8nq6IJXyWbLMHTPHS6d/0R7htUMrJ
5ktngwV6BitFlH7d6m//lTOVnFDDsKSkb9fLbXFhoTH20ZI0CB0LcTl/Rgto
wtym46b/UJ0edDoHdWsAi/DZnRJXiVgTn5y057kEarRxrQtvzc2iyWIzJEsU
76++CNlZaoUmfwsOiFro4ivvVw0m1kRsn6/Y7iDLgQYWn5WjswA7OZvfOHsA
Vj23kBk+ZYKFTkSrGBZ9lMXIZh4pYQyqfxXTSxRBmYl+M6MLvBD/NPu/ymgx
2KnhIn7SYJTCfLWwRuK8HqzPr2dWf+EDKlvdq6ssv6l7Rn/r+LMSwWFvhUOm
kjL8CK4MKxERgLgM9brRGknQVb8R8ndIGm0GxMueNRhj3qrlLeaPW5ztydc/
LKmPMfst85R9NGGm9KDE2B5NzEzSWPIpX6cy3S1I+qGjA2WdGffO/VLCjKq3
J+W2KwJfwzXt3dVWoP5xRyDTuDrqaChr3f/Fg0q/YHnXaw1Mrz/045mdNpR5
3KeO/2CGTC2dwSblLe64mlNaZaQKxzxCzwskq2CjxU3XvKgtn/5n0G9uoI8N
40/+uFva49ODO2t3D5vjvQOl7g06ZAwb+y3LPjlH2WctFST6yBz6Al9/DTtN
hht9bBdl6Uyhc+lB/YlZbthtOxM6nm4EzaNKq3FlmpC8Wvrmwv1linS1L9U2
moB2pH2iEg+3fM+Bb3Pyoz2OnQvmYk5Qx4pVjUJpHSLY9SoX7HYSh+KOz8uP
ZTjh44M83/pvSqBmkOf3pUIBhKalqHTMyvjNcOzwlask7DPbvXlgWg5aji1u
G3ZUg2DzO9V+qURoby4cHkwgg06gYUtYhCBKROWq6kkbIceT6uOcj9TxazVT
PvWwGTY4l7INMBPRdixOM4XdHI85W+96VW+Kbn8Uez6etkUTqfHF/fkG+C/E
OHPtKz88uuAcVPVVBWV9duflZpGh6LhzrQ6DGrRtJA7MDZJQI9SsrTRZDA8K
3fJz4mDHGEmfQl59AfDIzID/DuqDD720u7I5AXoVPj7kKaHAQZfR72WONhCC
Zgr7TytgTWJIxfEt7uZaxNBIh63vM+R9vv+xHqrIYdHlAUNo0+iblOXUgffV
p4dnXcwgc+/TM/1b/DtltVs4Q8YEy4bXLpod1cZ2jsqxwwMKcL8Hm97ZOaJa
Tv/ofksCzO/XCdFiZUO5QGnWjrs6GFeudm24VBuWJ543VFuOUFWE7ybRW+th
WzCjn3HoNlgXzShmmBWB18aV9iRacxRzUDSXalbAQ0Ec74/YKaKid4qSrS4B
pY53aVfz6aLC47eR/R78uPLNin9XHQE9lykBGTpWyBH5/UN1lwCCWfsFpf1S
MIOygzH3WTHp0MbV0n5V8GAy3c7RJIBrjw8PC0gAEtg+2x1nkULDv0Nx7DNS
yBcT5LmNRRSlzDIvZ3uQgFboyIx9PA+YZz59735SD77MREa2kITRZi9wtZ3p
o1RWXJzP3cuMF8Yy3SKF5JC4cGI09zsZ6NwN/kYdMoW+h/lnZxL1Ieq/Y2SH
ZFNguRNm/F+1Bo57GTj+MNYHZTbvxgOmCsjxUz0r0VsIwikFeyfrVcFM5Yz0
j6cKkHSW24+ioAZZ9nPFDg16aKEo9CpSnxsa6z/VvaSXQpHQUJ6S++OUJKNU
/epzm5Rgt3mPmUAS+nNFcQxtkGE21EmtN0wTDgcn0JzeroeJnEr8V0Y0od/H
RLbnlxQ0sV8z4lXQBdOAXDGqtC582XMl/WiZDDC6NxyIqCHBlYQd/nG1xkD7
YGHCZeMtJWVahbqdyxqVX9fT7YswwVcDR+gdGQBdm05+MN9pjWz/veCi+urC
M/eiGVUja4gwmPB9V6MEzJ5V6aN5Avi9h/SBECyNMatvwg1i3lHdO1x8Lk9o
4xPTkGO8u4xw8KCXVMSyJuTYkoSefmZGhzJlidIKXqxsKVIe5FBF55mclVAn
GnRjcbN4VSMFATPhP7LYFdFqsjmbY9IMmit2bgsJBSwMrJobMTPCS++6rB+8
EEDP4fnEPcu66Jvyfeihniy20bX1TekRIaFXNEqAQwndz2w4yrTxISHykHU5
bocg6Uwvq2wC0q+a7alf4cUXPuS973W4kEdP24NPmAcfKM+KTdTLIpPZ7Kfm
T6LQigtNzcPaaHFIymJhjyIyZMZVXeFixGK/pgf7ihVBuvCOQ9x5Nvh8ZVLH
o5kEdzxkUmplFOHN7X/5+QwkuPDx5+2XqqowL1zk3BYiB3pCChcuvVTDKX7e
fZ5be+wuWBoVtmwMezWobXvCWLEuJptFdFUE5U7s9zJo+Ec91i5M/m9DHwVH
Jd/ZZemBTU1j6nApEUQFf59WuUSAiw5Fh6uKDIAmcNfSgc1/VBmX90NRgkTM
XsnsijlDQl0L76cdRXKo7OP470+kFYpIa8VWx2tjqX96noMjCUcyJQyvefyk
cK39DLIfM4TYUG/xsXoytGu1e81pCcI/j7mrfxy1tvq9DGNqtSqu7W6S8NzO
jxPanXcYzMj4btdrJZ+XStgY5aPC2rVBMZyVuz44zQWWv6B6+zUu8Ff/kUDf
R0QTc2pJUJgCVuaq3Itq0cWKY98HdXrEUMnTD08ZMcNuc9mlNUUhoPqvGmj9
mKL41hC8fpEFwKJ6NO+d8gKl+sd5i/6AUWriCsfEs98CEHBAJvPR4W7KCebk
y+MXpfHuaeQvYTXGKK5dGrW/RZGakWYqHCABziJ1b/Q9t/x18BpvrKow2GRd
HrKRsoRLTq4FlTHakJwolbbn0U5gCu0h7grmw08M5ixvz3FClUlL4J/r6pD/
7WsfF4M0hHXNT8y4aEOIDiNUxQnBEIPpm5UhIgT9/aV98L08Lg4dyMuJFUKq
mBB9jnUfRerv3ruf7sqDaNj9X8xZ+qBH9KO1OymIqY0nI5bPqaPN4ybt43ZW
GG5/a+aQohkaZx1Kz9DcyqefH5UPbfIjzeT73XPnkig7nJjttCzN4CN1UH8q
wBAiLoa9yfBUAnG6DtHv4jqwuN4w/tfLGKiZ2t6/vEcoftTab0kmCuDLz8F2
lyyMDdJPHe/5CsI5ziLNyXApLIq8FnBvjYQBJuEzF/XXqGKsz8mtJCPcqyd/
yTeMBIf0dMoX9Rxh3xdBX2Y6M2iLl4k7uUmGyuLIQzkyCrg7SiOTW5cHzzPu
fhrbQ4DrfB0Tns4EML561caDnYjlk09o2jInqO8MqlqSm9UgkbfzokinKlqc
V3E7k0FGllNj96ev8eF+mYCU7SUsILJLJSltTAoYxrr6k9cVYNy24Um+mxg6
nL57TXvMAtO5utvPByugTMRkmUq9LsSUijqXKqlC8y+fKfufcqBmabQth90U
GPwT49zzWdDz/rYfIbvXqTayL/jZheaolN38T7PLKehb2QOH17nxccjD0rJt
clAZ6sR57KYy0jjbjCcUK4BeheX4j249lPeI/rTyYZkStsD5RH3rnIz83mwD
UoYo8GyFsuPYdlziHP1KwyqLC/ykgePBHDilhkK77xJA4a0CHjS0gcHxpnaF
PWrQmP6f5UnHrXxmZGA6qSkD+a3qshOOmrA34Tp3B4McPO3yu39J1BpYv/f9
ZQw2gMyEnr/rm8Ywrix+K25RFkYyVFis6y2ARiPRf/1ME6U206W0Mo+E+TG/
Iout1igRik/+9hz+SaVeZB67fVENXrAMfb91mRnyvUzZCorFQKc4/qzlhjx6
Hjl/w6ThG6VzoaNz9ZsVqvx6v28kRx/HnF2rr/3//zRJM/T15XJo0FIdGWhG
AJ7exan2BDLSpf/uJX7TweBlrQ/fF1nAoveM7C9RMSgo6So1VSPjFf6Puv5n
DPDCpoXWeqw+5qhmrKpXiiOwnIm9HaiCT5voVszGFaHpw/3CJLNNSmSDt1tb
giZMVt/4eSKLGQhfJPY7ha5TfDh/rtf+0gcGF22hQVkl5HuqOx9QRI/ZI2vY
riWCCb77oesqD8Z21ZSy1RGhurXn14lL3PDkUJYjU5IJaDH9dr9XJICZxAmf
44eJEJF3yC0wQBAYrRjZ31wxwqyLwfuzGvig5JJw28MsPmzvjDgpnr5MCZLz
2u7Yw4W/e3aRWL3Y8I7mdPc9oi4s+dyxch4kw8iG0KRr3yDlvoaJBPGaIlg6
VEm51atDlc8Um8xOIu5f5Tms2G+CZknWplyx5hDXV6GZJqMPEuLP20j2AnDB
u27Pao8EuDrsbLjVqw7BBnsKJXVNwbXpVItYzCJV5/XDa4YBWjDSn3fzbQMN
HBz8cZBfUgYtPgnQtJ+XxxCh2NbNUkPsGl1t6xg1wr40pYxTAUp4L9Jr9Kyz
JhpKTX4I1lqg9DCH2zZfUIT2NsaOM3t5oeXR0sbGMwmwZaUPFvlAhpITjp9q
ZSRwVr/3rNWln9QIW4HoBE9z1Cvi6icPkdG+SubppXY5/NbNYUkxFgOhkGOf
S97xw0vlNg9I0wW2J8dZCpW3cuLrj5MlJGmI014fvyxIAlNsOZgQbQFnhgyP
B/2lQMSIryqbrSgKaNN/4NKSxc7WOOvECB104FE4xCNAwf7WM/p9Ajuh+0VH
Vc4tc4jXWR4hLdlDbtzrTJN6E2CTLipPqTLHgEQj/awzuujsSoQMJzIe8Pps
d6tBBg6vZtD/pVUAEZYQy4it3N9LC9EqBmp48Np9H/OFFepXnRMeBSUkCOzz
+Fk3b4bLS1Mi/NcJmBJ869iVVT20Oqr1tukzG3CWOtq+eysDf/cLcNnHKIFf
oGvThvCW79E+pGeOIUNXoobhAzMVaJr7ffrRLk784PGnjMVaGmIOs7TUn+SA
Y/MPyvh92NDsP1/zgS/8cK2QJ/r9Nxn4I8P7eN9+DaCy03hwj8hBxX+/Xr7m
4cHOl6rlXvY8kH5pxG3Xza39eiCSV8W6SHXqC71rS9XF+JigvF5fMog7vUm1
4Jun2J3TbRO9JYiZPyWb/cNFcFUUq7d1ieFi8/gTGNSEeYYHvuUPCRBTQ1G9
s+MpJT+48/CwTx9lBwl9BKNJIH0vlNdhXRoFyRuuGqoWIPSS7+btzBXqBZjI
9a4h4NOeOEuCDCOc/nbYz/mTLL4M+3RwhFcaadwOb6isOeAuwy6u+y5WONVn
Np8uv9X75jtSj5SZY/LXYtLuEjkcKKfGaiQpgejuz26Eh3JIqOj7G9upiGcO
lLzWE+GB8BvLbB4+8iiot2dX7CtjtH9q3j20qoDiGsusaQBYNj/D+OuSDD6t
ZNl2p08R5kudB27HakPaD/1rZeoGsEZPLNzlq4YabkuS3iPiMKTEteZcpweV
/PbjnI8MoE7nTYF1LhtMdC0UeFqSIOi119NsOTO4dnZvTvJbesg84fbCVG+B
Uskrquo4pAxE585mtrLtaPNOYptPDT9GqzmNpubqQol+n/Tqdjl4eH6nfupO
LnRVUTPf08kNviu1+dfi9cEvu2H86zUxkEpm+vtBGSA+UcgkcYMOp/btHI/b
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
PTjr+TfulDOGIuqj59VZipBHJ1vtdtOH0YHj55XmRZGZ/8Gl8SdGmDe8cGU0
4ButLCLsZGCnAWpvHvMJfKSNAi4sHN9AB9xN29WLVHjh42eGprc5DNi6Ipgu
92idzmsixFb0kwdynrM/NuESwIP/eG30D6ujTXK/pi0ow+6XqkyMArpAXjrr
+PWPIohKrXyPpyoCQXtEftXZCB8cP3+3yJwdrapW2J7wyMIpNmGe5fdE2KZw
T+boRQ3Mfx04qedkiWq5u2Z3GWtizPuLv9wnqcj5JDpquIWCzbGVYo87VJFN
oZy90Wuj73IDl6/amKDtf5ICx679pbmy77hZddoYGtg6Lk5q8cMY+2EW2WJ5
2C1wafJ5vTJGbO1suqSgBXO+z0rKVGTxlr/6qm2nJPDv6QpYVlBA06gIXQW3
PzSfscZh4oVf9HjDd4/zk9WgZH7vf+/KtYHHpKm98KMuuLw3OE+YYkdiaNEb
CrcRSPpSqvcd1AWZolhq421FUC06Ju50WgdCrF3s4zjUIP4esYzJWxdbRyTm
021YMCAjMeTpbk6Mlm4xuWavhTPmt37Pq2lDppEj2WWDxzavSJyp2YY4sThv
XPOAgJJplS4n+BVwhjHdNjdaGRbX3UgDkVZw7H2cC3uGNA427Sg+Y0in/5f1
YCfXI3FUFox2qpDUQe1xxgdpbnKYJjilr/hLGdjbXp5fv8yC78J93y5XEzBA
N9vl8QAHCPoc6G0qAWy3HvmLERxA7zEUTdrWRa/elN5P/KmJIg7uTUZsuiBc
yZIksqQHfAPKgfmhyrjjhe5j439KIGx6uy7QhATsnjzhwrrWQGkwOEHfrQoT
J27MTxygwCu/t3Yml8jovCsn2DFfEusERr/1nbTBhYy4d89jKJh3uH9/ZOF7
2s2ldOqFgzRYay0z7lxTgwuFnTenvojDKt+Mg+BZYzBhMvS4OmMGjTz++fhV
Dr88PrPwtIAZysRzf06d44Blht+UkBdqcHrvtRMltSxQ/0Q5ufycOMwNNOAA
iz5+4PU5SNBUwbcRL3pYubYie9X20bfCijg8MxFcrUgCSrlJk4e9FJaHa6gF
LevAdZu+45d82CCZq+Hb07jftINdmsHpQ8KosNSwz2F1M4wkO54TE1ABda5z
Jesf5KFWq471Ij8V1Gp0LX7OqoDpyqNLKc4kuJYZx/DcjojG298M8VL5UNTc
XPWntTXSJ+rlk46zwxvNT5qeRVQQmu0uC/WWgky1UkkmLXVonp43TY7ngop7
Nn5BfCowm+R0KddunLZPxbXYmocXl5v6ft1N1wHGwn1PhnuJcPiHGXOXqiqK
RtUuFbDJQVmOTYvx7Xna5uTf/FdPagLn6V7G+HZGyCFcWHv7jAgBcarOpsZi
uPRMhnvxyyxd+MZJK9ODG90r0xv/Kc0QVCIuzCblcGL38cNCbS46YCMmIO2x
sZsfXnvJeDhQ4KtJncixCjKwmX4VHlYhIP/Tw1t590ngoUqYCz8sj/M2ideL
yMZ464mmca6oGbCkVcY/FFeEjpG2/Vsvq4FtcACl0HCR3ndRMTsw4ge9l5g6
w+Ogi8KzniXbsmRxcdtz/22cVJyL6quMVlbGSPtC4eNblZFpSrfpmbYh0EXL
ezT+AoxOSJQfeKOD39/ZnnG2omKEN1XmugMfqKUNeF2IJGKP0KVtZlWAvbkp
w9LqutjzmJdcW0ZDt8Hqv/WNXPhYTyJgU704BASsH+JT5YO/v4PF5WY54PT9
voar0Zuh9MHSK+02dRzpdp999U4a/b9x3ZLMU0LrnmXTS3ya2DkVpbBZShBd
24XXtuRrg9t75i7T5AV6KsfNtspjE/QchpGRsBodzIs/GqC6zQTPH/o82e1L
ReIYT+7V5iHapPVvncO8AIGxQ4GJORrorsN4pMRVAPbnGvi6JstiZeXnlH+v
NDFnIvhJc4kmNm+Rc7q/nQqyqqNb/byMMZu9+VSrAR8mKtzclr5FCDPusCxF
lBiixp3I/b9kbfD1r6Iau3oJqF7YB43ZFPAePm8b5WIM9SYPp+0E5eDpHoMB
1wMkuOz85bP1Lwn8YDiRKv5BDevV+Cmec3pYcz1E6GiGBpxeW+vg1tbAuF1s
vPeXVMDqaMPbWh0KfldqOTQvYYEP6bJn2KX0MbosmbNOYpJe++TEie5Hqqgi
5CUwWWeKbD/ux+kZL9PMU3Y5j24iwcRt37ytb+Rx+PCeqLLM/3+Xo0389vtF
/ytz6iCDixTwHlzoETw9SuN9vzXi94UlWizzi2A1Pg5oPRdZf/TUGr1p1Mvl
hCE3OovVuN28u0abHIfUbxXm6LU3NTRGSAjIN84m/32ji0VLQTHVc1Q0n+mN
Z97oXaGyxxwfXfTxoUo9f60yBbXGv+6JjzOAC9n875/aycMXgbH9i/zaYB/+
zu9QihwyJLHAYT5RDCRNJLV1rdFZ1mlD6r8VwdtwPCdtnxX8fireHKFih4IX
soxubLLEzKSg/enXZeGmLdOJz0007OoYBTNZGmhZYACJlQeiPSrfMrT30UNq
Vxjk61jhTO1ybvVLOYj3WPs+6KgIioLGkkdadfAAJ+vj1mcGMDAkJjSYwQVX
agvNymo0sfpkqO2tOBksOh7yZFJPFDND3tH3ZyqhTernkHQ7bjypcag+KlMZ
FUd3PRIoIsD4MwETiZ9SIEPQYB/XIEIj4QqTNScRjHddP8nQJgFhPvFNYu4E
kFXvfHd3nA/Aq1rnQ60cMI+fIKcLiUHJV+UZ9QYinv0mf6iH+JNeI+gQf9fS
Cj3Hr2aRCnRAM63EvOm3OOakjzLpcsnAM3+bZ+esFdDiZZqz0y0+bF1OrvTy
FETOY/ZXlY8Z4OnLuxIds2g4MmlvtqyoiPvu30tOj/tEu7V+kb3yvQ4Wv1lP
XV4l485jS1xJW3QxgiQ1VrHdCihxk4ccbmwDNgO18C+7HaH4wu+qWD07mGF6
eDy7m4acFVvjOF5w4mh34+3HfmKY2VVAf/lECT8pO0eSSTKYR86Y6/fqpfdF
P/yWKKgOhXfDn0XJiIBJgoDZU2EjKPU7ru4Kkmj7ukrCtVwCd7+gLeh+VkLP
k+XyuRzMKGP09J7NZ14ItP+cWLxVC2ICvzB0SqvDJQeh/viN59Fyr/p5eiKg
uqn/9xpPGrquCKTsLDDC1KzR0JXvxvjM8fh4wxARzSdovF5kMq5zm9u3zDFg
psOOODE5DdB7ttb6+RMB7p02IJY1CkFCidDXGi4yKBxc73TrkMPrQeOJW3u0
UHHu+nX7b7qYtJZGaz5HRdY9a8tN3Fsh9WG2pEYiFd7nCjjqG2oCq8Od9YUd
huCw82Ll1b062MaYoLsgxI8ztzJuxKUIQGiIvIJPihzI/EuXWM1lQ5FELq/0
ela4F3+i4GkpKyx4H72WG6aK5XM+ai0bvi5ZHM0RVGiEVdyPbvd3ysLD1Y+N
Pmny6JYQXMUoIAgrTlPks5e5YPJ49y63nxu+Ps81oNxFRgGd14cf1hnjdKyG
kHA4oManeBurRm3kpCaKftLWwdnJB9W7SjZ6dP/jUpft6zSFP0eUG54RUDAv
Gq0GiTC+P3XkhY05strWai9foeB6bt2TqmgJLMvZbSCkYoEaabU7FH+bQ5Vj
ROusEwnYKj6UOQgowabSybreP+og/t5Wu4awce8VhipPr1NBNKnjt7g7AS3H
kzt/hmtBU4rEpvERKkyftEo746AL0WkZpd6DbCj05HLmnJMGpGdGL360oUL8
j6ufiCf1wduEKUH4BAVGy0L+G7DRRcEyTWUFET7MZvmP4NZmjKEyeSknVUdp
pYoxFTJJhnjgrnjCgKQBXH56Olvhrh5yH1wcvsuvAQnP7Uv684Rxjlcz712V
HLSPV6joS4pCU/mI0BFJaRgqUJjMjP1N43fndxn7YAff5h54VazTgG2npK9c
gxSUzuseLZ4zB60bRepR78lIbVVhimNVxWnLAM3GCm10H2+/YqRqhYe4sllZ
rZlR9m7BUD2dH3I67wy9Z1dDz6os9x+n1mkH+0/tPvSCAYRTRndN/GeAi3XR
xMVjNCTn2jjttFPAqcaIlONXCdBXw2Sa4kmCiN5sqqWEEsqVp96fS6FBkJUm
JJmu0PIUe/oY87tpkps753K3WsFkTWTVMzddKFqO7ZcSNIZN4pI/HjNIY8J9
84D8zdZwfom0m+W2BuTFpT53EF6mc7JltZY8V8cslm2Vz82UMHvI89E2cRP4
evVRk1O/GEb/509N3/yVfnqv1L2Df5jgu7/VzZ9vaHjsiOC5Zl4Khi4pih1s
k4KmA8ezPv3TwYzd3+WCfIVgU/Cws0CyHKgxUQaZbipj8ruxQy7cg7TMyydO
pR4m4VDwKV+3cSMc1DvYFCP4g1Z2vzVcxVIHyhh2khlzZJCfZvFnYmM3vxUW
93EVaMHMv1Nvgg2JkMNXkyarL4Wnru26E9dBRroTeKQLmmBetG/8fNMy/WhO
qeiphyrorug/l+5BwvaBybIROSaoO/32zovrKmCRYPm0OoeA4bOfklKUFJD9
Cb//Lf8tQAzrjvz4kIbRwVwydx/O01/cf3mN9RgFp/mYyy4Im+JNIeXeQjs5
ZLq/HuJ90hDHlVs0C9Z0IVX4ZNmTDV7EBi894JpXgg+HQzkLBMSh8jlXUvLu
3/RTD2lR7Ae0YbZMLT3IVgWRalIu5KqMrKPkvt6zJuC87vDeTNAcCHdkF20e
6UPHgcKUKTLAQaur725u0sdVR9932nZk9DBXujhSq4OUh4fvln/lRxbDw+lB
5XzYc2Pw2VlBJYwQZGyPdmfGHL3xmLooQ1x7JNhuyETBs5sZSCaZOuB0zir1
QIwC1l4bP5Q1R0EpDvdDrrlKSBxS6VY/TcRiNdvqpCUDtL/ytLHXQBVmOp41
1jHoYrvd5WAf/iH6rf9Ym0Q71LD83uWzIoJUTC8RTzJJ0kMG/SO/lbf10hf2
1owJDergnTLO/vRbuviqKfOyKoMe2M9NyGdM/6Zlbym/vPSICo9ut8mYy0rC
Hl/+B2PbpKFl2di0i2ETGF15qtO1RIFlXUr0kWUCKmWEEBI09VCQ53uWSpMA
Nh3bElY8T8LT/q8T9hCVMehVkXOiry7aXsjurtdUxi9/56Ik0iyxR02nd7lC
F+tG0m0mhfjwYdITJZ0iMYiZLKlS1iFjGNeJyrNVWsh7iJfH5jwf8Hwmj4+R
pcGdp//wr1EZYM+orFX3MYeALTeuv/RQhIP3gqiCKXYgPf/ES8kDQHrUie+P
uR7UR10K7LixBcOmWZ+ENS/RxxkyX7S/0AbuBytaC9sUwXJfkBvnTwmoo2tW
Uk9SN/bzu25auwzQNr/tjHimCx213rX185rwivdCsa2IINCmHzmm7dbHmFhJ
U21XdQxcEh/Ju6wA1x6M/tzocmAgC06q5Mkic9mbCYk4RZh6bmYRXq8LI57T
uvuNiUCJV/b8ViUB8a7hvVRdFUg+mfhEm4MKJd+eLbJvIkMRf0jc9C51SCxY
B55IHXSwYE4tSKJC87lk1cKbVEi9pzg6naGKrh1v+B6floOFbNc/rNd48O2/
Gx/L32x4wfErU4EWgvB5U8X9sXkVOFrCwLX/pRj2VuTvE+4UR2Jle1WAlj5S
KM0+ok/H6DbRW5WMuLfh4JbGgoKvwnDQKSdHJVEaOD76Kh0opgA1eZJ/T4g1
7r5ytNDjjQY+u14wtztdGXJ9/I+xLW1I29XA3FJxeXhYRal7DUT0lGy55fOR
HRmqa8v1XpLg5jW7NVsTOfC1TdQy9lEHs++t7YURVFg4+2LuU5gWRH8tm2xL
a6cTMoOrLTItcGl3if/EDgUM0mT2uLrhz1dlb9PCzMTwhes2/5fXVFDEp+nU
3tcGaBVr23gvlxda3pxKPBnICrIulk+zOD/SVOzJVVf2a4Fx4lq4/V4tXFhV
OXu1lhXcfc7vD0/hBUWZC4qKtWZwbPppwrM4M3B2CeAtJQFGN56/aNtsiran
E/8GtZmi/A9ifzXqobFHSoJ7gjgKjwwwdqnrYGdwTQLjGRJuHXu+SS5aHf5a
L+py/pQGWwNVDJMYpO/4tiVP2FoW1keLbCI8WOAO8ZC6wx99UEvWz2OJIqG5
8A3tknZVUH/05s21RSok760pep9qhXO2lm8tU01R6kvFt4sauug56Cz/ekAZ
mp7mZ0U5bobGxQK9rb1WeHgLt/UPogpasjXaXxs3w0NX1I4xUpRxteHe2cjX
JOyYzrQlJeqB1n9B+qYpW9BwuJCjslAbGpGZVsr9j7a2L7LstqICSv5t6/is
bArz/AZj7f8ouPnyob8ZOyzw++7Z5YQqK5RtWtdd3ayPdNLiFsHL+mCfoP6Q
laqMpq0nG7lfyIA7dw+he1oAl07s1Y1w1EDJo39/7iaZ4XeuEOI3kiIOBh29
x32ri3bEw8M1Z8II7tXM//zvgSHoF92JOrrFDF69nObdIaYE2gPDy2rWRqBX
3G5sVqMNpt8pX643KsGPDpneuWAq2MyffPesmIwhQ/uPrVgaY/fE9tAMC2W8
Ovt3h4yZJv53pWQpbYoA0ecn9l7c8Ap5L+Wdyo7SMGe1qSjl0UZXZjHl6BYS
IfaOrujPq8J4yLdwfbGPAGt2wQf2JshhUoiXYu03AirW9agPaRsB3/z+9f4U
a2T7aRQzZMEAipkudyV/qWKLtBfZ6IQ6/DL0SDwBgpA15vdsmXedLpqwnTuj
UxAmT4WNfI9VQE61NuuaImY4lyqqVjNgBPsTDbRFj1DxosIN+vJ9Kiy5OUtJ
m0/SSaX1W/PtlbB2h/XQu1R9XLbxq5+UIuG189Vr3y4IIdOf7048G35Y+0Sk
L5DHEIXkc5sHn+tAUfsZ37Z8ZXx1vdbwYrsOWh45XxTDxgthYukMwhvcjmRK
NhXMlIUerqd9N88S8FhJ23Z6oSbwUI+od30ngOmpA25zpvpI0/jy88YkBa72
7N7jesgEFNXvJ7E5qaEp+0wb0w8BDNgieiecWR3LCz46c5fY4KHCXSn/ucjh
vCJ3Kb8IEVfH2nK/mahi/XgO99HdBpCaS5B0OseEg0xDhmlfP9GY+fkMj1ub
wJr/q2Cb2s14lDp18VUVEX/eGk59+ckaV4dDeQ/rWUKRWy5j8s4p+sWXFkKV
PFqos/o0W2S7KDbcOdOXKSsCXIOcuVXesvD2oW356ewNLy21rWMq4kdqFFu9
kSgLFnGwFw0KKUFij3sIxcQGMrW+mjFUiOGhy30R7FK6sF1akuXFQyJeEbZ8
IBJjgDMuPwv0u+XwhgtD1/NxTdSfNP41G6qN9C/qfHq2VDTtKjj9ulUI9tMS
ChJpgsjlkcF2tUMbiNW/S7I7l2hpPc2fRNM0gFP649eaezRgmCt4e6TJAi1b
v6/InpLGD5OzBnvkpFBKaQfrr2grJDoqHPh+jA21eI9V+uUZQnSWd9J1d3WI
Z+Hu+sUuAwU0afn7qpogq0PQ+qT2iZY828uSsKIDGksdSkBmwIvX4v4MWVFx
NLug09MHsGWNHuorKwClWv7rx06rIcNT4sW6RjGodKqJqDbWRqOnO8U63210
ue+y/2rjY3rz/ndFUgdVoWBaebGyXx6YTP7JTBiYguyx7FTzpp/0INE7QaU7
1GDF236ryAYIT+fr8MkOWoBAWU2brZIszmQ96r1sbAHCqRJnk4XN4Kj9yGsr
XoBkVSOvluOW8O3LWZ3tOwn4t47p4isGAYxZ3nWk3VwTLWcbOj4qUjEk6b3Q
lbfCkHbz74z1GTIsy/5yYP+hCL7PRS9ecjGFp353RUKdSMhA3PlUd/w0XQNP
JjW6yiLHnr2HD/6RwqcvlrLufrcE4UGqgXusPsil6Yr7TltDvZpumRrTNjD1
EA+JqJHHW0PN6eqXiFhxXOhDSp4hRoX5tF1KJ2PX47rpfM2NvV9/cvPoxg5l
35plGc4TxKV79r0UeWakyXEW3vM0BNoJB53O/4bo2aXiHj91WOBuxIeBbHYS
jIi/u8s+ZQQ73oQpp4rP0qLFFnotfcdpvGOe6vWOunCRbS3y8bQiRCT9cHc8
owPGVqSnf4vlkCBpkDFotgkVQ7z0rgkCVt0J3zR7UQ+jgSZ+uIIH8hwtzSKj
uWH6hp5mxBdJIPi8LREsNcfwoshB2lsxOMymH8tVuEynr2ey9K2u0PWiI6nX
OIyw7NxywwmKHrp7Dmz35LDAaw7Ontn/dIGQf8St5JoU3NMys2IcpkCRq8Ha
yTo52Dcg9+rllDqkNKhIXlIDsH2Uf8WpnAw98wlmvmF64JmUL7Q3XRYlvK6w
dnYS4OETs8B7FqKQ8XLolqU1I4Z0XMWh82qQd2LN1XROAVs3NUrtfiMPj3O/
TKxpCeOXNKWvtSbymM8yWBbsJwOntGvGDaksuLK/8WlOiToMJlWLqHX20SvK
yMYtQfqQ+8a+tWyPNhyTeed26bIuRNx2eWF/Tx6KjjSrP2LlQoPjsWoFV4wg
gLfgWdEubVCJ01JXruLDz0+jKJv5JXAtJoAnXl8XpZfbFqptN/znzdz88LGN
Ac/7buJ7xAS5xVOLDZK0kBIiFeJpOk8vlA8XUF3SA6j2ZysxUIGggs4r/vU2
EJ7NcclnQRsWZrbfHiWowNqEomP9HYCV9qOFIwnKsNy2/oOmawFHv2itO78k
Yg35YvfsAQ18m8J4ZpKbHcJ5PQIVrITx87Y/LF5xvGi4Y1REvlkTRuacD8tx
k6BiKT7QZ0kHzfT+e3awRBoj+FTzu6q3oOKUvo1z+Ar9QvGXr+abTVBbenO+
cj8ZMkYa2usMGTEvtdHHw8gMijR2+dzpVwYhCxHZwQoh1ClrT/gXJI5P+7Yo
Feoo4BPV1xaM18QxftCfkCckjg/NEuTqAgEfPTm+hzZki0bCoquT3wB9u7k9
mD8KAV9l67nfb0gQVy50+IL4Blp87OtUTxHA9aXtfcXnBPwncumYlaAIMoza
5Fv9+kJ/tD5TUOysBrK312e+chnCFdZdj57TbYEh9RMHb20z/Y7y3D1GE01I
js+LNHzIiZResY8VvwnAGXJyTIJEA1eFTyGGcpLAtmnwmKqeIb66waQ8fJKA
+iJGlWUpVKwgvLI9sIkb/yRnNUnEs6Fgnc6iCycDhL0M8R9YNoemgLHyHFE9
nLR/YbVVVxyffFhJuq1vgplXOn/cJWjh+7qQU87Clmg6PFtIiJOHT/+Y2Bjf
E+CYU0Fv+FlxMFqILFH1JUL7UMNQ58bOhTrtc/8aKg6vAiQ73Z1Eset9Z/w3
Zx2QpRyhTC3pYo2JvyRe0cQuYQbywZPy+L+KzjScqq+Nw+Z5JvPsmKdznINj
Po+ZDCWJQkiRRpQhKUrqT4NQChmSIhSRUOk8KUMJhUiICKlkyhR6vR/Xh33t
a629fvdz/z5tna9F0p3cZEyqeDoft84LAT8qkhfZxNF/9P7uXfu0oVS5PEnx
jyBIBl23ZXXc4Fh3pcwaJw0E5huOvFu3AN++0k15gibAc8HmEWezNh6Vst5y
XUsWH130ErKsVcdXB4ck5/Xn6BXe710Et6mi2uJH/6Qfy7SjDsqMTeXz9Osu
V51+yOoDx9GpriWSAbzyW/wXEi8EK6sVk2V6JqAjOxEiPk+EmC1aT8xPyYG0
ECthLJgVmNYW1FeWFDGz3DkMjovjg2bjU9vKLPF347LqqUp1zNtN/vK7kxdU
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
SoD/Ac416kc=
             "], $CellContext`j$$, All], 
            Part[CompressedData["
1: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
HBz8cZBfUgYtPgnQtJ+XxxCh2NbNUkPsGl1t6xg1wr40pYxTAUp4L9Jr9Kyz
JhpKTX4I1lqg9DCH2zZfUIT2NsaOM3t5oeXR0sbGMwmwZaUPFvlAhpITjp9q
ZSRwVr/3rNWln9QIW4HoBE9z1Cvi6icPkdG+SubppXY5/NbNYUkxFgOhkGOf
S97xw0vlNg9I0wW2J8dZCpW3cuLrj5MlJGmI014fvyxIAlNsOZgQbQFnhgyP
B/2lQMSIryqbrSgKaNN/4NKSxc7WOOvECB104FE4xCNAwf7WM/p9Ajuh+0VH
Vc4tc4jXWR4hLdlDbtzrTJN6E2CTLipPqTLHgEQj/awzuujsSoQMJzIe8Pps
d6tBBg6vZtD/pVUAEZYQy4it3N9LC9EqBmp48Np9H/OFFepXnRMeBSUkCOzz
+Fk3b4bLS1Mi/NcJmBJ869iVVT20Oqr1tukzG3CWOtq+eysDf/cLcNnHKIFf
oGvThvCW79E+pGeOIUNXoobhAzMVaJr7ffrRLk784PGnjMVaGmIOs7TUn+SA
Y/MPyvh92NDsP1/zgS/8cK2QJ/r9Nxn4I8P7eN9+DaCy03hwj8hBxX+/Xr7m
4cHOl6rlXvY8kH5pxG3Xza39eiCSV8W6SHXqC71rS9XF+JigvF5fMog7vUm1
4Jun2J3TbRO9JYiZPyWb/cNFcFUUq7d1ieFi8/gTGNSEeYYHvuUPCRBTQ1G9
s+MpJT+48/CwTx9lBwl9BKNJIH0vlNdhXRoFyRuuGqoWIPSS7+btzBXqBZjI
9a4h4NOeOEuCDCOc/nbYz/mTLL4M+3RwhFcaadwOb6isOeAuwy6u+y5WONVn
Np8uv9X75jtSj5SZY/LXYtLuEjkcKKfGaiQpgejuz26Eh3JIqOj7G9upiGcO
lLzWE+GB8BvLbB4+8iiot2dX7CtjtH9q3j20qoDiGsusaQBYNj/D+OuSDD6t
ZNl2p08R5kudB27HakPaD/1rZeoGsEZPLNzlq4YabkuS3iPiMKTEteZcpweV
/PbjnI8MoE7nTYF1LhtMdC0UeFqSIOi119NsOTO4dnZvTvJbesg84fbCVG+B
Uskrquo4pAxE585mtrLtaPNOYptPDT9GqzmNpubqQol+n/Tqdjl4eH6nfupO
LnRVUTPf08kNviu1+dfi9cEvu2H86zUxkEpm+vtBGSA+UcgkcYMOp/btHI/b
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
PTjr+TfulDOGIuqj59VZipBHJ1vtdtOH0YHj55XmRZGZ/8Gl8SdGmDe8cGU0
4ButLCLsZGCnAWpvHvMJfKSNAi4sHN9AB9xN29WLVHjh42eGprc5DNi6Ipgu
92idzmsixFb0kwdynrM/NuESwIP/eG30D6ujTXK/pi0ow+6XqkyMArpAXjrr
+PWPIohKrXyPpyoCQXtEftXZCB8cP3+3yJwdrapW2J7wyMIpNmGe5fdE2KZw
T+boRQ3Mfx04qedkiWq5u2Z3GWtizPuLv9wnqcj5JDpquIWCzbGVYo87VJFN
oZy90Wuj73IDl6/amKDtf5ICx679pbmy77hZddoYGtg6Lk5q8cMY+2EW2WJ5
2C1wafJ5vTJGbO1suqSgBXO+z0rKVGTxlr/6qm2nJPDv6QpYVlBA06gIXQW3
PzSfscZh4oVf9HjDd4/zk9WgZH7vf+/KtYHHpKm98KMuuLw3OE+YYkdiaNEb
CrcRSPpSqvcd1AWZolhq421FUC06Ju50WgdCrF3s4zjUIP4esYzJWxdbRyTm
021YMCAjMeTpbk6Mlm4xuWavhTPmt37Pq2lDppEj2WWDxzavSJyp2YY4sThv
XPOAgJJplS4n+BVwhjHdNjdaGRbX3UgDkVZw7H2cC3uGNA427Sg+Y0in/5f1
YCfXI3FUFox2qpDUQe1xxgdpbnKYJjilr/hLGdjbXp5fv8yC78J93y5XEzBA
N9vl8QAHCPoc6G0qAWy3HvmLERxA7zEUTdrWRa/elN5P/KmJIg7uTUZsuiBc
yZIksqQHfAPKgfmhyrjjhe5j439KIGx6uy7QhATsnjzhwrrWQGkwOEHfrQoT
J27MTxygwCu/t3Yml8jovCsn2DFfEusERr/1nbTBhYy4d89jKJh3uH9/ZOF7
2s2ldOqFgzRYay0z7lxTgwuFnTenvojDKt+Mg+BZYzBhMvS4OmMGjTz++fhV
Dr88PrPwtIAZysRzf06d44Blht+UkBdqcHrvtRMltSxQ/0Q5ufycOMwNNOAA
iz5+4PU5SNBUwbcRL3pYubYie9X20bfCijg8MxFcrUgCSrlJk4e9FJaHa6gF
LevAdZu+45d82CCZq+Hb07jftINdmsHpQ8KosNSwz2F1M4wkO54TE1ABda5z
Jesf5KFWq471Ij8V1Gp0LX7OqoDpyqNLKc4kuJYZx/DcjojG298M8VL5UNTc
XPWntTXSJ+rlk46zwxvNT5qeRVQQmu0uC/WWgky1UkkmLXVonp43TY7ngop7
Nn5BfCowm+R0KddunLZPxbXYmocXl5v6ft1N1wHGwn1PhnuJcPiHGXOXqiqK
RtUuFbDJQVmOTYvx7Xna5uTf/FdPagLn6V7G+HZGyCFcWHv7jAgBcarOpsZi
uPRMhnvxyyxd+MZJK9ODG90r0xv/Kc0QVCIuzCblcGL38cNCbS46YCMmIO2x
sZsfXnvJeDhQ4KtJncixCjKwmX4VHlYhIP/Tw1t590ngoUqYCz8sj/M2ideL
yMZ464mmca6oGbCkVcY/FFeEjpG2/Vsvq4FtcACl0HCR3ndRMTsw4ge9l5g6
w+Ogi8KzniXbsmRxcdtz/22cVJyL6quMVlbGSPtC4eNblZFpSrfpmbYh0EXL
ezT+AoxOSJQfeKOD39/ZnnG2omKEN1XmugMfqKUNeF2IJGKP0KVtZlWAvbkp
w9LqutjzmJdcW0ZDt8Hqv/WNXPhYTyJgU704BASsH+JT5YO/v4PF5WY54PT9
voar0Zuh9MHSK+02dRzpdp999U4a/b9x3ZLMU0LrnmXTS3ya2DkVpbBZShBd
24XXtuRrg9t75i7T5AV6KsfNtspjE/QchpGRsBodzIs/GqC6zQTPH/o82e1L
ReIYT+7V5iHapPVvncO8AIGxQ4GJORrorsN4pMRVAPbnGvi6JstiZeXnlH+v
NDFnIvhJc4kmNm+Rc7q/nQqyqqNb/byMMZu9+VSrAR8mKtzclr5FCDPusCxF
lBiixp3I/b9kbfD1r6Iau3oJqF7YB43ZFPAePm8b5WIM9SYPp+0E5eDpHoMB
1wMkuOz85bP1Lwn8YDiRKv5BDevV+Cmec3pYcz1E6GiGBpxeW+vg1tbAuF1s
vPeXVMDqaMPbWh0KfldqOTQvYYEP6bJn2KX0MbosmbNOYpJe++TEie5Hqqgi
5CUwWWeKbD/ux+kZL9PMU3Y5j24iwcRt37ytb+Rx+PCeqLLM/3+Xo0389vtF
/ytz6iCDixTwHlzoETw9SuN9vzXi94UlWizzi2A1Pg5oPRdZf/TUGr1p1Mvl
hCE3OovVuN28u0abHIfUbxXm6LU3NTRGSAjIN84m/32ji0VLQTHVc1Q0n+mN
Z97oXaGyxxwfXfTxoUo9f60yBbXGv+6JjzOAC9n875/aycMXgbH9i/zaYB/+
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
gLfgWdEubVCJ01JXruLDz0+jKJv5JXAtJoAnXl8XpZfbFqptN/znzdz88LGN
Ac/7buJ7xAS5xVOLDZK0kBIiFeJpOk8vlA8XUF3SA6j2ZysxUIGggs4r/vU2
EJ7NcclnQRsWZrbfHiWowNqEomP9HYCV9qOFIwnKsNy2/oOmawFHv2itO78k
Yg35YvfsAQ18m8J4ZpKbHcJ5PQIVrITx87Y/LF5xvGi4Y1REvlkTRuacD8tx
k6BiKT7QZ0kHzfT+e3awRBoj+FTzu6q3oOKUvo1z+Ar9QvGXr+abTVBbenO+
cj8ZMkYa2usMGTEvtdHHw8gMijR2+dzpVwYhCxHZwQoh1ClrT/gXJI5P+7Yo
Feoo4BPV1xaM18QxftCfkCckjg/NEuTqAgEfPTm+hzZki0bCoquT3wB9u7k9
mD8KAV9l67nfb0gQVy50+IL4Blp87OtUTxHA9aXtfcXnBPwncumYlaAIMoza
5Fv9+kJ/tD5TUOysBrK312e+chnCFdZdj57TbYEh9RMHb20z/Y7y3D1GE01I
js+LNHzIiZResY8VvwnAGXJyTIJEA1eFTyGGcpLAtmnwmKqeIb66waQ8fJKA
+iJGlWUpVKwgvLI9sIkb/yRnNUnEs6Fgnc6iCycDhL0M8R9YNoemgLHyHFE9
nLR/YbVVVxyffFhJuq1vgplXOn/cJWjh+7qQU87Clmg6PFtIiJOHT/+Y2Bjf
E+CYU0Fv+FlxMFqILFH1JUL7UMNQ58bOhTrtc/8aKg6vAiQ73Z1Eset9Z/w3
Zx2QpRyhTC3pYo2JvyRe0cQuYQbywZPy+L+KzjScqq+Nw+Z5JvPsmKdznINj
Po+ZDCWJQkiRRpQhKUrqT4NQChmSIhSRUOk8KUMJhUiICKlkyhR6vR/Xh33t
a629fvdz/z5tna9F0p3cZEyqeDoft84LAT8qkhfZxNF/9P7uXfu0oVS5PEnx
jyBIBl23ZXXc4Fh3pcwaJw0E5huOvFu3AN++0k15gibAc8HmEWezNh6Vst5y
XUsWH130ErKsVcdXB4ck5/Xn6BXe710Et6mi2uJH/6Qfy7SjDsqMTeXz9Osu
V51+yOoDx9GpriWSAbzyW/wXEi8EK6sVk2V6JqAjOxEiPk+EmC1aT8xPyYG0
ECthLJgVmNYW1FeWFDGz3DkMjovjg2bjU9vKLPF347LqqUp1zNtN/vK7kxdU
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
SoD/Ac416kc=
             "], $CellContext`k$$, All]}]], Axes -> True, 
         AspectRatio -> 1, AxesLabel -> {
           StringJoin["i: ", 
            ToString[$CellContext`i$$]], 
           StringJoin["j: ", 
            ToString[$CellContext`j$$]], 
           StringJoin["k: ", 
            ToString[$CellContext`k$$]]}, PlotRange -> 
         3 {{-1.*^6, 1.*^6}, {-1.*^6, 1.*^6}, {-1.*^6, 1.*^6}}], 
       "Specifications" :> {
         Grid[{{"i", 
            SetterBar[
             Dynamic[$CellContext`i$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
           "j", 
            SetterBar[
             Dynamic[$CellContext`j$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}, {
           "k", 
            SetterBar[
             Dynamic[$CellContext`k$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}]}}]}, 
       "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{475., {291., 298.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.730383799620371*^9, 3.7303838191682*^9}, 
   3.730385745234799*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"c4209454-9435-4a00-a211-1e1b44ed966c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Package and Iterate", "Subsection",
 CellChangeTimes->{{3.730383838307354*^9, 
  3.730383842988851*^9}},ExpressionUUID->"fc683233-576e-4724-ab66-\
31393a1b7498"],

Cell["Abstract the procedure witnessed above and iterate.", "Text",
 CellChangeTimes->{{3.7303838530938997`*^9, 
  3.7303838673566637`*^9}},ExpressionUUID->"c65431d1-e4da-4ad3-bd68-\
fdbfad6fe355"],

Cell[TextData[{
 "We have some global variables, namely ",
 Cell[BoxData[
  FormBox["\[CapitalMu]", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d15f0889-b688-4b83-b012-4018adef90be"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "s"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a8b4575a-ab68-4720-9144-5ac2b53e2e4e"],
 ". Assert, at the beginnings of all functions, that input dimensions match \
expectations w.r.t. these globals."
}], "Text",
 CellChangeTimes->{{3.730384441231317*^9, 3.730384511125725*^9}, {
  3.730385243588654*^9, 
  3.730385245878592*^9}},ExpressionUUID->"a56baf8f-31d9-4415-ae7f-\
ad4d9101fe24"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "ssrFn", ",", "scalar", ",", "weights", ",", "cull", ",", 
    "iterateParticleFilter"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"On", "[", "Assert", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"scalar", "[", "m_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Assert", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], "===", 
       RowBox[{"Dimensions", "[", "m", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"m", "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ssrFn", "[", 
    RowBox[{"A_", ",", "\[Zeta]_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Function", "[", 
    RowBox[{"\[Xi]", ",", "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ress", "=", 
         RowBox[{"\[Zeta]", "-", 
          RowBox[{"A", ".", "\[Xi]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ssr", "=", 
           RowBox[{
            RowBox[{"ress", "\[Transpose]"}], ".", "ress"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "ssr"}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"weights", "[", 
     RowBox[{"xs_", ",", "\[Zeta]_"}], "]"}], "[", "\[Xi]s_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"A", "=", 
       RowBox[{"partialsFn", "[", 
        RowBox[{"\[CapitalMu]", ",", "xs"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Assert", "[", 
        RowBox[{
         RowBox[{"\[CapitalMu]", "+", "1"}], "===", 
         RowBox[{"Length", "[", "xs", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Assert", "[", 
        RowBox[{
         RowBox[{"\[CapitalMu]", "+", "1"}], "===", 
         RowBox[{"Length", "[", "\[Zeta]", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Assert", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[CapitalMu]", "+", "1"}], ",", "Ns"}], "}"}], "===", 
         RowBox[{"Dimensions", "[", "\[Xi]s", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ssrs", "=", 
           RowBox[{"scalar", "/@", 
            RowBox[{
             RowBox[{"ssrFn", "[", 
              RowBox[{"A", ",", "\[Zeta]"}], "]"}], "/@", 
             RowBox[{"(", 
              RowBox[{"\[Xi]s", "\[Transpose]"}], ")"}]}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"ws", "=", " ", 
             RowBox[{
              FractionBox["1", "ssrs"], "/", 
              RowBox[{"Plus", "@@", 
               FractionBox["1", "ssrs"]}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Assert", "[", 
             RowBox[{"Ns", "===", 
              RowBox[{"Length", "[", "ws", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Assert", "[", 
             RowBox[{
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"Plus", "@@", "ws"}], ",", 
                SuperscriptBox["10.", 
                 RowBox[{"-", "6"}]]}], "]"}], "===", "1."}], "]"}], ";", 
            "\[IndentingNewLine]", "ws"}]}], "]"}]}], "]"}]}], ")"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cull", "[", 
     RowBox[{"xs_", ",", "\[Zeta]_"}], "]"}], "[", 
    RowBox[{"p_", ",", "\[Xi]s_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "indexedWeights", ",", "sortedIndexedWeights", ",", 
       "topPIndexedWeights", ",", "topPWeights", ",", "topPIndices", ",", 
       "topPParticles"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"indexedWeights", "=", 
       RowBox[{"Function", "[", 
        RowBox[{"ws", ",", 
         RowBox[{"MapThread", "[", 
          RowBox[{"List", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Range", "[", "Ns", "]"}], ",", "ws"}], "}"}]}], "]"}]}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sortedIndexedWeights", "=", 
       RowBox[{"Function", "[", 
        RowBox[{"ws", ",", 
         RowBox[{"Reverse", "@", 
          RowBox[{"SortBy", "[", 
           RowBox[{
            RowBox[{"indexedWeights", "[", "ws", "]"}], ",", "Last"}], 
           "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"topPIndexedWeights", "=", 
       RowBox[{"Function", "[", 
        RowBox[{"ws", ",", 
         RowBox[{
          RowBox[{"sortedIndexedWeights", "[", "ws", "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{";;", 
           RowBox[{"Floor", "[", 
            RowBox[{"p", " ", "Ns"}], "]"}]}], "\[RightDoubleBracket]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"topPIndices", "=", 
       RowBox[{"Function", "[", 
        RowBox[{"ws", ",", 
         RowBox[{"First", "/@", 
          RowBox[{"topPIndexedWeights", "[", "ws", "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"topPParticles", "=", 
       RowBox[{"Function", "[", 
        RowBox[{"ws", ",", "\[IndentingNewLine]", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"result", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"\[Xi]s", "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", "#"}], "\[RightDoubleBracket]"}], "&"}],
                 "/@", 
                RowBox[{"topPIndices", "[", "ws", "]"}]}], ")"}], 
              "\[Transpose]"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Assert", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[CapitalMu]", "+", "1"}], ",", 
                RowBox[{"Floor", "[", 
                 RowBox[{"p", " ", "Ns"}], "]"}]}], "}"}], "===", 
              RowBox[{"Dimensions", "[", "result", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", "result"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"topPParticles", "[", 
       RowBox[{
        RowBox[{"weights", "[", 
         RowBox[{"xs", ",", "\[Zeta]"}], "]"}], "[", "\[Xi]s", "]"}], 
       "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cull", "[", 
     RowBox[{
      RowBox[{"bts", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      ",", 
      RowBox[{"List", "/@", 
       RowBox[{
       "bts", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
     "]"}], "[", 
    RowBox[{"p", ",", 
     RowBox[{"\[Xi]s", "[", "0", "]"}]}], "]"}], "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", 
    RowBox[{"1", ";;", "3"}]}], "\[RightDoubleBracket]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.7303840128157167`*^9, 3.730384050481522*^9}, {
   3.730384096055751*^9, 3.7303841292786417`*^9}, {3.730384163769988*^9, 
   3.730384362662112*^9}, {3.730384414290154*^9, 3.730384435114149*^9}, {
   3.730384536053673*^9, 3.730384603552703*^9}, 3.7303846562467127`*^9, {
   3.730384756117662*^9, 3.730384818104335*^9}, {3.7303848533887053`*^9, 
   3.730384928293192*^9}, {3.7303849759162617`*^9, 3.730385088331685*^9}, {
   3.730385165083557*^9, 3.730385229409265*^9}, {3.730385271663096*^9, 
   3.730385311679881*^9}, {3.7303853769270363`*^9, 3.7303853985992823`*^9}, {
   3.730385462775086*^9, 3.730385467702979*^9}, {3.730385531653019*^9, 
   3.73038554191018*^9}, {3.730385809033152*^9, 3.730385809635665*^9}, {
   3.7303859112191257`*^9, 3.730386014315201*^9}, {3.730386044351882*^9, 
   3.730386114265751*^9}, {3.730386148269771*^9, 3.730386192916795*^9}, {
   3.7303862347029552`*^9, 3.730386243041699*^9}, {3.73038627422956*^9, 
   3.7303863024529448`*^9}, {3.730386409760192*^9, 3.730386826393265*^9}, {
   3.7303868575419483`*^9, 3.730387104054777*^9}, {3.7303871437913437`*^9, 
   3.730387339698223*^9}, {3.730387476204411*^9, 3.7303874770483637`*^9}, {
   3.730387540060321*^9, 3.7303875944219313`*^9}, {3.730387635969593*^9, 
   3.7303878766663437`*^9}, {3.730387922999155*^9, 3.730388218539577*^9}, {
   3.73038831995086*^9, 3.730388635283535*^9}, {3.730388694355398*^9, 
   3.730388723255842*^9}, {3.73038878775321*^9, 3.730388977657323*^9}, {
   3.7303890383669567`*^9, 
   3.730389109252442*^9}},ExpressionUUID->"0fb56541-3a7b-45f6-abc2-\
e7d4a1646523"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"0.0002809864763568382`", ",", "0.0008553617640512233`", ",", 
    RowBox[{"\[LeftSkeleton]", "996", "\[RightSkeleton]"}], ",", 
    "0.00012510798822424344`", ",", "0.0013710726303514198`"}], "}"}],
  Short[#, 3]& ]], "Output",
 CellChangeTimes->{
  3.73038852385152*^9, 3.730388637806521*^9, {3.7303887000301332`*^9, 
   3.730388724368473*^9}, 3.730388846975305*^9, 3.730388980185541*^9, {
   3.730389040585676*^9, 3.730389067488916*^9}, 3.730389102272986*^9},
 CellLabel->
  "Out[383]//Short=",ExpressionUUID->"ac8f894e-c76d-4d1c-bf0c-68e87a3575e9"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"38863.2033947038`", 
      RowBox[{"-", "12181.362576588343`"}], "310729.6135638999`"},
     {
      RowBox[{"-", "181551.16473568592`"}], 
      RowBox[{"-", "465409.4272408857`"}], 
      RowBox[{"-", "1.3397993582839235`*^6"}]},
     {"429609.8155899013`", "2.6969657349675507`*^6", 
      "1.2216270774001272`*^6"},
     {
      RowBox[{"-", "978019.4639285833`"}], 
      RowBox[{"-", "1.361789765258635`*^6"}], "294411.7617454489`"},
     {
      RowBox[{"-", "597097.0366964486`"}], 
      RowBox[{"-", "1.0646819959902365`*^6"}], 
      RowBox[{"-", "142637.54279088834`"}]},
     {"915922.2974838598`", 
      RowBox[{"-", "613055.7797727949`"}], 
      RowBox[{"-", "676983.0925786481`"}]},
     {"761507.7959753798`", "221283.5108642644`", 
      RowBox[{"-", "552445.1591711892`"}]},
     {"403762.77002241963`", "680131.8058655815`", 
      RowBox[{"-", "452022.93207286834`"}]},
     {
      RowBox[{"-", "1.3390638301110095`*^6"}], 
      RowBox[{"-", "735032.831677968`"}], "117459.35506999624`"},
     {"510941.9217821101`", "702612.3205202343`", "1.2052700228545866`*^6"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.73038852385152*^9, 3.730388637806521*^9, {3.7303887000301332`*^9, 
   3.730388724368473*^9}, 3.730388846975305*^9, 3.730388980185541*^9, {
   3.730389040585676*^9, 3.730389067488916*^9}, 3.73038910228721*^9},
 CellLabel->
  "Out[384]//MatrixForm=",ExpressionUUID->"cb001249-fb2c-4413-95a0-\
e254317b5559"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusion", "Chapter",
 CellChangeTimes->{{3.729196441150124*^9, 3.7291964428392887`*^9}, {
  3.730320907248749*^9, 
  3.730320908356058*^9}},ExpressionUUID->"056c496c-e956-4271-a13b-\
65ea1a7d373d"],

Cell["\<\
We have shown that Kalman folding (KAL) produces the same results as \
renormalized recurrent least squares (RLS) and maximum a-posteriori (MAP) for \
appropriate choices of covariances, i.e., regularization hyperparameters. We \
have further shown (numerically) that MAP produces the same results when its \
hyperparameters are swapped and inverted. 

KAL and RLS offer significant advantages in space-time efficiency by avoiding \
storage and multiplication of large matrices. In all cases, we avoid matrix \
inverses by solving linear systems internally.\
\>", "Text",
 CellChangeTimes->{{3.7291964484304113`*^9, 3.729196613945616*^9}, 
   3.7292030970835457`*^9, {3.72968771341329*^9, 3.729687716858973*^9}, {
   3.729711791511696*^9, 3.72971179468015*^9}, {3.729799002121397*^9, 
   3.729799077001767*^9}},ExpressionUUID->"b87c5758-b88d-4767-9ee6-\
94476ab03370"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{720, 851},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingStartingPageNumber->1,
PrintingPageRange->{1, Automatic},
TaggingRules->{
 "PaginationCache" -> {{2018, 2, 20, 19, 46, 39.675061`8.351092581673305}, {1,
     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
     4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 6, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 
    9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 11, 12, 12, 12, 12, 13, 14, 14, 
    15, 15, 17, 17, 19, 19, 19, 20}, Automatic}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{$RootDirectory, "Users", "bbeckman"}, 
  "DefaultStyles.nb", CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "c:1"->{
  Cell[580, 22, 491, 6, 190, "Title",ExpressionUUID->"46e72bbd-9d98-4fc3-a048-c627688b2d9e",
   CellTags->"c:1"]},
 "c:9"->{
  Cell[5115, 115, 218, 3, 70, "Chapter",ExpressionUUID->"5ca12084-879f-4910-924b-31070b62bbff",
   CellTags->"c:9"]},
 "c:10"->{
  Cell[64693, 1452, 256, 3, 317, "Subchapter",ExpressionUUID->"eb9ecf3c-cbf2-4418-a417-8f947ee7be76",
   CellTags->"c:10"]},
 "c:13"->{
  Cell[77150, 1758, 461, 6, 70, "Chapter",ExpressionUUID->"f57cb083-2e13-4a5b-8884-c47c716b6798",
   CellTags->"c:13"]},
 "c:14"->{
  Cell[231191, 5134, 181, 2, 85, "Chapter",ExpressionUUID->"0a62acb1-49c7-40e7-8ca4-b6c8f3a93974",
   CellTags->"c:14"]},
 "c:15"->{
  Cell[233144, 5186, 241, 3, 80, "Subchapter",ExpressionUUID->"08896713-5645-41eb-8d53-64e0ec086c76",
   CellTags->"c:15"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"c:1", 1154984, 21781},
 {"c:9", 1155109, 21784},
 {"c:10", 1155238, 21787},
 {"c:13", 1155374, 21790},
 {"c:14", 1155506, 21793},
 {"c:15", 1155639, 21796}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 491, 6, 190, "Title",ExpressionUUID->"46e72bbd-9d98-4fc3-a048-c627688b2d9e",
 CellTags->"c:1"],
Cell[1074, 30, 444, 10, 86, "Text",ExpressionUUID->"0ef69e3e-2e07-4f1e-b61f-a0ae41c8374c"],
Cell[CellGroupData[{
Cell[1543, 44, 206, 4, 85, "Chapter",ExpressionUUID->"7b33e853-10e8-4eca-8119-0a1902f7cb69"],
Cell[1752, 50, 1492, 29, 189, "Text",ExpressionUUID->"c320baf2-7cc2-420c-8595-6c07171d2c4f"],
Cell[3247, 81, 1831, 29, 472, "Text",ExpressionUUID->"515689e5-24c9-4f03-a68b-2166895245cd"]
}, Closed]],
Cell[CellGroupData[{
Cell[5115, 115, 218, 3, 70, "Chapter",ExpressionUUID->"5ca12084-879f-4910-924b-31070b62bbff",
 CellTags->"c:9"],
Cell[5336, 120, 938, 21, 61, "Text",ExpressionUUID->"d8064256-ea88-4413-9e76-c45a89df3e2c"],
Cell[6277, 143, 1096, 28, 61, "DisplayFormulaNumbered",ExpressionUUID->"b41450de-8c92-4abf-a6d8-d24839b3c1b9"],
Cell[7376, 173, 1281, 18, 60, "Text",ExpressionUUID->"b69e6191-6f6f-479e-9f67-c7f4911cd65f"],
Cell[CellGroupData[{
Cell[8682, 195, 1552, 26, 53, "Item",ExpressionUUID->"a79a1b73-f840-4373-9de5-4f3d510e4877"],
Cell[10237, 223, 1782, 34, 53, "Item",ExpressionUUID->"25c14485-f621-49c2-815a-0138e9bcfafe"],
Cell[12022, 259, 1608, 29, 53, "Item",ExpressionUUID->"b287db3f-854c-4605-9ef7-c238056ab28a"]
}, Closed]],
Cell[CellGroupData[{
Cell[13667, 293, 167, 3, 41, "Subsection",ExpressionUUID->"2e3a9bc5-72f8-4480-9a80-6f3b0bf6d7a4"],
Cell[13837, 298, 1571, 23, 60, "Text",ExpressionUUID->"b476c8cc-7dd2-4347-bad7-323d48c72da2"],
Cell[15411, 323, 1961, 36, 37, "DisplayFormulaNumbered",ExpressionUUID->"7d3a92e3-5494-448b-b4f2-9dabf9fef7b7"],
Cell[17375, 361, 1603, 22, 60, "Text",ExpressionUUID->"fd432c05-60e5-45d9-a0d4-e9815082cb3a"],
Cell[18981, 385, 1799, 31, 33, "DisplayFormulaNumbered",ExpressionUUID->"cb5ec10e-ef83-45dc-a95d-b26bb7cc2387"],
Cell[20783, 418, 1646, 29, 60, "Text",ExpressionUUID->"0fc7f18d-76fb-476f-9557-b54be5d9d15c"],
Cell[22432, 449, 2712, 57, 33, "DisplayFormulaNumbered",ExpressionUUID->"c9484120-6938-4df2-8e1a-776c32bc4669"],
Cell[25147, 508, 4540, 99, 220, "Text",ExpressionUUID->"d23a3057-56ef-41ce-84aa-fdc26a29db70"]
}, Closed]],
Cell[CellGroupData[{
Cell[29724, 612, 173, 3, 41, "Subsection",ExpressionUUID->"be95aebf-ae56-4456-8c29-d08dcb53f0e5"],
Cell[29900, 617, 2305, 51, 60, "Text",ExpressionUUID->"649161c4-6177-4aec-b03d-15d263642f9d"],
Cell[CellGroupData[{
Cell[32230, 672, 3876, 88, 326, "Input",ExpressionUUID->"1ca2d39a-8b84-45ae-9746-a7660d91ebc7"],
Cell[36109, 762, 451, 10, 70, "Message",ExpressionUUID->"a3629673-03f2-4ce6-85a5-6f6b0566c118"],
Cell[36563, 774, 5753, 136, 70, "Output",ExpressionUUID->"98bf2d20-5a43-4e89-906b-c67f4e5b682d"]
}, Open  ]],
Cell[42331, 913, 1320, 30, 340, "Text",ExpressionUUID->"f4fe2489-d9cf-4ac7-b0c5-50fd8c858a33"]
}, Closed]],
Cell[CellGroupData[{
Cell[43688, 948, 164, 3, 165, "Subsection",ExpressionUUID->"3967f398-3eab-437f-8b80-7de90dfe491f"],
Cell[43855, 953, 1037, 19, 442, "Text",ExpressionUUID->"5fa63877-d682-4369-8865-5a95b2249de3"]
}, Closed]],
Cell[CellGroupData[{
Cell[44929, 977, 176, 3, 165, "Subsection",ExpressionUUID->"a6c792dc-4c21-42d8-8ec5-fc669690e7b7"],
Cell[45108, 982, 1972, 48, 550, "Text",ExpressionUUID->"a05115c7-2503-49e9-af12-5669084b3ab2"]
}, Closed]],
Cell[CellGroupData[{
Cell[47117, 1035, 166, 3, 165, "Subsection",ExpressionUUID->"53320727-4bae-4b2a-ab1b-1c7c66ac6a3c"],
Cell[47286, 1040, 1666, 42, 85, "Text",ExpressionUUID->"5198a235-6d3a-495f-8224-3bb457689565"],
Cell[CellGroupData[{
Cell[48977, 1086, 322, 6, 64, "Input",ExpressionUUID->"6b2f5eca-fa77-41bf-9283-038226cefa9a"],
Cell[49302, 1094, 2055, 32, 70, "Output",ExpressionUUID->"cb18d8e8-ebd7-4c34-adcc-09f7f7a021b7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[51406, 1132, 176, 3, 165, "Subsection",ExpressionUUID->"a15882b3-57ab-4fa8-83b6-c550109aac89"],
Cell[51585, 1137, 3063, 76, 193, "Text",ExpressionUUID->"b4d63894-59ca-4552-83f4-70d2c2128d07"],
Cell[CellGroupData[{
Cell[54673, 1217, 932, 21, 111, "Input",ExpressionUUID->"8c430208-3b71-40e8-8a72-abb8cd90ffa4"],
Cell[55608, 1240, 5411, 127, 70, "Output",ExpressionUUID->"efa18d92-26de-4a6a-8fc5-9032c6a726ed"]
}, Open  ]],
Cell[61034, 1370, 596, 13, 59, "Text",ExpressionUUID->"0cca00d6-0a9f-40fb-b637-dfc3132a2c2f"],
Cell[CellGroupData[{
Cell[61655, 1387, 459, 11, 64, "Input",ExpressionUUID->"c6115b7b-08e5-4411-90de-4f0f132f5782"],
Cell[62117, 1400, 494, 11, 70, "Message",ExpressionUUID->"9ef62602-d98b-4ba0-b7b4-9bcd17e297cc"],
Cell[62614, 1413, 2030, 33, 70, "Output",ExpressionUUID->"da3016ec-a7ab-40df-893f-68e58198588e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[64693, 1452, 256, 3, 317, "Subchapter",ExpressionUUID->"eb9ecf3c-cbf2-4418-a417-8f947ee7be76",
 CellTags->"c:10"],
Cell[64952, 1457, 2004, 51, 136, "Text",ExpressionUUID->"0885edbe-95e4-4385-aba5-07fc3ab0dfba"],
Cell[CellGroupData[{
Cell[66981, 1512, 3706, 89, 300, "Input",ExpressionUUID->"bd72fa45-d9c5-4e4e-a429-bee1577a6f0d"],
Cell[70690, 1603, 451, 10, 70, "Message",ExpressionUUID->"1700fff3-286d-428d-9489-ed1af607d608"],
Cell[71144, 1615, 3984, 88, 70, "Output",ExpressionUUID->"a97d266f-145b-4594-a55b-16ffac2d1a61"]
}, Open  ]],
Cell[75143, 1706, 723, 14, 442, "Text",ExpressionUUID->"2fc132d3-59ce-4f68-b386-27a3e8b36b56"]
}, Closed]],
Cell[CellGroupData[{
Cell[75903, 1725, 167, 3, 317, "Subchapter",ExpressionUUID->"a922b9e1-5f73-4c1d-837a-1b2197bd6c77"],
Cell[76073, 1730, 1028, 22, 652, "Text",ExpressionUUID->"19112acb-50b6-4d0a-be43-d791f28fb3b1"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[77150, 1758, 461, 6, 70, "Chapter",ExpressionUUID->"f57cb083-2e13-4a5b-8884-c47c716b6798",
 CellTags->"c:13"],
Cell[77614, 1766, 2556, 45, 395, "Text",ExpressionUUID->"15ee4bb0-fc5a-41bc-80d0-20de3b23514a"],
Cell[CellGroupData[{
Cell[80195, 1815, 195, 3, 80, "Subchapter",ExpressionUUID->"8e1858e6-8e6d-4c01-8f2a-0d587b83c92f"],
Cell[CellGroupData[{
Cell[80415, 1822, 188, 3, 41, "Subsection",ExpressionUUID->"fd29c08d-8914-488e-a5e1-16d28815454d"],
Cell[80606, 1827, 959, 25, 88, "Text",ExpressionUUID->"c848505b-800e-4607-83cb-e15f01517729"],
Cell[CellGroupData[{
Cell[81590, 1856, 907, 18, 130, "Input",ExpressionUUID->"3f348c3d-26de-4b25-8ba3-c27ad607574b"],
Cell[82500, 1876, 2865, 59, 70, "Output",ExpressionUUID->"f75b0940-bc41-421e-a9e1-b8a110599ca8"]
}, Open  ]],
Cell[85380, 1938, 1701, 31, 268, "Text",ExpressionUUID->"bdc6fb65-119a-4175-b9f9-316dfeb6c274"],
Cell[87084, 1971, 1280, 33, 182, "Input",ExpressionUUID->"8ba009d7-6ad6-4e2a-a567-e2fad21156b3"],
Cell[88367, 2006, 1331, 24, 115, "Text",ExpressionUUID->"54827bd6-34f4-4737-a7ba-d3104ca29794"],
Cell[89701, 2032, 1571, 39, 260, "Input",ExpressionUUID->"e8dc79db-fc1e-44d9-9d9c-6a0d36e42fb9"],
Cell[91275, 2073, 307, 5, 60, "Text",ExpressionUUID->"c73deac6-6150-44d0-bc24-a6f391e291fd"],
Cell[CellGroupData[{
Cell[91607, 2082, 2483, 55, 260, "Input",ExpressionUUID->"82e02689-45c4-48b3-a720-b61526dcd063"],
Cell[94093, 2139, 16629, 294, 70, "Output",ExpressionUUID->"d7771438-11cf-4142-95a4-f6f7bcdc7d83"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[110771, 2439, 195, 3, 40, "Subsection",ExpressionUUID->"3c3da3f6-3bd2-4f62-968d-095193fc57c2"],
Cell[110969, 2444, 555, 12, 87, "Text",ExpressionUUID->"a694d9c7-cace-48fb-8330-ef697ae6c5fd"],
Cell[CellGroupData[{
Cell[111549, 2460, 1422, 36, 200, "Input",ExpressionUUID->"808798b0-cb49-49bf-ba5d-a4435e007b6c"],
Cell[112974, 2498, 2771, 58, 120, "Output",ExpressionUUID->"ca98268a-b946-43c6-aefa-5fcd0d0dcf55"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[115794, 2562, 169, 3, 41, "Subsection",ExpressionUUID->"767759cd-2d96-426e-94ca-643a24c684dd"],
Cell[115966, 2567, 737, 16, 87, "Text",ExpressionUUID->"afc353ba-db82-42f0-85a7-fb076016da5c"],
Cell[116706, 2585, 1012, 33, 66, "DisplayFormula",ExpressionUUID->"b3852931-b403-43be-9dd4-fbf8ad805281"],
Cell[117721, 2620, 2587, 68, 272, "Text",ExpressionUUID->"4caa1d79-69f9-4857-9ca0-f60d221f28a0"],
Cell[120311, 2690, 880, 34, 33, "DisplayFormula",ExpressionUUID->"e9b01368-12da-488b-94ce-2dd50bdf1a8e"],
Cell[121194, 2726, 3005, 77, 245, "Text",ExpressionUUID->"d6d02b47-7699-4863-b420-0e597bfb6fd0"],
Cell[CellGroupData[{
Cell[124224, 2807, 1590, 34, 78, "Item",ExpressionUUID->"d125a78e-ad63-4d0e-b225-af94823bc9f1"],
Cell[125817, 2843, 1825, 40, 79, "Item",ExpressionUUID->"2a13af40-d09a-41f5-8eab-2ae9717435cd"],
Cell[127645, 2885, 1075, 21, 54, "Item",ExpressionUUID->"cce41cf6-4157-476c-984f-2a030a9228a7"]
}, Open  ]],
Cell[128735, 2909, 1890, 41, 219, "Text",ExpressionUUID->"dbc30210-c866-4ae3-bba5-c1d548509902"],
Cell[130628, 2952, 2321, 59, 110, "DisplayFormulaNumbered",ExpressionUUID->"9130f5d5-4502-424e-a97b-08a91c27fc62"],
Cell[132952, 3013, 311, 9, 61, "Text",ExpressionUUID->"83883ae6-d076-441c-8482-06f206529b42"],
Cell[133266, 3024, 2928, 83, 104, "DisplayFormulaNumbered",ExpressionUUID->"ad866a7d-7b82-4932-9f32-38a71895f06a"]
}, Closed]],
Cell[CellGroupData[{
Cell[136231, 3112, 173, 3, 40, "Subsection",ExpressionUUID->"89146e39-831c-451a-ae64-abde3d317434"],
Cell[136407, 3117, 531, 10, 86, "Text",ExpressionUUID->"21dff09f-f36a-421e-aef5-39abef5c2d42"],
Cell[CellGroupData[{
Cell[136963, 3131, 1621, 36, 156, "Input",ExpressionUUID->"4f403321-0dff-4b61-bb6b-e5605b12d11b"],
Cell[138587, 3169, 1859, 29, 70, "Output",ExpressionUUID->"c9324158-4414-48a4-ae68-178009d683f9"]
}, Open  ]],
Cell[140461, 3201, 165, 3, 60, "Text",ExpressionUUID->"c8e13496-262a-41b9-b53e-464d80b37aa9"],
Cell[140629, 3206, 696, 17, 104, "Input",ExpressionUUID->"cb926cdf-c463-4b29-91f2-cc9b8c0af79f"],
Cell[141328, 3225, 634, 11, 163, "Text",ExpressionUUID->"4f2cb8a7-4457-4a84-a9ed-c08b68c43d39"],
Cell[CellGroupData[{
Cell[141987, 3240, 984, 23, 156, "Input",ExpressionUUID->"2c30fd53-ff05-4a76-8f5d-4e993e958741"],
Cell[142974, 3265, 3030, 53, 70, "Output",ExpressionUUID->"ad92f913-98bd-4b47-b114-c1ddccf2185c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[146053, 3324, 174, 3, 40, "Subsection",ExpressionUUID->"5d759a27-e118-43f8-b084-2f8ccbc12929"],
Cell[146230, 3329, 1320, 22, 216, "Text",ExpressionUUID->"953a9bfd-0f1e-4b34-806a-12bc491d013a"],
Cell[CellGroupData[{
Cell[147575, 3355, 3844, 86, 320, "Input",ExpressionUUID->"4668cdf5-7903-4f95-83fa-ae16e0957cb5"],
Cell[151422, 3443, 3763, 65, 70, "Output",ExpressionUUID->"1841a1d9-bd5c-448f-be14-078f40d23ea0"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[155234, 3514, 228, 4, 40, "Subsection",ExpressionUUID->"1a256cc5-717d-4f70-98d5-1eccc5dcef4a"],
Cell[155465, 3520, 2713, 63, 296, "Text",ExpressionUUID->"ed0c0833-92da-47c1-8f6d-d072ddce7e84"],
Cell[158181, 3585, 5246, 121, 416, "Input",ExpressionUUID->"3117ef4d-d3f2-49c6-a0e0-edcb55974bac"]
}, Closed]],
Cell[CellGroupData[{
Cell[163464, 3711, 161, 3, 40, "Subsection",ExpressionUUID->"79c27655-ef70-49e0-840d-4cd0f992f88f"],
Cell[163628, 3716, 3434, 80, 562, "Text",ExpressionUUID->"8010689f-309c-4f3e-bf23-5b34674387a4"],
Cell[CellGroupData[{
Cell[167087, 3800, 13830, 296, 1170, "Input",ExpressionUUID->"3870cf8d-74e6-419c-91a8-4f7425e2e6cf"],
Cell[180920, 4098, 7709, 149, 527, "Output",ExpressionUUID->"bc49a1ba-e186-43be-8f8a-cf7765bc67f4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[188690, 4254, 262, 4, 80, "Subchapter",ExpressionUUID->"ec2835d0-1e43-4366-9376-c0a251fa559b"],
Cell[188955, 4260, 1843, 32, 269, "Text",ExpressionUUID->"d78bc809-65a9-43d3-b5fa-adc52a5bb0e6"],
Cell[CellGroupData[{
Cell[190823, 4296, 13464, 279, 932, "Input",ExpressionUUID->"c2153b8f-523a-4f44-8102-f58268af8565"],
Cell[204290, 4577, 7240, 140, 527, "Output",ExpressionUUID->"b29e8a79-c86f-4dcd-9c09-793d597a1bc5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211567, 4722, 229, 4, 41, "Subsection",ExpressionUUID->"f2ba3712-eb3a-4eb3-848b-e310da76977c"],
Cell[211799, 4728, 2274, 46, 270, "Text",ExpressionUUID->"978149cd-9868-42b3-b719-ecc543111b8b"],
Cell[CellGroupData[{
Cell[214098, 4778, 11003, 229, 763, "Input",ExpressionUUID->"a82fcb89-f589-43a5-9790-852c212a730f"],
Cell[225104, 5009, 4710, 90, 70, "Output",ExpressionUUID->"fdc571fa-622e-4eed-8c1f-3e6e3f467881"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[229863, 5105, 259, 4, 40, "Subsection",ExpressionUUID->"277778b0-dcfe-45cc-9dcb-3222470948a4"],
Cell[230125, 5111, 1005, 16, 163, "Text",ExpressionUUID->"03638b05-1593-4c2c-ad46-68b784ca0a43"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[231191, 5134, 181, 2, 85, "Chapter",ExpressionUUID->"0a62acb1-49c7-40e7-8ca4-b6c8f3a93974",
 CellTags->"c:14"],
Cell[231375, 5138, 1744, 44, 141, "Text",ExpressionUUID->"2267e09b-40d6-4365-bafa-9ee4864f7ea4"],
Cell[CellGroupData[{
Cell[233144, 5186, 241, 3, 80, "Subchapter",ExpressionUUID->"08896713-5645-41eb-8d53-64e0ec086c76",
 CellTags->"c:15"],
Cell[233388, 5191, 1303, 29, 114, "Text",ExpressionUUID->"dd21213d-8d31-4a8d-a140-6b14ed289ff2"],
Cell[234694, 5222, 766, 20, 61, "DisplayFormulaNumbered",ExpressionUUID->"db86a230-5b1e-4fe3-95ba-6e4e94b0201d"],
Cell[235463, 5244, 698, 18, 33, "DisplayFormulaNumbered",ExpressionUUID->"3c09bb1f-eb89-48d7-852a-3ceb5f7869d2"],
Cell[236164, 5264, 907, 25, 61, "DisplayFormulaNumbered",ExpressionUUID->"9a6c9c06-bbdb-4d30-ae15-5a8af458f260"],
Cell[237074, 5291, 294, 7, 60, "Text",ExpressionUUID->"ba8ab0b2-920e-421b-b051-20637ca48939"],
Cell[237371, 5300, 653, 17, 61, "DisplayFormulaNumbered",ExpressionUUID->"fb8823b3-a39b-40d6-bfa4-60cc6197efe8"],
Cell[238027, 5319, 616, 19, 42, "DisplayFormulaNumbered",ExpressionUUID->"a5944e6b-c1e2-4355-bec7-2b12888c8d0e"],
Cell[CellGroupData[{
Cell[238668, 5342, 168, 3, 41, "Subsection",ExpressionUUID->"8872f092-b076-4f1d-8a50-196b896e8cb3"],
Cell[238839, 5347, 3402, 73, 247, "Text",ExpressionUUID->"437f3f51-3f90-4c54-ba24-046eb7577083"],
Cell[CellGroupData[{
Cell[242266, 5424, 1866, 39, 139, "Input",ExpressionUUID->"d142c329-5ece-4948-9cd1-0eafa77f0363"],
Cell[244135, 5465, 8056, 212, 70, "Output",ExpressionUUID->"8fc409f1-c4b4-46f5-9568-53551d874d15"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[252240, 5683, 159, 3, 40, "Subsection",ExpressionUUID->"148c0c4e-ef5b-4b4e-8401-4b6d7028be67"],
Cell[252402, 5688, 387, 6, 60, "Text",ExpressionUUID->"464727e5-9688-47e4-9fa8-a4a6e39e29ee"],
Cell[252792, 5696, 1859, 43, 130, "Input",ExpressionUUID->"22e779bc-5922-4e43-8ecc-e696f6ce8c12"]
}, Closed]],
Cell[CellGroupData[{
Cell[254688, 5744, 160, 3, 40, "Subsection",ExpressionUUID->"e34b4a76-5e00-4f52-8590-379e5e10ffc3"],
Cell[254851, 5749, 306, 5, 60, "Text",ExpressionUUID->"a23e953c-2e55-4aa9-96de-83ec96d542c5"],
Cell[255160, 5756, 3903, 70, 208, "Input",ExpressionUUID->"9fc998df-b844-4c4d-8b20-4682c622b1d0"]
}, Closed]],
Cell[CellGroupData[{
Cell[259100, 5831, 339, 5, 40, "Subsection",ExpressionUUID->"0e07c3a2-874e-408d-9286-9356269c9864"],
Cell[259442, 5838, 2781, 71, 358, "Text",ExpressionUUID->"8347131a-ee49-43f7-863e-d937b7676dfd"],
Cell[CellGroupData[{
Cell[262248, 5913, 10463, 174, 407, "Input",ExpressionUUID->"880e6f2e-2c72-44a8-8609-320d22162534"],
Cell[272714, 6089, 3850, 74, 70, "Output",ExpressionUUID->"307c4f01-b86a-4884-b5bb-ad4879fa790c"]
}, Open  ]],
Cell[276579, 6166, 5341, 144, 599, "Text",ExpressionUUID->"5fff4966-096a-44cc-ab3c-82d0767844e1"],
Cell[281923, 6312, 3453, 82, 377, "Input",ExpressionUUID->"88f5a1ae-eef7-4c06-a0db-0ec2d09b17e2"],
Cell[CellGroupData[{
Cell[285401, 6398, 21250, 424, 1701, "Input",ExpressionUUID->"75601b81-22f9-4a0c-a791-9b3d255dc64c"],
Cell[306654, 6824, 10783, 203, 70, "Output",ExpressionUUID->"5e7daecc-9a2a-4913-829e-37432afdf107"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[317486, 7033, 170, 2, 40, "Subsection",ExpressionUUID->"a346459e-9fcf-4e77-95ad-ea44400ae082"],
Cell[317659, 7037, 1211, 30, 88, "Text",ExpressionUUID->"fb7c2896-c8c0-43ad-8c12-019a556a3ca8"],
Cell[318873, 7069, 1419, 35, 135, "Input",ExpressionUUID->"71a5a415-83da-4d91-9288-7d6b203dd2ec"],
Cell[320295, 7106, 2945, 74, 274, "Text",ExpressionUUID->"e0445422-d911-42db-a626-0070632dcf10"],
Cell[CellGroupData[{
Cell[323265, 7184, 17774, 370, 1435, "Input",ExpressionUUID->"318d1ea7-8e30-4ddd-8869-27ace3ff74f0"],
Cell[341042, 7556, 8938, 172, 70, "Output",ExpressionUUID->"a837876e-989f-4c51-b6aa-2d2fd6bbbc95"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[350053, 7736, 170, 3, 85, "Chapter",ExpressionUUID->"3169a658-391d-4481-8853-308bc394f7b2"],
Cell[350226, 7741, 1212, 34, 114, "Text",ExpressionUUID->"e3567f63-cdb0-49f5-871e-418d0b9d962b"],
Cell[CellGroupData[{
Cell[351463, 7779, 5019, 121, 728, "Input",ExpressionUUID->"a73eccfc-7ced-433f-9ec3-1933b88a7b7c"],
Cell[356485, 7902, 942, 19, 29, "Print",ExpressionUUID->"859d9088-11b5-40d1-8602-25d0588f8180"],
Cell[357430, 7923, 298, 5, 51, "Output",ExpressionUUID->"d597fbb1-f1bc-4913-9e5c-06387111a425"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357765, 7933, 164, 3, 41, "Subsection",ExpressionUUID->"edfbc71e-e1ba-427b-a171-be70e151d2b9"],
Cell[CellGroupData[{
Cell[357954, 7940, 645, 13, 51, "Input",ExpressionUUID->"88892e91-bf4a-4dde-b1c3-1a61a775069e"],
Cell[358602, 7955, 872, 17, 78, "Output",ExpressionUUID->"e7bbcc44-ef57-48de-a487-09aeb044b3c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359511, 7977, 1362, 31, 104, "Input",ExpressionUUID->"8da7ec55-a034-45c5-830d-39821bac6afa"],
Cell[360876, 8010, 808, 15, 110, "Output",ExpressionUUID->"2fe14dfa-4a0b-4ca7-94a8-b94fa8014d71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361721, 8030, 243, 4, 51, "Input",ExpressionUUID->"7b1fd37c-df4e-4400-9613-a0e5a97501d6"],
Cell[361967, 8036, 731, 13, 110, "Output",ExpressionUUID->"1aed8982-0b62-4721-b108-b4672c7b578a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[362747, 8055, 163, 3, 41, "Subsection",ExpressionUUID->"14c0c48c-552b-46da-9a8e-0142fdbfe345"],
Cell[CellGroupData[{
Cell[362935, 8062, 4042, 94, 416, "Input",ExpressionUUID->"246b9295-d5de-4e9c-b619-c977f1992771"],
Cell[366980, 8158, 316398, 5209, 657, "Output",ExpressionUUID->"4c5d4f92-7f01-4003-aafb-e1d32995b9e9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[683427, 13373, 177, 3, 41, "Subsection",ExpressionUUID->"c614e1cd-5ba6-4a38-9baf-484ccee08549"],
Cell[683607, 13378, 358, 11, 61, "Text",ExpressionUUID->"06f27e96-df14-45aa-938f-b961eb587335"],
Cell[CellGroupData[{
Cell[683990, 13393, 915, 22, 104, "Input",ExpressionUUID->"1a0178b0-6036-484b-91b9-6475a82c76e2"],
Cell[684908, 13417, 1485, 39, 292, "Output",ExpressionUUID->"73c0226a-725b-4669-9720-ab2ce7555274"]
}, Open  ]],
Cell[CellGroupData[{
Cell[686430, 13461, 750, 18, 104, "Input",ExpressionUUID->"6fcc3160-1040-4ffc-899d-a85d2c57a3a4"],
Cell[687183, 13481, 2017, 40, 387, "Output",ExpressionUUID->"17ce9135-961d-4dd5-91c9-b46c6563a4a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[689237, 13526, 400, 9, 51, "Input",ExpressionUUID->"2ac7211d-fbe2-4a0c-a19b-ac53f0f41926"],
Cell[689640, 13537, 976, 23, 109, "Output",ExpressionUUID->"458ae3d2-9f84-425b-9786-f219f8a263fb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[690665, 13566, 227, 4, 41, "Subsection",ExpressionUUID->"c7b51503-6a6c-4887-be83-112940424c06"],
Cell[690895, 13572, 419, 8, 86, "Text",ExpressionUUID->"0d77ad90-153b-46ec-9e7c-2c7c6c185e85"],
Cell[691317, 13582, 435, 11, 78, "Input",ExpressionUUID->"ab4afc85-cda5-4ccb-9d8d-a5841e90b722"],
Cell[691755, 13595, 852, 22, 104, "Input",ExpressionUUID->"c70268c1-e8b2-4e50-92a5-18f9f14fd1e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[692644, 13622, 230, 4, 41, "Subsection",ExpressionUUID->"c05ae3ce-3535-4067-8ab0-8cde7ddcbdb8"],
Cell[692877, 13628, 782, 20, 104, "Input",ExpressionUUID->"468e60c3-02da-4454-9009-2fe528627c54"],
Cell[CellGroupData[{
Cell[693684, 13652, 633, 15, 78, "Input",ExpressionUUID->"6c7d905f-17f7-47be-9c25-962a24382f25"],
Cell[694320, 13669, 740, 15, 69, "Output",ExpressionUUID->"278ee1f7-6bc1-43b3-bbf7-3e5019c35a01"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[695109, 13690, 159, 3, 41, "Subsection",ExpressionUUID->"ec31f146-8931-460a-9179-6321edf47a75"],
Cell[695271, 13695, 510, 9, 138, "Text",ExpressionUUID->"e4b89aac-4a68-43c6-87b0-63e96c7f4a10"],
Cell[CellGroupData[{
Cell[695806, 13708, 572, 16, 71, "Input",ExpressionUUID->"3452abe2-a755-4fcb-9a96-a2b58f83b933"],
Cell[696381, 13726, 629, 12, 126, "Output",ExpressionUUID->"b58e869a-a3b8-4e16-a000-d54a73477eff"]
}, Open  ]],
Cell[697025, 13741, 148, 3, 60, "Text",ExpressionUUID->"b3c35773-e0dc-49c8-beb9-9a567dedff82"],
Cell[CellGroupData[{
Cell[697198, 13748, 229, 4, 51, "Input",ExpressionUUID->"e39a6e62-ad25-4aad-a1eb-341e8c2fea69"],
Cell[697430, 13754, 219, 3, 51, "Output",ExpressionUUID->"7fea39ae-5e9d-444c-a860-d153e91c1849"]
}, Open  ]],
Cell[CellGroupData[{
Cell[697686, 13762, 235, 4, 51, "Input",ExpressionUUID->"3659a9e3-93f2-42da-88ea-69a146dd6b56"],
Cell[697924, 13768, 15738, 273, 298, "Output",ExpressionUUID->"dea80fb3-600e-4162-8495-27448d2efacf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[713711, 14047, 168, 3, 41, "Subsection",ExpressionUUID->"f4e6571f-c400-4851-b8d4-c95c41505bd0"],
Cell[713882, 14052, 359, 8, 86, "Text",ExpressionUUID->"518ab8b7-5d71-4353-a3ce-7966b98966ab"],
Cell[714244, 14062, 176, 3, 60, "Text",ExpressionUUID->"906f09d0-7826-4047-8444-2381da0e96a6"],
Cell[CellGroupData[{
Cell[714445, 14069, 607, 16, 104, "Input",ExpressionUUID->"66070f2c-5dda-47e5-8835-b555adb4833e"],
Cell[715055, 14087, 523, 12, 65, "Output",ExpressionUUID->"b554ef0b-0c32-41bf-865f-66d04da50e6f"]
}, Open  ]],
Cell[715593, 14102, 1218, 36, 115, "Text",ExpressionUUID->"3235eeca-a7d5-4d46-b0c6-7a4ceb38073a"],
Cell[CellGroupData[{
Cell[716836, 14142, 3422, 78, 494, "Input",ExpressionUUID->"5924a2a7-9b19-4683-8ab2-4daa41e1a542"],
Cell[720261, 14222, 3818, 92, 508, "Output",ExpressionUUID->"e923533a-fa92-4143-ba9a-d9d62d473c40"]
}, Open  ]],
Cell[724094, 14317, 229, 4, 60, "Text",ExpressionUUID->"d6e3a490-0e2b-4544-a435-08be90edac02"],
Cell[CellGroupData[{
Cell[724348, 14325, 262, 4, 51, "Input",ExpressionUUID->"e1ac0146-439c-44f6-8e50-91cbbc7503e2"],
Cell[724613, 14331, 81726, 1363, 665, "Output",ExpressionUUID->"6dc34e0e-784f-4fd9-89ad-c7040536e542"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[806388, 15700, 334, 10, 41, "Subsection",ExpressionUUID->"5e0711c4-924a-458c-b3ce-33e9085fe1f1"],
Cell[CellGroupData[{
Cell[806747, 15714, 451, 10, 78, "Input",ExpressionUUID->"fe51d88c-4b5b-4b1f-9d04-9c267c58e0a6"],
Cell[807201, 15726, 684, 11, 78, "Output",ExpressionUUID->"b3d07fd6-6d16-42a3-bb2b-1f8f70c4591e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[807934, 15743, 418, 11, 41, "Subsection",ExpressionUUID->"bb382692-3328-41de-956b-ff1f5a361472"],
Cell[CellGroupData[{
Cell[808377, 15758, 436, 9, 78, "Input",ExpressionUUID->"a2b33a60-16ef-481e-b201-c903e1c2bb81"],
Cell[808816, 15769, 582, 11, 78, "Output",ExpressionUUID->"d48c4389-b093-47f7-8649-6b874af1610c"]
}, Open  ]],
Cell[809413, 15783, 1280, 29, 191, "Text",ExpressionUUID->"ccf8f245-133c-415a-a38c-e7ef630de126"],
Cell[CellGroupData[{
Cell[810718, 15816, 174, 3, 40, "Subsubsection",ExpressionUUID->"6fc39140-533b-469c-8bf2-a5a014b90f82"],
Cell[810895, 15821, 161, 3, 60, "Text",ExpressionUUID->"09b8fb5a-b4ed-40cd-8f18-677999cea3bf"],
Cell[CellGroupData[{
Cell[811081, 15828, 316, 7, 51, "Input",ExpressionUUID->"e8ba52b7-f774-4c3b-af84-a5bfb0b1ffcb"],
Cell[811400, 15837, 1225, 37, 276, "Output",ExpressionUUID->"e8d60376-c5f8-4bcf-8b49-c874d97375d6"]
}, Open  ]],
Cell[812640, 15877, 695, 19, 78, "Input",ExpressionUUID->"dfaf568e-30ef-436f-affe-78618d51d348"],
Cell[813338, 15898, 196, 3, 60, "Text",ExpressionUUID->"96ce34de-e7c9-4134-81e7-6e70a5023717"],
Cell[CellGroupData[{
Cell[813559, 15905, 2021, 50, 312, "Input",ExpressionUUID->"ec1e2672-5646-4519-ab39-09b8c81c1892"],
Cell[815583, 15957, 2331, 56, 288, "Output",ExpressionUUID->"fa19cbd6-5eae-4f48-a239-1bc50e84d806"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[817963, 16019, 203, 3, 40, "Subsubsection",ExpressionUUID->"1071a97b-9de3-4dd8-91b1-585e6733971b"],
Cell[CellGroupData[{
Cell[818191, 16026, 1651, 43, 234, "Input",ExpressionUUID->"1898fa7b-8dcf-4e0e-aab0-0e629781e321"],
Cell[819845, 16071, 2306, 55, 292, "Output",ExpressionUUID->"85f3fe88-61d2-44d4-886c-41b89d48ab7a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[822212, 16133, 167, 3, 41, "Subsection",ExpressionUUID->"d74d286b-7b01-4745-b903-b61a103503b6"],
Cell[CellGroupData[{
Cell[822404, 16140, 222, 4, 51, "Input",ExpressionUUID->"3b15fa89-b72f-4d3f-ab5a-974e7c28b2b7"],
Cell[822629, 16146, 222, 5, 51, "Output",ExpressionUUID->"a4ca8ecd-598b-4963-9700-e3f224d06726"]
}, Open  ]],
Cell[CellGroupData[{
Cell[822888, 16156, 676, 19, 104, "Input",ExpressionUUID->"1e6028f6-c334-4c5e-9c10-7808a3ae30b1"],
Cell[823567, 16177, 301, 6, 51, "Output",ExpressionUUID->"7ec6597b-f960-4456-bd76-6dd2a0d8e34f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[823905, 16188, 288, 6, 51, "Input",ExpressionUUID->"5bd0e76b-5c66-488b-b734-b4caf94d7ee0"],
Cell[824196, 16196, 315789, 5200, 621, "Output",ExpressionUUID->"c4209454-9435-4a00-a211-1e1b44ed966c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1140034, 21402, 167, 3, 41, "Subsection",ExpressionUUID->"fc683233-576e-4724-ab66-31393a1b7498"],
Cell[1140204, 21407, 197, 3, 60, "Text",ExpressionUUID->"c65431d1-e4da-4ad3-bd68-fdbfad6fe355"],
Cell[1140404, 21412, 685, 18, 113, "Text",ExpressionUUID->"a56baf8f-31d9-4415-ae7f-ad4d9101fe24"],
Cell[CellGroupData[{
Cell[1141114, 21434, 8983, 226, 1224, "Input",ExpressionUUID->"0fb56541-3a7b-45f6-abc2-e7d4a1646523"],
Cell[1150100, 21662, 602, 12, 92, "Output",ExpressionUUID->"ac8f894e-c76d-4d1c-bf0c-68e87a3575e9"],
Cell[1150705, 21676, 1979, 48, 284, "Output",ExpressionUUID->"cb001249-fb2c-4413-95a0-e254317b5559"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1152745, 21731, 206, 4, 85, "Chapter",ExpressionUUID->"056c496c-e956-4271-a13b-65ea1a7d373d"],
Cell[1152954, 21737, 878, 15, 266, "Text",ExpressionUUID->"b87c5758-b88d-4767-9ee6-94476ab03370"]
}, Open  ]]
}, Open  ]]
}
]
*)

